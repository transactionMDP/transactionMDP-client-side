{"version":3,"file":"sweetalert2-react-content.es.min.js","sources":["../src/mounts.js","../src/index.js"],"sourcesContent":["export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getContent(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {}\nconst error = message => new Error(`sweetalert2-react-content: ${message}`)\n\nexport default function withReactContent(ParentSwal) {\n  return class extends ParentSwal {\n    static argsToParams(args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'type'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n    _main(params) {\n      params = Object.assign({}, params)\n\n      params.onOpen = params.onOpen || noop\n      params.onClose = params.onClose || noop\n\n      mounts.forEach(({ key, getter }) => {\n        if (React.isValidElement(params[key])) {\n          const reactElement = params[key]\n          params[key] = ' '\n\n          let domElement\n\n          const superOnOpen = params.onOpen\n          params.onOpen = () => {\n            domElement = getter(ParentSwal)\n            ReactDOM.render(reactElement, domElement)\n            superOnOpen()\n          }\n\n          const superOnClose = params.onClose\n          params.onClose = () => {\n            superOnClose()\n            ReactDOM.unmountComponentAtNode(domElement)\n          }\n        }\n      })\n\n      return super._main(params)\n    }\n    update() {\n      throw error(\n        'Swal.update() is not yet supported. See https://github.com/sweetalert2/sweetalert2-react-content/issues/73',\n      )\n    }\n  }\n}\n"],"names":["mounts","key","getter","swal","getTitle","getContent","getConfirmButton","getCancelButton","getFooter","noop","error","message","Error","ParentSwal","args","React","isValidElement","params","forEach","name","index","undefined","argsToParams","Object","assign","onOpen","onClose","domElement","reactElement","superOnOpen","ReactDOM","render","superOnClose","unmountComponentAtNode"],"mappings":";;;;;;05BAAO,IAAMA,EAAS,CACpB,CACEC,IAAK,QACLC,OAAQ,SAAAC,UAAQA,EAAKC,aAEvB,CACEH,IAAK,OACLC,OAAQ,SAAAC,UAAQA,EAAKE,eAEvB,CACEJ,IAAK,oBACLC,OAAQ,SAAAC,UAAQA,EAAKG,qBAEvB,CACEL,IAAK,mBACLC,OAAQ,SAAAC,UAAQA,EAAKI,oBAEvB,CACEN,IAAK,SACLC,OAAQ,SAAAC,UAAQA,EAAKK,eCfnBC,EAAO,aACPC,EAAQ,SAAAC,UAAW,IAAIC,2CAAoCD,oBAElD,SAA0BE,waAClBA,6CACCC,MACdC,EAAMC,eAAeF,EAAK,KAAOC,EAAMC,eAAeF,EAAK,IAAK,KAC5DG,EAAS,UACb,QAAS,OAAQ,QAAQC,QAAQ,SAACC,EAAMC,QACpBC,IAAhBP,EAAKM,KACPH,EAAOE,GAAQL,EAAKM,MAGjBH,SAEAJ,EAAWS,aAAaR,sCAG7BG,UACJA,EAASM,OAAOC,OAAO,GAAIP,IAEpBQ,OAASR,EAAOQ,QAAUhB,EACjCQ,EAAOS,QAAUT,EAAOS,SAAWjB,EAEnCT,EAAOkB,QAAQ,gBAAGjB,IAAAA,IAAKC,IAAAA,UACjBa,EAAMC,eAAeC,EAAOhB,IAAO,KAIjC0B,EAHEC,EAAeX,EAAOhB,GAC5BgB,EAAOhB,GAAO,QAIR4B,EAAcZ,EAAOQ,OAC3BR,EAAOQ,OAAS,WACdE,EAAazB,EAAOW,GACpBiB,EAASC,OAAOH,EAAcD,GAC9BE,SAGIG,EAAef,EAAOS,QAC5BT,EAAOS,QAAU,WACfM,IACAF,EAASG,uBAAuBN,gDAKnBV,0CAGbP,EACJ"}