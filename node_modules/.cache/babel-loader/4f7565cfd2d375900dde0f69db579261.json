{"ast":null,"code":"import { API_BASE_URL, EVENT_LIST_SIZE, CLUB_LIST_SIZE, ACCESS_TOKEN } from '../../../blk-design-system-react-master/src/variables/constants';\n\nvar request = function request(options) {\n  var headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  var defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(function (response) {\n    return response.json().then(function (json) {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n};\n\nexport function getAllEvents(page, size) {\n  page = page || 0;\n  size = size || EVENT_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/events?page=\" + page + \"&size=\" + size,\n    method: 'GET'\n  });\n}\nexport function getAllClubs(size) {\n  size = size || CLUB_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/clubs?size=\" + size,\n    method: 'GET'\n  });\n}\nexport function createEvent(eventData) {\n  return request({\n    url: API_BASE_URL + \"/events\",\n    method: 'POST',\n    body: JSON.stringify(eventData)\n  });\n}\nexport function updateEvent(id, eventRequest) {\n  return request({\n    url: API_BASE_URL + \"/events/\" + id,\n    method: 'PUT',\n    body: JSON.stringify(eventRequest)\n  });\n}\nexport function deleteEvent(id) {\n  return request({\n    url: API_BASE_URL + \"/events/\" + id,\n    method: 'DELETE'\n  });\n}\nexport function getEventDetails(id) {\n  return request({\n    url: API_BASE_URL + \"/events/\" + id,\n    method: 'GET'\n  });\n}\nexport function castReaction(reactionData) {\n  return request({\n    url: API_BASE_URL + \"/events/\" + reactionData.eventId + \"/reactions\",\n    method: 'POST',\n    body: JSON.stringify(reactionData)\n  });\n}\nexport function castFollower(followerData) {\n  return request({\n    url: API_BASE_URL + \"/clubs/\" + followerData.clubId + \"/followers\",\n    method: 'POST',\n    body: JSON.stringify(followerData)\n  });\n}\nexport function login(loginRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signin\",\n    method: 'POST',\n    body: JSON.stringify(loginRequest)\n  });\n}\nexport function signup(signupRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signup\",\n    method: 'POST',\n    body: JSON.stringify(signupRequest)\n  });\n}\nexport function checkUsernameAvailability(username) {\n  return request({\n    url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\n    method: 'GET'\n  });\n}\nexport function checkEmailAvailability(email) {\n  return request({\n    url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n    method: 'GET'\n  });\n}\nexport function getCurrentUser() {\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: API_BASE_URL + \"/user/me\",\n    method: 'GET'\n  });\n}\nexport function getUserProfile(username) {\n  return request({\n    url: API_BASE_URL + \"/users/\" + username,\n    method: 'GET'\n  });\n}\nexport function updateUserProfile(username, userRequest) {\n  return request({\n    url: API_BASE_URL + \"/users/\" + username,\n    method: 'PUT',\n    body: JSON.stringify(userRequest)\n  });\n}\nexport function getUserCreatedEvents(username, page, size) {\n  page = page || 0;\n  size = size || EVENT_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/users/\" + username + \"/events?page=\" + page + \"&size=\" + size,\n    method: 'GET'\n  });\n}\nexport function getUserReactedEvents(username, page, size) {\n  page = page || 0;\n  size = size || EVENT_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/users/\" + username + \"/reactions?page=\" + page + \"&size=\" + size,\n    method: 'GET'\n  });\n}\nexport function getUserFollowedClubs(username, page, size) {\n  page = page || 0;\n  size = size || EVENT_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/users/\" + username + \"/followers?page=\" + page + \"&size=\" + size,\n    method: 'GET'\n  });\n}\nexport function getStatistics() {\n  return request({\n    url: API_BASE_URL + \"/dashboard\",\n    method: 'GET'\n  });\n}\nexport function uploadSingleFile(file) {\n  var data = new FormData();\n  data.append('file', file);\n  data.append('Content-Type', 'application/x-www-form-urlencoded');\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    data.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  return fetch(API_BASE_URL + \"/auth/uploadFile\", {\n    method: 'POST',\n    body: data\n  }).then(function (response) {\n    return response.json().then(function (json) {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n}","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/util/APIUtils.js"],"names":["API_BASE_URL","EVENT_LIST_SIZE","CLUB_LIST_SIZE","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","getAllEvents","page","size","method","getAllClubs","createEvent","eventData","body","JSON","stringify","updateEvent","id","eventRequest","deleteEvent","getEventDetails","castReaction","reactionData","eventId","castFollower","followerData","clubId","login","loginRequest","signup","signupRequest","checkUsernameAvailability","username","checkEmailAvailability","email","getCurrentUser","getUserProfile","updateUserProfile","userRequest","getUserCreatedEvents","getUserReactedEvents","getUserFollowedClubs","getStatistics","uploadSingleFile","file","data","FormData"],"mappings":"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","sourcesContent":["import { API_BASE_URL, EVENT_LIST_SIZE, CLUB_LIST_SIZE, ACCESS_TOKEN } from '../../../blk-design-system-react-master/src/variables/constants';\n\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n    \n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response => \n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\nexport function getAllEvents(page, size) {\n    page = page || 0;\n    size = size || EVENT_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/events?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function getAllClubs(size) {\n    size = size || CLUB_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/clubs?size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function createEvent(eventData) {\n    return request({\n        url: API_BASE_URL + \"/events\",\n        method: 'POST',\n        body: JSON.stringify(eventData)\n    });\n}\n\nexport function updateEvent(id, eventRequest) {\n    return request({\n        url: API_BASE_URL + \"/events/\" + id,\n        method: 'PUT',\n        body: JSON.stringify(eventRequest)\n    });\n}\n\nexport function deleteEvent(id) {\n    return request({\n        url: API_BASE_URL + \"/events/\" + id,\n        method: 'DELETE'\n    });\n}\n\n\nexport function getEventDetails(id) {\n    return request({\n        url: API_BASE_URL + \"/events/\" + id,\n        method: 'GET'\n    });\n}\n\nexport function castReaction(reactionData) {\n    return request({\n        url: API_BASE_URL + \"/events/\" + reactionData.eventId + \"/reactions\",\n        method: 'POST',\n        body: JSON.stringify(reactionData)\n    });\n}\n\nexport function castFollower(followerData) {\n    return request({\n        url: API_BASE_URL + \"/clubs/\" + followerData.clubId + \"/followers\",\n        method: 'POST',\n        body: JSON.stringify(followerData)\n    });\n}\n\nexport function login(loginRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signin\",\n        method: 'POST',\n        body: JSON.stringify(loginRequest)\n    });\n}\n\nexport function signup(signupRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signup\",\n        method: 'POST',\n        body: JSON.stringify(signupRequest)\n    });\n}\n\nexport function checkUsernameAvailability(username) {\n    return request({\n        url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\n        method: 'GET'\n    });\n}\n\nexport function checkEmailAvailability(email) {\n    return request({\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n        method: 'GET'\n    });\n}\n\nexport function getCurrentUser() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/user/me\",\n        method: 'GET'\n    });\n}\n\nexport function getUserProfile(username) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + username,\n        method: 'GET'\n    });\n}\n\nexport function updateUserProfile(username, userRequest) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + username,\n        method: 'PUT',\n        body: JSON.stringify(userRequest)\n    });\n}\n\nexport function getUserCreatedEvents(username, page, size) {\n    page = page || 0;\n    size = size || EVENT_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/users/\" + username + \"/events?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function getUserReactedEvents(username, page, size) {\n    page = page || 0;\n    size = size || EVENT_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/users/\" + username + \"/reactions?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function getUserFollowedClubs(username, page, size) {\n    page = page || 0;\n    size = size || EVENT_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/users/\" + username + \"/followers?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function getStatistics() {\n\n    return request({\n        url: API_BASE_URL + \"/dashboard\",\n        method: 'GET'\n    });\n}\n\nexport function uploadSingleFile(file) {\n    const data = new FormData();\n    data.append('file', file);\n    data.append('Content-Type', 'application/x-www-form-urlencoded');\n\n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        data.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n    }\n\n    return fetch(API_BASE_URL + \"/auth/uploadFile\", {\n        method: 'POST',\n        body: data\n    }).then(response =>\n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n}\n"]},"metadata":{},"sourceType":"module"}