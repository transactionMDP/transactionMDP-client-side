{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/routes/App.js\";\nimport React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../variables/constants'; //import EventList from '../views/HomePage/HomePage';\n\nimport Dashboard from '../views/Dashboard/Dashboard.jsx';\nimport Login from '../views/Login'; //import Signup from '../views/SignUpPage/SignUpPage';\n//import Profile from '../views/ClubPage/ClubPage';\n//import Event from '../views/EventPage/EventPage';\n\nimport NotFound from '../views/NotFound/NotFound'; //import LoadingIndicator from '../components/LoadingIndicator/LoadingIndicator';\n\nimport PrivateRoute from './PrivateRoute';\nimport { notification } from 'antd';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: true\n    };\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadCurrentUser = _this.loadCurrentUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3\n    });\n    return _this;\n  }\n  /*componentWillMount(){\n    this.loadCurrentUser();\n    alert(this.state.isAuthenticated);\n  }*/\n\n\n  _createClass(App, [{\n    key: \"loadCurrentUser\",\n    value: function loadCurrentUser() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getCurrentUser().then(function (response) {\n        _this2.setState({\n          currentUser: response,\n          isAuthenticated: true,\n          isLoading: false\n        }); //alert(this.state.isAuthenticated);\n\n      }).catch(function (error) {\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadCurrentUser();\n    }\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout() {\n      var redirectTo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n      var notificationType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"success\";\n      var description = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"Vous êtes déconnecté avec succès.\";\n      localStorage.removeItem(ACCESS_TOKEN);\n      this.setState({\n        currentUser: null,\n        isAuthenticated: false\n      });\n      this.props.history.push('/');\n      notification[notificationType]({\n        message: 'Event App',\n        description: description\n      });\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      notification.success({\n        message: 'Event App',\n        description: \"Vous êtes connecté avec succès.\"\n      });\n      this.loadCurrentUser();\n      this.props.history.push(\"/\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      /*if(this.state.isLoading) {\n        return <LoadingIndicator />\n      }*/\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/login\",\n        render: function render(props) {\n          return React.createElement(Login, Object.assign({\n            onLogin: _this3.handleLogin\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/routes/App.js"],"names":["React","Component","Route","withRouter","Switch","getCurrentUser","ACCESS_TOKEN","Dashboard","Login","NotFound","PrivateRoute","notification","App","props","state","currentUser","isAuthenticated","isLoading","handleLogout","bind","loadCurrentUser","handleLogin","config","placement","top","duration","setState","then","response","catch","error","redirectTo","notificationType","description","localStorage","removeItem","history","push","message","success"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Route,\n  withRouter,\n  Switch\n} from 'react-router-dom';\n\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../variables/constants';\n\n//import EventList from '../views/HomePage/HomePage';\nimport Dashboard from '../views/Dashboard/Dashboard.jsx';\nimport Login from '../views/Login';\n//import Signup from '../views/SignUpPage/SignUpPage';\n//import Profile from '../views/ClubPage/ClubPage';\n//import Event from '../views/EventPage/EventPage';\nimport NotFound from '../views/NotFound/NotFound';\n//import LoadingIndicator from '../components/LoadingIndicator/LoadingIndicator';\nimport PrivateRoute from './PrivateRoute';\n\nimport { notification } from 'antd';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: true\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3,\n    });    \n  }\n\n  /*componentWillMount(){\n    this.loadCurrentUser();\n    alert(this.state.isAuthenticated);\n  }*/\n\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n      //alert(this.state.isAuthenticated);\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });  \n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"Vous êtes déconnecté avec succès.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n\n    this.props.history.push('/');\n    \n    notification[notificationType]({\n      message: 'Event App',\n      description: description,\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Event App',\n      description: \"Vous êtes connecté avec succès.\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    /*if(this.state.isLoading) {\n      return <LoadingIndicator />\n    }*/\n    return (\n              <Switch>      \n                {/*<Route exact path=\"/\"\n                  render={(props) => <EventList isAuthenticated={this.state.isAuthenticated}\n                      currentUser={this.state.currentUser} handleLogout={this.handleLogout} onLogout={this.handleLogout} {...props} />}>\n                </Route>*/}\n                <Route path=\"/login\" \n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />} />\n                {/*<Route path=\"/signup\" component={Signup} />\n                <Route path=\"/users/:username\"\n                  render={(props) => <Profile isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}>\n                </Route>\n                <Route path=\"/events/:id\"\n                         render={(props) => <Event isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}>\n                </Route>\n                <PrivateRoute path=\"/dash\" component={Dashboard} handleLogout={this.handleLogout} currentUser={this.state.currentUser} isAuthenticated={this.state.isAuthenticated} />*/}\n\n                <Route component={NotFound} />\n\n              </Switch>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}