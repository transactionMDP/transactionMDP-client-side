{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\"; //import { Route, Switch } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\n//import PerfectScrollbar from \"perfect-scrollbar\";\n// core components\n//import AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\n//import Footer from \"components/Footer/Footer.jsx\";\n\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport routes from \"routes.js\";\nimport logo from \"assets/img/react-logo.png\";\nvar ps;\n\nvar Admin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Admin, _React$Component);\n\n  function Admin() {\n    _classCallCheck(this, Admin);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Admin).apply(this, arguments));\n  }\n\n  _createClass(Admin, [{\n    key: \"render\",\n\n    /*constructor(props) {\n      super(props);\n      this.state = {\n        backgroundColor: \"primary\",\n        sidebarOpened:\n          document.documentElement.className.indexOf(\"nav-open\") !== -1\n      };\n    }*/\n\n    /*componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        document.documentElement.className += \" perfect-scrollbar-on\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n        ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n    }\n    componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.className += \" perfect-scrollbar-off\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    }*/\n\n    /*componentDidUpdate(e) {\n      if (e.history.action === \"PUSH\") {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          let tables = document.querySelectorAll(\".table-responsive\");\n          for (let i = 0; i < tables.length; i++) {\n            ps = new PerfectScrollbar(tables[i]);\n          }\n        }\n        document.documentElement.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n        this.refs.mainPanel.scrollTop = 0;\n      }\n    }\n    // this function opens and closes the sidebar on small devices\n    toggleSidebar = () => {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.setState({ sidebarOpened: !this.state.sidebarOpened });\n    };*/\n\n    /*getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout === \"/admin\") {\n          return (\n            <Route\n              path={prop.layout + prop.path}\n              component={prop.component}\n              key={key}\n            />\n          );\n        } else {\n          return null;\n        }\n      });\n    };\n    handleBgClick = color => {\n      this.setState({ backgroundColor: color });\n    };*/\n\n    /*getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (\n          this.props.location.pathname.indexOf(\n            routes[i].layout + routes[i].path\n          ) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n      return \"Brand\";\n    };*/\n    value: function render() {\n      return React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return Admin;\n}(React.Component);\n\nexport default Admin;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/layouts/Admin/Admin.jsx"],"names":["React","Sidebar","FixedPlugin","routes","logo","ps","Admin","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AAEA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,IAAIC,EAAJ;;IAEMC,K;;;;;;;;;;;;;;AACJ;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;6BAYS;AACP,aACE,yCADF;AAsCD;;;;EAlHiBN,KAAK,CAACO,S;;AAqH1B,eAAeD,KAAf","sourcesContent":["import React from \"react\";\n//import { Route, Switch } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\n//import PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\n//import AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\n//import Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  /*constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"primary\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }*/\n  /*componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }*/\n  /*componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };*/\n  /*getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };*/\n  /*getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };*/\n  render() {\n    return (\n      <>\n        {/*<div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"https://www.bcp.com/\",\n              text: \"Banque Populaire\",\n              imgSrc: logo\n            }}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>{this.getRoutes(routes)}</Switch>\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>*/}\n        {/*<FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleBgClick={this.handleBgClick}\n        />*/}\n      </>\n    );\n  }\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}