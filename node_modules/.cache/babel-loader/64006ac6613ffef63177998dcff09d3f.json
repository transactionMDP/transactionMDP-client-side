{"ast":null,"code":"import _objectWithoutProperties from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/routes/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../redux/actions\";\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return props.isAuthenticated.payload ? React.createElement(Component, Object.assign({}, rest, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n/*\n\nconst ConnectedList = ({ article }) => (\n    <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\" key={el.id}>\n            {article.payload}\n        </li>\n    </ul>\n);*/","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/routes/PrivateRoute.js"],"names":["React","Route","Redirect","connect","getCurrentUser","PrivateRoute","Component","component","isAuthenticated","rest","props","payload","pathname","state","from","location","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,KADJ,EAEIC,QAFJ,QAGS,kBAHT;AAIA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBC,eAAzB,QAAyBA,eAAzB;AAAA,MAA6CC,IAA7C;;AAAA,SACjB,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACTA,KAAK,CAACF,eAAN,CAAsBG,OAAtB,GACA,oBAAC,SAAD,oBAAeF,IAAf,EAAyBC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,GAGA,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFE,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADiB;AAAA,CAArB;;AAkBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAU;AAC9B,SAAO;AACHL,IAAAA,eAAe,EAAEK,KAAK,CAACL;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAeL,OAAO,CAACa,eAAD,CAAP,CAAyBX,YAAzB,CAAf;AACA","sourcesContent":["import React from 'react';\nimport {\n    Route,\n    Redirect\n  } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {getCurrentUser} from \"../redux/actions\";\n  \n  \nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n          props.isAuthenticated.payload ? (\n          <Component {...rest} {...props}/>\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n);\n\nconst mapStateToProps = (state) =>{\n    return {\n        isAuthenticated: state.isAuthenticated\n    };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n/*\n\nconst ConnectedList = ({ article }) => (\n    <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\" key={el.id}>\n            {article.payload}\n        </li>\n    </ul>\n);*/\n"]},"metadata":{},"sourceType":"module"}