{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Dashboard.jsx\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport logo from \"assets/img/react-logo.png\";\nimport { getCurrentUser } from \"../../util/APIUtils\"; // core components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport dashboardRoutesAdmin from \"routes/dashboardAdmin.jsx\";\nimport dashboardRoutesUser from \"routes/dashboardUser.jsx\";\nimport Transfer from \"views/Dashboard/Sections/Transfer.jsx\";\nimport NotFound from \"../NotFound\";\nvar ps;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleToggleSidebar = function () {\n      document.documentElement.classList.toggle(\"nav-open\");\n\n      _this.setState({\n        sidebarOpened: !_this.state.sidebarOpened\n      });\n    };\n\n    _this.handleBgClick = function (color) {\n      _this.setState({\n        backgroundColor: color\n      });\n    };\n\n    _this.getBrandText = function (path) {\n      for (var i = 0; i < dashboardRoutesUser.length; i++) {\n        if (_this.props.location.pathname.indexOf(dashboardRoutesUser[i].layout + dashboardRoutesUser[i].path) !== -1) {\n          return dashboardRoutesUser[i].name;\n        }\n      }\n\n      return \"Brand\";\n    };\n\n    _this.state = {\n      user: null,\n      currentUser: _this.props.currentUser,\n      isLoading: true,\n      backgroundColor: \"primary\",\n      sidebarOpened: document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n    _this.loadUserProfile = _this.loadUserProfile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"loadUserProfile\",\n    value: function loadUserProfile() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getCurrentUser().then(function (response) {\n        _this2.setState({\n          user: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this2.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        document.documentElement.className += \" perfect-scrollbar-on\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n        ps = new PerfectScrollbar(this.refs.mainPanel, {\n          suppressScrollX: true\n        });\n        var tables = document.querySelectorAll(\".table-responsive\");\n\n        for (var i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n\n      this.loadUserProfile();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.className += \" perfect-scrollbar-off\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.action === \"PUSH\") {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          var tables = document.querySelectorAll(\".table-responsive\");\n\n          for (var i = 0; i < tables.length; i++) {\n            ps = new PerfectScrollbar(tables[i]);\n          }\n        }\n\n        document.documentElement.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n        this.refs.mainPanel.scrollTop = 0;\n      } //this.loadUserProfile();\n\n    } // this function opens and closes the sidebar on small devices\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var dashboardRoutes;\n      {\n        /*this.props.currentUser.role===\"ROLE_CLUB\"*/\n        true ? dashboardRoutes = dashboardRoutesUser : dashboardRoutes = dashboardRoutesAdmin;\n      }\n      var switchRoutes =\n      /*this.props.currentUser.role===\"ROLE_USER\"?(*/\n      React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/dash/transfer\",\n        render: function render(props) {\n          return React.createElement(Transfer, Object.assign({\n            currentUser: _this3.state.currentUser\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }));\n      /*):(\n          <Switch>\n              {/*<Route exact path=\"/dash/dashboard\"\n                   render={(props) => <DashboardPage currentUser={this.state.currentUser} {...props} />}>\n            </Route>\n            <Route exact path=\"/dash/profile\"\n                   render={(props) => <Profile currentUser={this.state.currentUser} {...props} />}>\n            </Route>*}\n            <Route component={NotFound} />\n          </Switch>\n      );*/\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        bgColor: this.state.backgroundColor,\n        logo: {\n          outterLink: \"https://www.bcp.com/\",\n          text: \"Banque Populaire\",\n          imgSrc: logo\n        },\n        toggleSidebar: this.handleToggleSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        data: this.state.backgroundColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(AdminNavbar, Object.assign({}, this.props, {\n        /*routes={dashboardRoutes}*/\n        brandText: this.getBrandText(this.props.location.pathname),\n        toggleSidebar: this.toggleSidebar,\n        sidebarOpened: this.state.sidebarOpened,\n        handleLogout: this.props.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })),\n      /*this.getRoutes*/\n      switchRoutes, // we don't want the Footer to be rendered on map page\n      this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Dashboard.jsx"],"names":["React","Route","Switch","PerfectScrollbar","logo","getCurrentUser","AdminNavbar","Footer","Sidebar","FixedPlugin","dashboardRoutesAdmin","dashboardRoutesUser","Transfer","NotFound","ps","Dashboard","props","handleToggleSidebar","document","documentElement","classList","toggle","setState","sidebarOpened","state","handleBgClick","color","backgroundColor","getBrandText","path","i","length","location","pathname","indexOf","layout","name","user","currentUser","isLoading","className","loadUserProfile","bind","then","response","catch","error","status","notFound","serverError","navigator","platform","remove","refs","mainPanel","suppressScrollX","tables","querySelectorAll","destroy","e","history","action","scrollTop","scrollingElement","dashboardRoutes","switchRoutes","outterLink","text","imgSrc","toggleSidebar","handleLogout","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport logo from \"assets/img/react-logo.png\";\nimport {getCurrentUser} from \"../../util/APIUtils\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport dashboardRoutesAdmin from \"routes/dashboardAdmin.jsx\";\nimport dashboardRoutesUser from \"routes/dashboardUser.jsx\";\n\nimport Transfer from \"views/Dashboard/Sections/Transfer.jsx\";\n\nimport NotFound from \"../NotFound\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      currentUser: this.props.currentUser,\n      isLoading: true,\n      backgroundColor: \"primary\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);\n  }\n  loadUserProfile() {\n    this.setState({\n      isLoading: true\n    });\n\n    getCurrentUser()\n        .then(response => {\n          this.setState({\n            user: response,\n            isLoading: false\n          });\n        }).catch(error => {\n      if(error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    this.loadUserProfile();\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n    //this.loadUserProfile();\n  }\n  // this function opens and closes the sidebar on small devices\n  handleToggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  /*getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };*/\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < dashboardRoutesUser.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n            dashboardRoutesUser[i].layout + dashboardRoutesUser[i].path\n        ) !== -1\n      ) {\n        return dashboardRoutesUser[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  render() {\n    let dashboardRoutes;\n    {/*this.props.currentUser.role===\"ROLE_CLUB\"*/true?(dashboardRoutes=dashboardRoutesUser):(dashboardRoutes=dashboardRoutesAdmin);}\n    const switchRoutes = /*this.props.currentUser.role===\"ROLE_USER\"?(*/\n        <Switch>\n          <Route exact path=\"/dash/transfer\"\n                 render={(props) => <Transfer currentUser={this.state.currentUser} {...props} />}>\n          </Route>\n          <Route component={NotFound} />\n        </Switch>;\n    /*):(\n        <Switch>\n            {/*<Route exact path=\"/dash/dashboard\"\n                 render={(props) => <DashboardPage currentUser={this.state.currentUser} {...props} />}>\n          </Route>\n          <Route exact path=\"/dash/profile\"\n                 render={(props) => <Profile currentUser={this.state.currentUser} {...props} />}>\n          </Route>*}\n          <Route component={NotFound} />\n        </Switch>\n    );*/\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={dashboardRoutes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"https://www.bcp.com/\",\n              text: \"Banque Populaire\",\n              imgSrc: logo\n            }}\n            toggleSidebar={this.handleToggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              /*routes={dashboardRoutes}*/\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n              handleLogout={this.props.handleLogout}\n            />\n            {/*<Switch>{this.getRoutes(routes)}</Switch>*/}\n            {/*this.getRoutes*/(switchRoutes)}\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n        {/*<FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleBgClick={this.handleBgClick}\n        />*/}\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}