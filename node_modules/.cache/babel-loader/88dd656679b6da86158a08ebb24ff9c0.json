{"ast":null,"code":"import _defineProperty from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTable2.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardTitle, Table, Row, Col, Button, FormGroup, Modal, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Label } from \"reactstrap\"; // Sweet alert\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { TRANSFER_LIST_SIZE } from \"../../../variables/constants\";\nimport { getUserCreatedTransfers, getAllTransfers, cancelTransfer, acceptTransfer, sendTransfer } from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\nimport { formatDateTime } from \"../../../util/Helpers\";\nvar MySwal = withReactContent(Swal);\n\nvar TransfersTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransfersTable, _React$Component);\n\n  function TransfersTable(props) {\n    var _this;\n\n    _classCallCheck(this, TransfersTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransfersTable).call(this, props));\n\n    _this.toggleModal = function (modalState) {\n      _this.setState(_defineProperty({}, modalState, !_this.state[modalState]));\n    };\n\n    _this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true,\n      formModal: false\n    };\n    _this.loadTransfersList = _this.loadTransfersList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLoadMore = _this.handleLoadMore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancelTransfer = _this.handleCancelTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAcceptTransfer = _this.handleAcceptTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSendTransfer = _this.handleSendTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TransfersTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /*************************************************/\n      //const username = this.props.match.params.username;\n      this.loadTransfersList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.props.isAuthenticated !== nextProps.isAuthenticated) {\n        // Reset State\n        this.setState({\n          transfers: [],\n          page: 0,\n          size: 10,\n          totalElements: 0,\n          totalPages: 0,\n          last: true,\n          isLoadingTransfers: false\n        });\n        this.loadTransfersList();\n      }\n    }\n  }, {\n    key: \"handleLoadMore\",\n    value: function handleLoadMore() {\n      this.loadTransfersList(this.state.page + 1);\n    }\n  }, {\n    key: \"loadTransfersList\",\n    value: function loadTransfersList() {\n      var _this2 = this;\n\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TRANSFER_LIST_SIZE;\n      var promise;\n      promise = getAllTransfers(); //getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n      if (!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingTransfers: true\n      });\n      promise.then(function (response) {\n        _this2.setState({\n          transfers: response,\n\n          /*response.content\n          page: response.page,\n          size: response.size,\n          totalElements: response.totalElements,\n          totalPages: response.totalPages,\n          last: response.last,*/\n          isLoadingTransfers: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoadingTransfers: false\n        });\n      });\n    }\n  }, {\n    key: \"handleCancelTransfer\",\n    value: function handleCancelTransfer(id) {\n      var _this3 = this;\n\n      MySwal.fire({\n        buttonsStyling: false,\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        title: 'Enter your motif',\n        input: 'textarea',\n        inputPlaceholder: 'Votre motif ...',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          var reason = result.value;\n          cancelTransfer(id, reason).then(function (response) {\n            /*return */\n            MySwal.fire({\n              type: 'success',\n              title: 'Votre operation a été enregistrée',\n              showConfirmButton: false,\n              timer: 1500\n            });\n\n            _this3.loadTransfersList();\n          }).catch(function (error) {\n            if (error.status === 401) {\n              _this3.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n              /*MySwal.fire({\n                type: 'error',\n                title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                showConfirmButton: false,\n                timer: 1500\n              })*/\n\n            } else {\n              _this3.props.notify('tr', 'warning', error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n              /*return MySwal.fire({\n                type: 'error',\n                title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                showConfirmButton: false,\n                timer: 1500\n              })*/\n\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleAcceptTransfer\",\n    value: function handleAcceptTransfer(id) {\n      var _this4 = this;\n\n      acceptTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this4.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          _this4.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n        } else {\n          _this4.props.notify('tr', 'warning', error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n        }\n      });\n    }\n  }, {\n    key: \"handleSendTransfer\",\n    value: function handleSendTransfer(id) {\n      var _this5 = this;\n\n      sendTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this5.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          _this5.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n        } else {\n          _this5.props.notify('tr', 'warning', error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n        }\n      });\n    }\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(state, link) {\n      switch (state) {\n        case 'accepted':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, \"Valid\\xE9e\");\n\n        case 'in_progress':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, \"Encours\");\n\n        case 'cancelled':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, \"Annul\\xE9e\");\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"renderBtnCTN\",\n    value: function renderBtnCTN(link) {\n      var _this6 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleAcceptTransfer,\n        style: {\n          border: 0\n        },\n        color: \"success\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleCancelTransfer,\n        style: {\n          border: 0\n        },\n        color: \"danger\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: function onClick() {\n          return _this6.toggleModal(\"formModal\");\n        },\n        style: {\n          border: 0\n        },\n        color: \"info\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderBtnCTRL\",\n    value: function renderBtnCTRL(link) {\n      return React.createElement(React.Fragment, null, this.renderBtnCTN(link), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleSendTransfer,\n        style: {\n          border: 0\n        },\n        color: \"warning\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-paper-plane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$state = this.state,\n          isLoadingTransfers = _this$state.isLoadingTransfers,\n          transfers = _this$state.transfers;\n\n      if (isLoadingTransfers) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, \"Waiting\");\n      }\n\n      if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        });\n      }\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Mes virements\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"R\\xE9f\\xE9rence\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Date d'op\\xE9ration\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Donneur d\\u2019ordre\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"B\\xE9n\\xE9ficiaire\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"\\xE9tat/Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, transfers.map(function (transfer, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, transfer.ref), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, formatDateTime(transfer.executionDate)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, transfer.principalAccount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, transfer.beneficiaryAccount), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, transfer.transactionAmount), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, _this7.renderBtnCTN(\"/user/transfers/\" + transfer.id)));\n      })))))), React.createElement(Modal, {\n        modalClassName: \"modal-black\",\n        isOpen: this.state.formModal,\n        toggle: function toggle() {\n          return _this7.toggleModal(\"formModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return _this7.toggleModal(\"formModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-muted text-center ml-auto mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Sign in with\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn-wrapper text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-neutral btn-icon\",\n        color: \"default\",\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"...\",\n        src: require(\"assets/img/emoji.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"text-center text-muted mb-4 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Or sign in with credentials\")), React.createElement(Form, {\n        role: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: classnames(\"input-group-alternative\", {\n          \"input-group-focus\": this.state.emailFocus\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-email-85\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        placeholder: \"Email\",\n        type: \"email\",\n        onFocus: function onFocus(e) {\n          return _this7.setState({\n            emailFocus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this7.setState({\n            emailFocus: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: classnames(\"input-group-alternative\", {\n          \"input-group-focus\": this.state.passwordFocus\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-key-25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        placeholder: \"Password\",\n        type: \"password\",\n        onFocus: function onFocus(e) {\n          return _this7.setState({\n            passwordFocus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this7.setState({\n            passwordFocus: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        check: true,\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultChecked: true,\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"form-check-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }), \"Remember me!\")), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"my-4\",\n        color: \"primary\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Sign in\"))))))));\n    }\n  }]);\n\n  return TransfersTable;\n}(React.Component);\n\nexport default TransfersTable;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTable2.jsx"],"names":["React","classnames","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","Button","FormGroup","Modal","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Label","Swal","withReactContent","TRANSFER_LIST_SIZE","getUserCreatedTransfers","getAllTransfers","cancelTransfer","acceptTransfer","sendTransfer","NotFound","formatDateTime","MySwal","TransfersTable","props","toggleModal","modalState","setState","state","transfers","page","size","totalElements","totalPages","last","isLoadingTransfers","formModal","loadTransfersList","bind","handleLoadMore","handleCancelTransfer","handleAcceptTransfer","handleSendTransfer","nextProps","isAuthenticated","promise","then","response","catch","error","id","fire","buttonsStyling","customClass","confirmButton","cancelButton","title","input","inputPlaceholder","showCancelButton","confirmButtonText","result","value","reason","type","showConfirmButton","timer","status","handleLogout","notify","message","link","border","renderBtnCTN","notFound","map","transfer","key","ref","executionDate","principalAccount","beneficiaryAccount","transactionAmount","e","preventDefault","require","emailFocus","passwordFocus","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  Button,\n\n\n\n    FormGroup,\n    Modal,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Label\n} from \"reactstrap\";\n// Sweet alert\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nimport {TRANSFER_LIST_SIZE} from \"../../../variables/constants\";\nimport {getUserCreatedTransfers,  getAllTransfers, cancelTransfer, acceptTransfer, sendTransfer} from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\nimport {formatDateTime} from \"../../../util/Helpers\";\n\n\nconst MySwal = withReactContent(Swal);\n\nclass TransfersTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true,\n      formModal: false\n    };\n    this.loadTransfersList = this.loadTransfersList.bind(this);\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n    this.handleCancelTransfer = this.handleCancelTransfer.bind(this);\n    this.handleAcceptTransfer = this.handleAcceptTransfer.bind(this);\n    this.handleSendTransfer = this.handleSendTransfer.bind(this);\n  }\n\n  componentDidMount() {\n    /*************************************************/\n    //const username = this.props.match.params.username;\n    this.loadTransfersList();\n  }\n\n  componentDidUpdate(nextProps) {\n    if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n      // Reset State\n      this.setState({\n        transfers: [],\n        page: 0,\n        size: 10,\n        totalElements: 0,\n        totalPages: 0,\n        last: true,\n        isLoadingTransfers: false\n      });\n      this.loadTransfersList();\n    }\n  }\n\n  handleLoadMore() {\n    this.loadTransfersList(this.state.page + 1);\n  }\n\n  loadTransfersList(page = 0, size = TRANSFER_LIST_SIZE) {\n    let promise;\n\n    promise = getAllTransfers();//getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoadingTransfers: true\n    });\n\n    promise\n        .then(response => {\n          this.setState({\n            transfers: response,/*response.content\n            page: response.page,\n            size: response.size,\n            totalElements: response.totalElements,\n            totalPages: response.totalPages,\n            last: response.last,*/\n            isLoadingTransfers: false\n          })\n        }).catch(error => {\n      this.setState({\n        isLoadingTransfers: false\n      })\n    });\n\n  }\n\n  handleCancelTransfer(id) {\n    MySwal.fire({\n      buttonsStyling:false,\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger',\n      },\n      title: 'Enter your motif',\n      input: 'textarea',\n      inputPlaceholder: 'Votre motif ...',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n        let reason = result.value;\n        cancelTransfer(id, reason)\n            .then(response => {\n\n              /*return */MySwal.fire({\n                type: 'success',\n                title: 'Votre operation a été enregistrée',\n                showConfirmButton: false,\n                timer: 1500\n              });\n              this.loadTransfersList();\n            }).catch(error => {\n          if(error.status === 401) {\n            this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n            /*MySwal.fire({\n              type: 'error',\n              title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n              showConfirmButton: false,\n              timer: 1500\n            })*/\n          } else {\n            this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n            /*return MySwal.fire({\n              type: 'error',\n              title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n              showConfirmButton: false,\n              timer: 1500\n            })*/\n          }\n        });\n      }\n    })\n  }\n\n  handleAcceptTransfer(id) {\n    acceptTransfer(id)\n        .then(response => {\n\n          /*return */MySwal.fire({\n            type: 'success',\n            title: 'Votre operation a été enregistrée',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.loadTransfersList();\n        }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n      } else {\n        this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n      }\n    });\n  }\n\n  handleSendTransfer(id) {\n    sendTransfer(id)\n        .then(response => {\n\n          /*return */MySwal.fire({\n            type: 'success',\n            title: 'Votre operation a été enregistrée',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.loadTransfersList();\n        }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n      } else {\n        this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n      }\n    });\n  }\n\n  renderSwitch(state, link) {\n    switch(state) {\n      case 'accepted':\n        return <Button className=\"btn-link\" href={link} color=\"success\">Validée</Button>;\n      case 'in_progress':\n        return <Button className=\"btn-link\" href={link} color=\"warning\">Encours</Button>;\n      case 'cancelled':\n        return <Button className=\"btn-link\" href={link} color=\"danger\">Annulée</Button>;\n      default:\n        return null;\n    }\n  }\n\n  renderBtnCTN(link) {\n    return(\n        <>\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleAcceptTransfer} style={{border:0}} color=\"success\" size=\"sm\">\n            <i className=\"fa fa-check\"></i>\n          </Button>{` `}\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"danger\" size=\"sm\">\n            <i className=\"fa fa-times\" />\n          </Button>{` `}\n          <Button className=\"btn-icon btn-simple\" onClick={() => this.toggleModal(\"formModal\")} style={{border:0}} color=\"info\" size=\"sm\">\n            <i className=\"fa fa-eye\"></i>\n          </Button>\n        </>\n    );\n  }\n\n  renderBtnCTRL(link) {\n    return(\n        <>\n          {this.renderBtnCTN(link)}\n          {` `}\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleSendTransfer} style={{border:0}} color=\"warning\" size=\"sm\">\n            <i className=\"fa fa-paper-plane\"></i>\n          </Button>\n        </>\n    );\n  }\n\n    toggleModal = modalState => {\n        this.setState({\n            [modalState]: !this.state[modalState]\n        });\n    };\n  render() {\n    const { isLoadingTransfers, transfers } = this.state;\n    if(isLoadingTransfers) {\n      return <h1>Waiting</h1>;\n    }\n\n    if(this.state.notFound ) {\n      return <NotFound />;\n    }\n\n    /*if(this.state.serverError) {\n      return <ServerError />;\n    }*/\n    return (\n        <>\n          <div className=\"content\">\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle tag=\"h4\">Mes virements</CardTitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Table className=\"tablesorter\" responsive>\n                      <thead className=\"text-primary\">\n                      <tr>\n                        <th>Référence</th>\n                        <th>Date d'opération</th>\n                        <th>Donneur d’ordre</th>\n                        <th>Bénéficiaire</th>\n                        <th className=\"text-center\">Montant</th>\n                        <th className=\"text-center\">état/Action</th>\n                      </tr>\n                      </thead>\n                      <tbody>\n                      {transfers.map((transfer, key) => {\n                        return (\n                            <tr key={key}>\n                              <td>{transfer.ref}</td>\n                              <td>{formatDateTime(transfer.executionDate)}</td>\n                              <td>{transfer.principalAccount}</td>\n                              <td>{transfer.beneficiaryAccount}</td>\n                              <td className=\"text-center\">{transfer.transactionAmount}</td>\n                              <td className=\"text-center\">\n                                {/*this.renderSwitch(transfer.state,\"/user/transfers/\"+transfer.id)*/}\n                                {this.renderBtnCTN(\"/user/transfers/\"+transfer.id)}\n                                {/*this.renderBtnCTRL(\"/user/transfers/\"+transfer.id)*/}\n                              </td>\n                            </tr>\n                        );\n                      })}\n                      </tbody>\n                    </Table>\n                  </CardBody>\n                </Card>\n              </Col>\n                {/* Start Form Modal */}\n                <Modal\n                    modalClassName=\"modal-black\"\n                    isOpen={this.state.formModal}\n                    toggle={() => this.toggleModal(\"formModal\")}\n                >\n                    <div className=\"modal-header justify-content-center\">\n                        <button\n                            className=\"close\"\n                            onClick={() => this.toggleModal(\"formModal\")}\n                        >\n                            <i className=\"tim-icons icon-simple-remove text-white\" />\n                        </button>\n                        <div className=\"text-muted text-center ml-auto mr-auto\">\n                            <h3 className=\"mb-0\">Sign in with</h3>\n                        </div>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"btn-wrapper text-center\">\n                            <Button\n                                className=\"btn-neutral btn-icon\"\n                                color=\"default\"\n                                href=\"#pablo\"\n                                onClick={e => e.preventDefault()}\n                            >\n                                <img alt=\"...\" src={require(\"assets/img/emoji.png\")} />\n                            </Button>\n                        </div>\n                        <div className=\"text-center text-muted mb-4 mt-3\">\n                            <small>Or sign in with credentials</small>\n                        </div>\n                        <Form role=\"form\">\n                            <FormGroup className=\"mb-3\">\n                                <InputGroup\n                                    className={classnames(\"input-group-alternative\", {\n                                        \"input-group-focus\": this.state.emailFocus\n                                    })}\n                                >\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"tim-icons icon-email-85\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input\n                                        placeholder=\"Email\"\n                                        type=\"email\"\n                                        onFocus={e => this.setState({ emailFocus: true })}\n                                        onBlur={e => this.setState({ emailFocus: false })}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup\n                                    className={classnames(\"input-group-alternative\", {\n                                        \"input-group-focus\": this.state.passwordFocus\n                                    })}\n                                >\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"tim-icons icon-key-25\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input\n                                        placeholder=\"Password\"\n                                        type=\"password\"\n                                        onFocus={e => this.setState({ passwordFocus: true })}\n                                        onBlur={e => this.setState({ passwordFocus: false })}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup check className=\"mt-3\">\n                                <Label check>\n                                    <Input defaultChecked type=\"checkbox\" />\n                                    <span className=\"form-check-sign\" />\n                                    Remember me!\n                                </Label>\n                            </FormGroup>\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\">\n                                    Sign in\n                                </Button>\n                            </div>\n                        </Form>\n                    </div>\n                </Modal>\n                {/* End Form Modal */}\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\n\nexport default TransfersTable;\n"]},"metadata":{},"sourceType":"module"}