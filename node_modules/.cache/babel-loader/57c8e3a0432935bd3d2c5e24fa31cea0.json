{"ast":null,"code":"import _objectWithoutProperties from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/routes/PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return isAuthenticated ? React.createElement(Component, Object.assign({}, rest, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n/*const PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated ? (\n                <Component {...rest} {...props}/>\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: '/login',\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);*/","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/routes/PrivateRoute.jsx"],"names":["React","Route","Redirect","connect","PrivateRoute","Component","component","isAuthenticated","rest","props","pathname","state","from","location","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,KADJ,EAEIC,QAFJ,QAGS,kBAHT;AAIA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBC,eAAzB,QAAyBA,eAAzB;AAAA,MAA6CC,IAA7C;;AAAA,SACjB,oBAAC,KAAD,oBACQA,IADR;AAEI,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACTF,eAAe,GACX,oBAAC,SAAD,oBAAeC,IAAf,EAAyBC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADW,GAGX,oBAAC,QAAD;AACI,QAAA,EAAE,EAAE;AACAC,UAAAA,QAAQ,EAAE,QADV;AAEAC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFP,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJK;AAAA,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADiB;AAAA,CAArB;;AAkBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAU;AAC9B,SAAO;AACHJ,IAAAA,eAAe,EAAEI,KAAK,CAACJ;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAACW,eAAD,CAAP,CAAyBV,YAAzB,CAAf;AAEA","sourcesContent":["import React from 'react';\nimport {\n    Route,\n    Redirect\n  } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated ? (\n                <Component {...rest} {...props}/>\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: '/login',\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nconst mapStateToProps = (state) =>{\n    return {\n        isAuthenticated: state.isAuthenticated\n    };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\n/*const PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated ? (\n                <Component {...rest} {...props}/>\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: '/login',\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);*/\n"]},"metadata":{},"sourceType":"module"}