{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTable.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardTitle, Table, Row, Col, Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../../../redux/actions\"; // Sweet alert\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { TRANSFER_LIST_SIZE } from \"../../../variables/constants\";\nimport { getAllTransfers, cancelTransfer, acceptTransfer, sendTransfer } from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\nimport { formatDateTime } from \"../../../util/Helpers\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\nvar MySwal = withReactContent(Swal);\n\nvar TransfersTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransfersTable, _React$Component);\n\n  function TransfersTable(props) {\n    var _this;\n\n    _classCallCheck(this, TransfersTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransfersTable).call(this, props));\n    _this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true\n    };\n    _this.loadTransfersList = _this.loadTransfersList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLoadMore = _this.handleLoadMore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancelTransfer = _this.handleCancelTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAcceptTransfer = _this.handleAcceptTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSendTransfer = _this.handleSendTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TransfersTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentUser();\n      /*************************************************/\n      //const username = this.props.match.params.username;\n\n      this.loadTransfersList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      /*if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n        // Reset State\n        this.setState({\n          transfers: [],\n          page: 0,\n          size: 10,\n          totalElements: 0,\n          totalPages: 0,\n          last: true,\n          isLoadingTransfers: false\n        });\n        this.loadTransfersList();\n      }*/\n    }\n  }, {\n    key: \"handleLoadMore\",\n    value: function handleLoadMore() {\n      this.loadTransfersList(this.state.page + 1);\n    }\n  }, {\n    key: \"loadTransfersList\",\n    value: function loadTransfersList() {\n      var _this2 = this;\n\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TRANSFER_LIST_SIZE;\n      var promise;\n      promise = getAllTransfers(); //getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n      if (!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingTransfers: true\n      });\n      promise.then(function (response) {\n        _this2.setState({\n          transfers: response,\n\n          /*response.content\n          page: response.page,\n          size: response.size,\n          totalElements: response.totalElements,\n          totalPages: response.totalPages,\n          last: response.last,*/\n          isLoadingTransfers: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoadingTransfers: false\n        });\n      });\n    }\n  }, {\n    key: \"handleCancelTransfer\",\n    value: function handleCancelTransfer(id) {\n      var _this3 = this;\n\n      MySwal.fire({\n        buttonsStyling: false,\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        title: 'Enter your motif',\n        input: 'textarea',\n        inputPlaceholder: 'Votre motif ...',\n        showCancelButton: true,\n        confirmButtonText: 'Confirmer',\n        cancelButtonText: 'Annuler'\n      }).then(function (result) {\n        if (result.value) {\n          var reason = result.value;\n          cancelTransfer(id, reason).then(function (response) {\n            /*return */\n            MySwal.fire({\n              type: 'success',\n              title: 'Votre operation a été enregistrée',\n              showConfirmButton: false,\n              timer: 1500\n            });\n\n            _this3.loadTransfersList();\n          }).catch(function (error) {\n            if (error.status === 401) {\n              MySwal.fire({\n                type: 'error',\n                title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                showConfirmButton: false,\n                timer: 1500\n              });\n\n              _this3.props.history.push('/login');\n            } else {\n              MySwal.fire({\n                type: 'warning',\n                title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                showConfirmButton: false,\n                timer: 1500\n              });\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleAcceptTransfer\",\n    value: function handleAcceptTransfer(id) {\n      var _this4 = this;\n\n      acceptTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this4.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          MySwal.fire({\n            type: 'error',\n            title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n            showConfirmButton: false,\n            timer: 1500\n          });\n\n          _this4.props.history.push('/login');\n        } else {\n          MySwal.fire({\n            type: 'warning',\n            title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleSendTransfer\",\n    value: function handleSendTransfer(id) {\n      var _this5 = this;\n\n      sendTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this5.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          MySwal.fire({\n            type: 'error',\n            title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n            showConfirmButton: false,\n            timer: 1500\n          });\n\n          _this5.props.history.push('/login');\n        } else {\n          MySwal.fire({\n            type: 'warning',\n            title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(state, link) {\n      switch (state) {\n        case 'accepted':\n          return React.createElement(React.Fragment, null, React.createElement(Link, {\n            to: link,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, React.createElement(Button, {\n            className: \"btn-link\",\n            color: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, \"Valid\\xE9e\")), \" \", React.createElement(Button, {\n            className: \"btn-icon btn-simple\",\n            onClick: this.handleCancelTransfer,\n            style: {\n              border: 0\n            },\n            color: \"primary\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          })));\n\n        case 'in_progress':\n          return React.createElement(React.Fragment, null, React.createElement(Link, {\n            to: link,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, React.createElement(Button, {\n            className: \"btn-link\",\n            color: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, \"Encours\")), \" \", React.createElement(Button, {\n            className: \"btn-icon btn-simple\",\n            onClick: this.handleCancelTransfer,\n            style: {\n              border: 0\n            },\n            color: \"primary\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229\n            },\n            __self: this\n          })));\n\n        case 'cancelled':\n          return React.createElement(React.Fragment, null, React.createElement(Link, {\n            to: link,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, React.createElement(Button, {\n            className: \"btn-link\",\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, \"Rejet\\xE9e\")), \" \", React.createElement(Button, {\n            className: \"btn-icon btn-simple\",\n            onClick: this.handleCancelTransfer,\n            style: {\n              border: 0\n            },\n            color: \"primary\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          })));\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"renderBtnCTN\",\n    value: function renderBtnCTN(link) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleAcceptTransfer,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleCancelTransfer,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      })), \" \", React.createElement(Link, {\n        to: link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"renderBtnCTRL\",\n    value: function renderBtnCTRL(link) {\n      return React.createElement(React.Fragment, null, this.renderBtnCTN(link), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleSendTransfer,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-paper-plane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$state = this.state,\n          isLoadingTransfers = _this$state.isLoadingTransfers,\n          transfers = _this$state.transfers;\n\n      if (isLoadingTransfers) {\n        return React.createElement(LoadingIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.notFound || !this.props.currentUser) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        });\n      }\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Mes virements\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"R\\xE9f\\xE9rence\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Date d'op\\xE9ration\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Donneur d\\u2019ordre\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"B\\xE9n\\xE9ficiaire\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"\\xE9tat/Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, transfers.map(function (transfer, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, transfer.ref), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, formatDateTime(transfer.executionDate)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, transfer.principalAccount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, transfer.beneficiaryAccount), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, transfer.transactionAmount), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, _this6.props.currentUser.role === \"ROLE_AGENT\" ? _this6.renderSwitch(transfer.state, \"/user/transfers/\" + transfer.id) : null, _this6.props.currentUser.role === \"ROLE_CTN\" ? _this6.renderBtnCTN(\"/user/transfers/\" + transfer.id) : null, _this6.props.currentUser.role === \"ROLE_CTRL\" ? _this6.renderBtnCTRL(\"/user/transfers/\" + transfer.id) : null));\n      })))))))));\n    }\n  }]);\n\n  return TransfersTable;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentUser: getCurrentUser\n})(TransfersTable);","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTable.jsx"],"names":["React","Link","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","Button","connect","getCurrentUser","Swal","withReactContent","TRANSFER_LIST_SIZE","getAllTransfers","cancelTransfer","acceptTransfer","sendTransfer","NotFound","formatDateTime","LoadingIndicator","MySwal","TransfersTable","props","state","transfers","page","size","totalElements","totalPages","last","isLoadingTransfers","loadTransfersList","bind","handleLoadMore","handleCancelTransfer","handleAcceptTransfer","handleSendTransfer","nextProps","promise","setState","then","response","catch","error","id","fire","buttonsStyling","customClass","confirmButton","cancelButton","title","input","inputPlaceholder","showCancelButton","confirmButtonText","cancelButtonText","result","value","reason","type","showConfirmButton","timer","status","history","push","message","link","border","renderBtnCTN","notFound","currentUser","map","transfer","key","ref","executionDate","principalAccount","beneficiaryAccount","transactionAmount","role","renderSwitch","renderBtnCTRL","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  Button\n} from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../../../redux/actions\";\n// Sweet alert\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nimport {TRANSFER_LIST_SIZE} from \"../../../variables/constants\";\nimport { getAllTransfers, cancelTransfer, acceptTransfer, sendTransfer} from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\nimport {formatDateTime} from \"../../../util/Helpers\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\n\n\nconst MySwal = withReactContent(Swal);\n\nclass TransfersTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true\n    };\n    this.loadTransfersList = this.loadTransfersList.bind(this);\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n    this.handleCancelTransfer = this.handleCancelTransfer.bind(this);\n    this.handleAcceptTransfer = this.handleAcceptTransfer.bind(this);\n    this.handleSendTransfer = this.handleSendTransfer.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getCurrentUser();\n    /*************************************************/\n    //const username = this.props.match.params.username;\n    this.loadTransfersList();\n  }\n\n  componentDidUpdate(nextProps) {\n    /*if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n      // Reset State\n      this.setState({\n        transfers: [],\n        page: 0,\n        size: 10,\n        totalElements: 0,\n        totalPages: 0,\n        last: true,\n        isLoadingTransfers: false\n      });\n      this.loadTransfersList();\n    }*/\n  }\n\n  handleLoadMore() {\n    this.loadTransfersList(this.state.page + 1);\n  }\n\n  loadTransfersList(page = 0, size = TRANSFER_LIST_SIZE) {\n    let promise;\n\n    promise = getAllTransfers();//getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoadingTransfers: true\n    });\n\n    promise\n        .then(response => {\n          this.setState({\n            transfers: response,/*response.content\n            page: response.page,\n            size: response.size,\n            totalElements: response.totalElements,\n            totalPages: response.totalPages,\n            last: response.last,*/\n            isLoadingTransfers: false\n          })\n        }).catch(error => {\n      this.setState({\n        isLoadingTransfers: false\n      })\n    });\n\n  }\n\n  handleCancelTransfer(id) {\n    MySwal.fire({\n      buttonsStyling:false,\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger',\n      },\n      title: 'Enter your motif',\n      input: 'textarea',\n      inputPlaceholder: 'Votre motif ...',\n      showCancelButton: true,\n      confirmButtonText: 'Confirmer',\n      cancelButtonText: 'Annuler'\n    }).then((result) => {\n      if (result.value) {\n        let reason = result.value;\n        cancelTransfer(id, reason)\n            .then(response => {\n\n              /*return */MySwal.fire({\n                type: 'success',\n                title: 'Votre operation a été enregistrée',\n                showConfirmButton: false,\n                timer: 1500\n              });\n              this.loadTransfersList();\n            }).catch(error => {\n          if(error.status === 401) {\n            MySwal.fire({\n              type: 'error',\n              title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n              showConfirmButton: false,\n              timer: 1500\n            });\n            this.props.history.push('/login');\n          } else {\n            MySwal.fire({\n              type: 'warning',\n              title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n              showConfirmButton: false,\n              timer: 1500\n            })\n          }\n        });\n      }\n    })\n  }\n\n  handleAcceptTransfer(id) {\n    acceptTransfer(id)\n        .then(response => {\n\n          /*return */MySwal.fire({\n            type: 'success',\n            title: 'Votre operation a été enregistrée',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.loadTransfersList();\n        }).catch(error => {\n      if(error.status === 401) {\n        MySwal.fire({\n          type: 'error',\n          title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        this.props.history.push('/login');\n      } else {\n        MySwal.fire({\n          type: 'warning',\n          title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n\n  handleSendTransfer(id) {\n    sendTransfer(id)\n        .then(response => {\n\n          /*return */MySwal.fire({\n            type: 'success',\n            title: 'Votre operation a été enregistrée',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.loadTransfersList();\n        }).catch(error => {\n      if(error.status === 401) {\n        MySwal.fire({\n          type: 'error',\n          title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        this.props.history.push('/login');\n      } else {\n        MySwal.fire({\n          type: 'warning',\n          title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n\n  renderSwitch(state, link) {\n    switch(state) {\n      case 'accepted':\n        return <><Link to={link}><Button className=\"btn-link\" color=\"success\">Validée</Button></Link>\n          {` `}<Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n            <i className=\"fa fa-times\" />\n          </Button>\n        </>;\n      case 'in_progress':\n        return <><Link to={link}><Button className=\"btn-link\" color=\"warning\">Encours</Button></Link>\n              {` `}<Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n                <i className=\"fa fa-times\" />\n              </Button>\n            </>;\n      case 'cancelled':\n        return <><Link to={link}><Button className=\"btn-link\" color=\"danger\">Rejetée</Button></Link>\n          {` `}<Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n          <i className=\"fa fa-times\" />\n        </Button>\n        </>;\n      default:\n        return null;\n    }\n  }\n\n  renderBtnCTN(link) {\n    return(\n        <>\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleAcceptTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n            <i className=\"fa fa-check\"></i>\n          </Button>{` `}\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n            <i className=\"fa fa-times\" />\n          </Button>{` `}\n          <Link to={link}><Button className=\"btn-icon btn-simple\" style={{border:0}} color=\"primary\" size=\"sm\">\n            <i className=\"fa fa-eye\"></i>\n          </Button></Link>\n        </>\n    );\n  }\n\n  renderBtnCTRL(link) {\n    return(\n        <>\n          {this.renderBtnCTN(link)}\n          {` `}\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleSendTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n            <i className=\"fa fa-paper-plane\"></i>\n          </Button>\n        </>\n    );\n  }\n\n  render() {\n    const { isLoadingTransfers, transfers } = this.state;\n    if(isLoadingTransfers) {\n      return <LoadingIndicator />;\n    }\n\n    if(this.state.notFound || !this.props.currentUser) {\n      return <NotFound />;\n    }\n\n    /*if(this.state.serverError) {\n      return <ServerError />;\n    }*/\n    return (\n        <>\n          <div className=\"content\">\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle tag=\"h4\">Mes virements</CardTitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Table className=\"tablesorter\" responsive>\n                      <thead className=\"text-primary\">\n                      <tr>\n                        <th>Référence</th>\n                        <th>Date d'opération</th>\n                        <th>Donneur d’ordre</th>\n                        <th>Bénéficiaire</th>\n                        <th className=\"text-center\">Montant</th>\n                        <th className=\"text-center\">état/Action</th>\n                      </tr>\n                      </thead>\n                      <tbody>\n                      {transfers.map((transfer, key) => {\n                        return (\n                            <tr key={key}>\n                              <td>{transfer.ref}</td>\n                              <td>{formatDateTime(transfer.executionDate)}</td>\n                              <td>{transfer.principalAccount}</td>\n                              <td>{transfer.beneficiaryAccount}</td>\n                              <td className=\"text-center\">{transfer.transactionAmount}</td>\n                              <td className=\"text-center\">\n                                {this.props.currentUser.role===\"ROLE_AGENT\"?this.renderSwitch(transfer.state,\"/user/transfers/\"+transfer.id):null}\n                                {this.props.currentUser.role===\"ROLE_CTN\"?this.renderBtnCTN(\"/user/transfers/\"+transfer.id):null}\n                                {this.props.currentUser.role===\"ROLE_CTRL\"?this.renderBtnCTRL(\"/user/transfers/\"+transfer.id):null}\n                              </td>\n                            </tr>\n                        );\n                      })}\n                      </tbody>\n                    </Table>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, { getCurrentUser })(TransfersTable);\n"]},"metadata":{},"sourceType":"module"}