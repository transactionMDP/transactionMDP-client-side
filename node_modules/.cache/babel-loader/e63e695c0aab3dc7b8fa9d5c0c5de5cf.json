{"ast":null,"code":"import _defineProperty from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Transfer.jsx\";\nimport React from \"react\";\nimport { getAccountData } from '../util/APIUtils'; // react plugin used to create datetimepicker\n\nimport ReactDatetime from \"react-datetime\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, InputGroupAddon, InputGroupText, InputGroup, Row, Col, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nvar Forms =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forms, _React$Component);\n\n  function Forms(props) {\n    var _this;\n\n    _classCallCheck(this, Forms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Forms).call(this, props));\n    _this.state = {\n      focused: \"\",\n      transactionType: \"\",\n      principalAccount: \"\",\n      principalCurrency: \"MAD\",\n      beneficiaryAccount: \"\",\n      beneficiaryCurrency: \"MAD\",\n      transactionAmount: \"\",\n      transactionCurrency: \"\",\n      transferReason: \"\",\n      executionDate: \"\",\n      DBValueDate: \"\",\n      CRValueDate: \"\",\n      transferNature: \"\",\n      authorizationNumber: \"\",\n      authorizationValidity: \"\",\n      commissionCode: \"\",\n      commissionAmount: \"\",\n      applyCommission: true,\n      commissionTVA: \"\",\n      chargeType: \"\",\n      exchangeRate: \"\",\n      tradingTicket: \"\",\n      largeAmount: 4000,\n      account: [],\n\n      /*page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      currentReactions: [],\n      isLoadingEvents: true,*/\n      isLoadingAccount: true,\n      stats: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadAccountData = _this.loadAccountData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Forms, [{\n    key: \"loadAccountData\",\n    value: function loadAccountData(number) {\n      var _this2 = this;\n\n      var promise;\n      promise = getAccountData(number);\n\n      if (!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingCurrency: true\n      });\n      promise.then(function (response) {\n        _this2.setState({\n          account: response.content,\n          isLoadingCurrency: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoadingCurrency: false\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var id = target.id;\n      console.log(id + \":\" + value);\n      this.setState(_defineProperty({}, id, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var _this$state = this.state,\n          title = _this$state.title,\n          id = _this$state.id; //this.props.addArticle({ title, id });\n\n      this.setState({\n        title: \"\",\n        id: \"\"\n      });\n      alert(\"Virement effectué avec succès\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transactionType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Type de transaction\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"transactionType\",\n        value: this.state.transactionType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"2\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"principalAccount\",\n        placeholder: \"D\\xE9biteur\",\n        value: this.state.principalAccount,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.state.principalCurrency))))), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"beneficiaryAccount\",\n        placeholder: \"B\\xE9n\\xE9ficiaire\",\n        value: this.state.beneficiaryAccount,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.beneficiaryCurrency)))))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transactionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"transactionAmount\",\n        placeholder: \"Montant ...\",\n        value: this.state.transactionAmount,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"select\",\n        className: \"form-control1\",\n        id: \"transactionCurrency\",\n        value: this.state.transactionCurrency,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, this.state.principalCurrency), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.state.beneficiaryCurrency)))))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferReason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Motif\"), React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Motif ...\",\n        id: \"transferReason\",\n        value: this.state.transferReason,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"executionDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Date d'execution\"), React.createElement(ReactDatetime, {\n        id: \"executionDate\",\n        inputProps: {\n          className: \"form-control\",\n          placeholder: \"Date Picker Here\"\n        },\n        value: this.state.executionDate,\n        defaultValue: new Date(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), this.state.transactionAmount > this.state.largeAmount ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"tradingTicket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Ticket de n\\xE9gociation\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"tradingTicket\",\n        placeholder: \"ticket ...\",\n        className: \"tim-icons\",\n        value: this.state.tradingTicket,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })) : null,\n      /********************* Echange **************/\n      this.state.principalCurrency === \"MAD\" && this.state.beneficiaryCurrency !== \"MAD\" ? React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferNature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Nature de transfert\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"transferNature\",\n        value: this.state.transferNature,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"2\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"N\\xB0 d'autorisation\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"authorizationNumber\",\n        placeholder: \"Code ...\",\n        value: this.state.authorizationNumber,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationValidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Validit\\xE9 de l'autorisation\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"authorizationValidity\",\n        placeholder: \"???\",\n        value: this.state.authorizationValidity,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exchangeRate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Cours de change\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"exchangeRate\",\n        placeholder: \"...\",\n        value: this.state.exchangeRate,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })))) : null\n      /********************* Commission **************/\n      , React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"chargeType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Type de charge\"), React.createElement(Input, {\n        type: \"select\",\n        id: \"chargeType\",\n        name: \"select\",\n        value: this.state.chargeType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"OUR\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"2\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Code Commission/Taux applique\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"commissionCode\",\n        placeholder: \"Code ...\",\n        value: this.state.commissionCode,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Montant commission\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"commissionAmount\",\n        placeholder: \"MAD\",\n        value: this.state.commissionAmount,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionTVA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"TVA sur commission\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"commissionTVA\",\n        placeholder: \"tva ...\",\n        value: this.state.commissionTVA,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }))), this.state.applyCommission, React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        id: \"applyCommission\",\n        onChange: this.handleChange,\n        checked: this.state.applyCommission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), \"Appliquer commission\", React.createElement(\"span\", {\n        className: \"form-check-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"reset\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"Annuler\"), React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Virer\")))));\n    }\n  }]);\n\n  return Forms;\n}(React.Component);\n\n;\n\nvar Transfer =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Transfer, _React$Component2);\n\n  function Transfer() {\n    _classCallCheck(this, Transfer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Transfer).apply(this, arguments));\n  }\n\n  _createClass(Transfer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Saisie du virement\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(Forms, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Transfer;\n}(React.Component);\n\nexport default Transfer;","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Transfer.jsx"],"names":["React","getAccountData","ReactDatetime","Card","CardHeader","CardBody","InputGroupAddon","InputGroupText","InputGroup","Row","Col","FormGroup","Input","Label","Button","Forms","props","state","focused","transactionType","principalAccount","principalCurrency","beneficiaryAccount","beneficiaryCurrency","transactionAmount","transactionCurrency","transferReason","executionDate","DBValueDate","CRValueDate","transferNature","authorizationNumber","authorizationValidity","commissionCode","commissionAmount","applyCommission","commissionTVA","chargeType","exchangeRate","tradingTicket","largeAmount","account","isLoadingAccount","stats","handleChange","bind","handleSubmit","loadAccountData","number","promise","setState","isLoadingCurrency","then","response","content","catch","error","event","target","value","type","checked","id","console","log","preventDefault","title","alert","className","placeholder","Date","Component","Transfer"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  getAccountData\n} from '../util/APIUtils';\n// react plugin used to create datetimepicker\nimport ReactDatetime from \"react-datetime\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass Forms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focused: \"\",\n      transactionType: \"\",\n      principalAccount: \"\",\n      principalCurrency: \"MAD\",\n      beneficiaryAccount: \"\",\n      beneficiaryCurrency: \"MAD\",\n      transactionAmount: \"\",\n      transactionCurrency: \"\",\n      transferReason: \"\",\n      executionDate: \"\",\n      DBValueDate: \"\",\n      CRValueDate: \"\",\n      transferNature: \"\",\n      authorizationNumber: \"\",\n      authorizationValidity: \"\",\n      commissionCode: \"\",\n      commissionAmount: \"\",\n      applyCommission: true,\n      commissionTVA: \"\",\n      chargeType: \"\",\n      exchangeRate: \"\",\n      tradingTicket: \"\",\n      largeAmount: 4000,\n\n      account: [],\n      /*page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      currentReactions: [],\n      isLoadingEvents: true,*/\n      isLoadingAccount: true,\n      stats: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.loadAccountData = this.loadAccountData.bind(this);\n  }\n\n  loadAccountData(number) {\n    let promise;\n\n    promise = getAccountData(number);\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoadingCurrency: true\n    });\n\n    promise\n        .then(response => {\n          this.setState({\n            account: response.content,\n            isLoadingCurrency: false\n          })\n        }).catch(error => {\n      this.setState({\n        isLoadingCurrency: false\n      })\n    });\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const id = target.id;\n\n    console.log(id+\":\"+value);\n\n    this.setState({\n      [id]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { title, id } = this.state;\n\n    //this.props.addArticle({ title, id });\n    this.setState({ title: \"\", id: \"\" });\n    alert(\"Virement effectué avec succès\");\n  }\n\n  render() {\n    return (\n        <>\n          <Card>\n            <CardBody>\n              <form onSubmit={this.handleSubmit}>\n                <FormGroup>\n                  <Label for=\"transactionType\">Type de transaction</Label>\n                  <Input\n                      type=\"select\"\n                      name=\"select\"\n                      id=\"transactionType\"\n                      value={this.state.transactionType}\n                      onChange={this.handleChange}\n                  >\n                    <option selected>1</option>\n                    <option>2</option>\n                  </Input>\n                </FormGroup>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"principalAccount\">N° compte débiteur</Label>\n                    <InputGroup>\n                      <Input\n                          type=\"number\"\n                          id=\"principalAccount\"\n                          placeholder=\"Débiteur\"\n                          value={this.state.principalAccount}\n                          onChange={this.handleChange}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          <p>{this.state.principalCurrency}</p>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                    <InputGroup>\n                      <Input\n                          type=\"number\"\n                          id=\"beneficiaryAccount\"\n                          placeholder=\"Bénéficiaire\"\n                          value={this.state.beneficiaryAccount}\n                          onChange={this.handleChange}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          <p>{this.state.beneficiaryCurrency}</p>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                </div>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transactionAmount\">Montant</Label>\n                    <InputGroup>\n                      <Input\n                          type=\"number\"\n                          id=\"transactionAmount\"\n                          placeholder=\"Montant ...\"\n                          value={this.state.transactionAmount}\n                          onChange={this.handleChange}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          <select\n                              name=\"select\"\n                              className=\"form-control1\"\n                              id=\"transactionCurrency\"\n                              value={this.state.transactionCurrency}\n                              onChange={this.handleChange}\n                          >\n                            <option selected>{this.state.principalCurrency}</option>\n                            <option>{this.state.beneficiaryCurrency}</option>\n                          </select>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transferReason\">Motif</Label>\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Motif ...\"\n                        id=\"transferReason\"\n                        value={this.state.transferReason}\n                        onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"executionDate\">Date d'execution</Label>\n                    <ReactDatetime\n                        id=\"executionDate\"\n                        inputProps={{\n                          className: \"form-control\",\n                          placeholder: \"Date Picker Here\"\n                        }}\n                        value={this.state.executionDate}\n                        defaultValue={new Date()}\n                    />\n                  </FormGroup>\n                </div>\n                {\n                  (this.state.transactionAmount>this.state.largeAmount)?(\n                      <FormGroup>\n                        <Label for=\"tradingTicket\">Ticket de négociation</Label>\n                        <Input\n                            type=\"number\"\n                            id=\"tradingTicket\"\n                            placeholder=\"ticket ...\"\n                            className=\"tim-icons\"\n                            value={this.state.tradingTicket}\n                            onChange={this.handleChange}\n                        />\n                      </FormGroup>\n                  ):null\n                }\n                {/********************* Echange **************/\n                  (this.state.principalCurrency===\"MAD\" && this.state.beneficiaryCurrency!==\"MAD\") ?(\n                 <>\n                   <FormGroup>\n                    <Label for=\"transferNature\">Nature de transfert</Label>\n                    <Input\n                        type=\"select\"\n                        name=\"select\"\n                        id=\"transferNature\"\n                        value={this.state.transferNature}\n                        onChange={this.handleChange}\n                    >\n                      <option selected>1</option>\n                      <option>2</option>\n                    </Input>\n                  </FormGroup>\n\n                  <div className=\"form-row\">\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"authorizationNumber\">N° d'autorisation</Label>\n                      <Input\n                          type=\"number\"\n                          id=\"authorizationNumber\"\n                          placeholder=\"Code ...\"\n                          value={this.state.authorizationNumber}\n                          onChange={this.handleChange}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-6\">\n                      <Label for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                      <Input\n                          type=\"number\"\n                          id=\"authorizationValidity\"\n                          placeholder=\"???\"\n                          value={this.state.authorizationValidity}\n                          onChange={this.handleChange}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"exchangeRate\">Cours de change</Label>\n                      <Input\n                          type=\"number\"\n                          id=\"exchangeRate\"\n                          placeholder=\"...\"\n                          value={this.state.exchangeRate}\n                          disabled\n                      />\n                    </FormGroup>\n                   </div>\n                 </>):null\n                  /********************* Commission **************/}\n                <FormGroup>\n                  <Label for=\"chargeType\">Type de charge</Label>\n                  <Input\n                      type=\"select\"\n                      id=\"chargeType\"\n                      name=\"select\"\n                      value={this.state.chargeType}\n                      onChange={this.handleChange}\n                  >\n                    <option selected>OUR</option>\n                    <option>2</option>\n                  </Input>\n                </FormGroup>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionCode\">Code Commission/Taux applique</Label>\n                    <Input\n                        type=\"number\"\n                        id=\"commissionCode\"\n                        placeholder=\"Code ...\"\n                        value={this.state.commissionCode}\n                        disabled\n                    />\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionAmount\">Montant commission</Label>\n                    <Input\n                        type=\"number\"\n                        id=\"commissionAmount\"\n                        placeholder=\"MAD\"\n                        value={this.state.commissionAmount}\n                        disabled\n                    />\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionTVA\">TVA sur commission</Label>\n                    <Input\n                        type=\"number\"\n                        id=\"commissionTVA\"\n                        placeholder=\"tva ...\"\n                        value={this.state.commissionTVA}\n                        disabled\n                    />\n                  </FormGroup>\n                </div>\n\n                {this.state.applyCommission}\n                <FormGroup check>\n                  <Label className=\"form-check-label\">\n                    <Input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        id=\"applyCommission\"\n                        onChange={this.handleChange}\n                        checked={this.state.applyCommission}\n                    />\n                    Appliquer commission\n                    <span className=\"form-check-sign\">\n                      <span className=\"check\"></span>\n                    </span>\n                  </Label>\n                </FormGroup>\n                <br />\n\n                <Button type=\"reset\" color=\"primary\">Annuler</Button>\n                <Button type=\"submit\" color=\"primary\">Virer</Button>\n              </form>\n            </CardBody>\n          </Card>\n        </>\n    );\n  }\n};\n\n\nclass Transfer extends React.Component {\n\n  render() {\n    return (\n        <>\n          <div className=\"content\">\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <h4 className=\"title\">Saisie du virement</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col md=\"2\"></Col>\n                      <Col md=\"8\">\n                        {/* Virement INTRA en agence */}\n                        <Forms />\n                      </Col>\n                      <Col md=\"2\"></Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\nexport default Transfer;\n\n"]},"metadata":{},"sourceType":"module"}