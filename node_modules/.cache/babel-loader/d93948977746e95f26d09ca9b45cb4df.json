{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/Transfer.jsx\";\nimport React from \"react\";\nimport { getTransfer } from '../../../util/APIUtils'; // react plugin used to create datetime\n\nimport { formatDateTime } from \"../../../util/Helpers\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, InputGroupAddon, InputGroupText, InputGroup, Row, Col, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\nvar Forms =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forms, _React$Component);\n\n  // Constructeur\n  function Forms(props) {\n    var _this;\n\n    _classCallCheck(this, Forms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Forms).call(this, props));\n    _this.state = {\n      event: null,\n      isLoading: true,\n      clubs: []\n    };\n    _this.loadTransferDetails = _this.loadTransferDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Forms, [{\n    key: \"loadTransferDetails\",\n    value: function loadTransferDetails(id) {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getTransfer(id).then(function (response) {\n        _this2.setState({\n          transfer: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this2.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.loadTransferDetails(id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          transfer = _this$state.transfer;\n      /*if(isLoading) {\n        return <LoadingIndicator />;\n      }*/\n\n      if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      }\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n\n      return React.createElement(React.Fragment, null, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, transfer.principalAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, transfer.principalCurrency))), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, transfer.beneficiaryAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, transfer.beneficiaryCurrency)))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transactionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, transfer.transactionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, transfer.transactionCurrency))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferReason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Motif\"), React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Motif ...\",\n        id: \"transferReason\",\n        value: this.state.transferReason,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, transfer.transferReason)), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"executionDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Date d'execution\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, formatDateTime(transfer.executionDate)))),\n      /********************* Echange **************/\n      transfer.principalCurrency === \"MAD\" && transfer.beneficiaryCurrency !== \"MAD\" ? React.createElement(React.Fragment, null, transfer.transactionAmount > transfer.largeAmount ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"tradingTicket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Ticket de n\\xE9gociation\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, transfer.tradingTicket)) : null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferNature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Nature de transfert\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, transfer.transferNature)), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"N\\xB0 d'autorisation\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, transfer.authorizationNumber)), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationValidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Validit\\xE9 de l'autorisation\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, transfer.authorizationValidity)), React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exchangeRate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Cours de change\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, transfer.exchangeRate)))) : null\n      /********************* Commission **************/\n      , React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"chargeType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Type de charge\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, transfer.chargeType)), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Taux applique\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, transfer.applyedRate + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Montant commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, transfer.commissionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionTVA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"TVA sur commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, transfer.commissionTVA + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })))), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"totalAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Montant total\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, transfer.totalAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, transfer.transactionCurrency))), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Appliquer commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, transfer.applyCommission ? \"Oui\" : \"Non\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"reset\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Annuler\"), React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Virer\")))));\n    }\n  }]);\n\n  return Forms;\n}(React.Component);\n\n;\n\nvar TransferIntraAgency =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TransferIntraAgency, _React$Component2);\n\n  function TransferIntraAgency() {\n    _classCallCheck(this, TransferIntraAgency);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TransferIntraAgency).apply(this, arguments));\n  }\n\n  _createClass(TransferIntraAgency, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Saisie du virement\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"principalAccount\",\n        className: \"col-md-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"111\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"testttttt\")))))), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return TransferIntraAgency;\n}(React.Component);\n\nexport default TransferIntraAgency;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/Transfer.jsx"],"names":["React","getTransfer","formatDateTime","Card","CardHeader","CardBody","InputGroupAddon","InputGroupText","InputGroup","Row","Col","FormGroup","Input","Label","Button","NotFound","Forms","props","state","event","isLoading","clubs","loadTransferDetails","bind","id","setState","then","response","transfer","catch","error","status","notFound","serverError","match","params","handleSubmit","principalAccount","principalCurrency","beneficiaryAccount","beneficiaryCurrency","transactionAmount","transactionCurrency","transferReason","handleChange","executionDate","largeAmount","tradingTicket","transferNature","authorizationNumber","authorizationValidity","exchangeRate","chargeType","applyedRate","commissionAmount","commissionTVA","totalAmount","applyCommission","Component","TransferIntraAgency"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { getTransfer } from '../../../util/APIUtils';\n// react plugin used to create datetime\nimport { formatDateTime } from \"../../../util/Helpers\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\n\n\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\nclass Forms extends React.Component {\n  // Constructeur\n  constructor(props) {\n    super(props);\n    this.state = {\n      event: null,\n      isLoading: true,\n      clubs: []\n    };\n    this.loadTransferDetails = this.loadTransferDetails.bind(this);\n  }\n\n  loadTransferDetails(id) {\n    this.setState({\n      isLoading: true\n    });\n\n    getTransfer(id)\n        .then(response => {\n          this.setState({\n            transfer: response,\n            isLoading: false\n          });\n        }).catch(error => {\n      if(error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.loadTransferDetails(id);\n  }\n\n  render() {\n    const { isLoading, transfer } = this.state;\n    /*if(isLoading) {\n      return <LoadingIndicator />;\n    }*/\n\n    if(this.state.notFound ) {\n      return <NotFound />;\n    }\n\n    /*if(this.state.serverError) {\n      return <ServerError />;\n    }*/\n    return (\n        <>\n          <Card>\n            <CardBody>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"principalAccount\">N° compte débiteur</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.principalAccount+\" \"}<span>{transfer.principalCurrency}</span>\n                    </h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.beneficiaryAccount+\" \"}<span>{transfer.beneficiaryCurrency}</span>\n                    </h3>\n                  </FormGroup>\n                </div>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transactionAmount\">Montant</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.transactionAmount+\" \"}<span>{transfer.transactionCurrency}</span>\n                    </h3>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transferReason\">Motif</Label>\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Motif ...\"\n                        id=\"transferReason\"\n                        value={this.state.transferReason}\n                        onChange={this.handleChange}\n                    />\n                    <h3 className=\"card-title\">{transfer.transferReason}</h3>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"executionDate\">Date d'execution</Label>\n                    <h3 className=\"card-title\">{formatDateTime(transfer.executionDate)}</h3>\n                  </FormGroup>\n                </div>\n                {/********************* Echange **************/\n                  (transfer.principalCurrency===\"MAD\" && transfer.beneficiaryCurrency!==\"MAD\") ?(\n                 <>\n                   {\n                     (transfer.transactionAmount>transfer.largeAmount)?(\n                         <FormGroup>\n                           <Label for=\"tradingTicket\">Ticket de négociation</Label>\n                           <h3 className=\"card-title\">{transfer.tradingTicket}</h3>\n                         </FormGroup>\n                     ):null\n                   }\n                   <FormGroup>\n                    <Label for=\"transferNature\">Nature de transfert</Label>\n                     <h3 className=\"card-title\">{transfer.transferNature}</h3>\n                  </FormGroup>\n\n                  <div className=\"form-row\">\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"authorizationNumber\">N° d'autorisation</Label>\n                      <h3 className=\"card-title\">{transfer.authorizationNumber}</h3>\n                    </FormGroup>\n                    <FormGroup className=\"col-md-6\">\n                      <Label for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                      <h3 className=\"card-title\">{transfer.authorizationValidity}</h3>\n                    </FormGroup>\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"exchangeRate\">Cours de change</Label>\n                      <h3 className=\"card-title\">{transfer.exchangeRate}</h3>\n                    </FormGroup>\n                   </div>\n                 </>):null\n                  /********************* Commission **************/}\n                <FormGroup>\n                  <Label for=\"chargeType\">Type de charge</Label>\n                  <h3 className=\"card-title\">{transfer.chargeType}</h3>\n                </FormGroup>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionCode\">Taux applique</Label>\n                    <h3 className=\"card-title\">{transfer.applyedRate+\" \"}<span></span></h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionAmount\">Montant commission</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.commissionAmount+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionTVA\">TVA sur commission</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.commissionTVA+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n                </div>\n\n                <FormGroup check>\n                  <Label for=\"totalAmount\">Montant total</Label>\n                  <h3 className=\"card-title\">\n                    {transfer.totalAmount+\" \"}<span>{transfer.transactionCurrency}</span>\n                  </h3>\n                </FormGroup>\n                <FormGroup check>\n                  <Label className=\"form-check-label\">Appliquer commission</Label>\n                  <h3 className=\"card-title\">\n                    {transfer.applyCommission?(\"Oui\"):\"Non\"}\n                  </h3>\n                </FormGroup>\n\n                <br />\n                <Button  type=\"reset\" color=\"primary\">Annuler</Button>\n                <Button type=\"submit\" color=\"primary\">Virer</Button>\n              </form>\n            </CardBody>\n          </Card>\n        </>\n    );\n  }\n};\n\nclass TransferIntraAgency extends React.Component {\n\n  render() {\n    return (\n        <>\n          <div className=\"content\">\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <h4 className=\"title\">Saisie du virement</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col md=\"2\"></Col>\n                      <Col md=\"8\">\n                        {/* Virement INTRA en agence*/}\n                        {/*<Forms notify={(place,type,message) => this.props.notify(place,type,message)} />*/}\n                        <div className=\"row\">\n                          <Label for=\"principalAccount\" className={\"col-md-2 col-form-label\"}>N° compte débiteur</Label>\n                          <div className=\"col-md-2\">\n                            <FormGroup>\n                              <h3 className=\"card-title\">\n                                111<span>testttttt</span>\n                              </h3>\n                            </FormGroup>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"2\"></Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\n\nexport default TransferIntraAgency;\n\n"]},"metadata":{},"sourceType":"module"}