{"ast":null,"code":"import _defineProperty from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer.jsx\";\nimport React from \"react\";\nimport { getAccountData, getAccountCurrency, createTransfer, getCommissionData } from '../../util/APIUtils'; // react plugin used to create datetimepicker\n\nimport ReactDatetime from \"react-datetime\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, InputGroupAddon, InputGroupText, InputGroup, Row, Col, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nvar Forms =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forms, _React$Component);\n\n  function Forms(props) {\n    var _this;\n\n    _classCallCheck(this, Forms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Forms).call(this, props));\n\n    _this.loadAccountCurrency = function (event) {\n      var number = event.target.value;\n      var id = event.target.id;\n\n      if (number.length === 7) {\n        var idCurrency = id === \"principalAccount\" ? \"principalCurrency\" : \"beneficiaryCurrency\";\n        var promise;\n\n        _this.setState({\n          //isLoadingCurrency: true\n          commissionAmount: 13\n        });\n        /*promise = getAccountCurrency(number);\n         if(!promise) {\n          return;\n        }\n         this.setState({\n          isLoadingCurrency: true\n        });\n         promise\n            .then(response => {\n              this.setState({\n                [idCurrency]: response.content,\n                isLoadingCurrency: false\n              })\n            }).catch(error => {\n          this.setState({\n            isLoadingCurrency: false\n          })\n        });*/\n\n      }\n    };\n\n    _this.loadCommissionData = function (event) {\n      //event.preventDefault();\n      var commissionData = {\n        accountN1: _this.state.principalAccount,\n        accountN2: _this.state.beneficiaryAccount,\n        amount: _this.state.totalAmount\n      };\n      var promise; //promise = getCommissionData(commissionData);\n\n      if (!promise) {\n        return;\n      }\n\n      _this.setState({\n        //isLoadingCurrency: true\n        commissionAmount: 13\n      });\n      /*promise\n          .then(response => {*/\n\n\n      _this.setState({\n        applyedRate: 12,\n        //response.applyedRate,\n        commissionAmount: 13,\n        //response.commissionAmount,\n        commissionTVA: 14 //response.commissionTVA,\n        //isLoadingCurrency: false\n\n      });\n      /*\n      }).catch(error => {\n      this.setState({\n      //isLoadingCurrency: false\n      })\n      });*/\n\n    };\n\n    _this.state = {\n      focused: \"\",\n      transactionType: \"\",\n      principalAccount: \"\",\n      principalCurrency: \"NaN\",\n      beneficiaryAccount: \"\",\n      beneficiaryCurrency: \"NaN\",\n      transactionAmount: 0,\n      transactionCurrency: \"NaN\",\n      transferReason: \"\",\n      executionDate: new Date(),\n      DBValueDate: \"\",\n      CRValueDate: \"\",\n      transferNature: \"\",\n      authorizationNumber: \"\",\n      authorizationValidity: \"\",\n      //commissionCode: 0,\n      applyedRate: 0,\n      commissionAmount: 0,\n      applyCommission: true,\n      commissionTVA: 0,\n      chargeType: \"\",\n      exchangeRate: \"\",\n      tradingTicket: \"\",\n      largeAmount: 4000,\n      totalAmount: 2000,\n      account: [],\n\n      /*page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,*/\n      isLoadingAccount: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.loadAccountData = this.loadAccountData.bind(this);\n\n    _this.loadCommissionData = _this.loadCommissionData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadAccountCurrency = _this.loadAccountCurrency.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTotalAmount = _this.getTotalAmount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Forms, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var id = target.id; //console.log(id+\":\"+value);\n\n      this.setState(_defineProperty({}, id, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var transferData = {\n        transactionType: this.state.transactionType,\n        principalAccount: this.state.principalAccount,\n        principalCurrency: this.state.principalCurrency,\n        beneficiaryAccount: this.state.beneficiaryAccount,\n        beneficiaryCurrency: this.state.beneficiaryCurrency,\n        transactionAmount: this.state.transactionAmount,\n        transactionCurrency: this.state.transactionCurrency,\n        transferReason: this.state.transferReason,\n        executionDate: this.state.executionDate,\n        transferNature: this.state.transferNature,\n        authorizationNumber: this.state.authorizationNumber,\n        authorizationValidity: this.state.authorizationValidity,\n        //commissionCode: this.state.commissionCode,\n        applyedRate: this.state.applyedRate,\n        commissionAmount: this.state.commissionAmount,\n        applyCommission: this.state.applyCommission,\n        commissionTVA: this.state.commissionTVA,\n        chargeType: this.state.chargeType,\n        exchangeRate: this.state.exchangeRate,\n        tradingTicket: this.state.tradingTicket,\n        totalAmount: this.state.totalAmount\n      };\n      createTransfer(transferData).then(function (response) {\n        _this2.props.notify('tr', 'success', 'Virement effectué avec succès');\n\n        _this2.props.history.push(\"/\");\n      }).catch(function (error) {\n        if (error.status === 401) {\n          _this2.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer un virement.');\n        } else {\n          _this2.props.notify('tr', 'danger', 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n        }\n      });\n    }\n    /*loadAccountData(number) {\n      let promise;\n       promise = getAccountData(number);\n       if(!promise) {\n        return;\n      }\n       this.setState({\n        isLoadingCurrency: true\n      });\n       promise\n          .then(response => {\n            this.setState({\n              account: response.content,\n              isLoadingCurrency: false\n            })\n          }).catch(error => {\n        this.setState({\n          isLoadingCurrency: false\n        })\n      });\n    }*/\n\n  }, {\n    key: \"getTotalAmount\",\n    value: function getTotalAmount() {\n      if (this.state.applyCommission) {\n        /* this.setState({\n           totalAmount: parseFloat(this.state.transactionAmount)+this.state.commissionAmount+this.state.commissionTVA\n         });*/\n        return (\n          /*this.totalAmount;//=*/\n          parseFloat(this.state.transactionAmount) + this.state.commissionAmount + this.state.commissionTVA\n        );\n      } else {\n        /*this.setState({\n          totalAmount: this.state.principalCurrency\n        });*/\n        return (\n          /*this.totalAmount;//=*/\n          this.state.transactionAmount\n        );\n      }\n    }\n  }, {\n    key: \"getTransactionCurrency\",\n    value: function getTransactionCurrency() {\n      if (this.state.principalCurrency === this.state.beneficiaryCurrency) {\n        this.setState({\n          transactionCurrency: this.state.principalCurrency\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"principalAccount\",\n        placeholder: \"D\\xE9biteur\",\n        value: this.state.principalAccount,\n        onChange: function onChange(event) {\n          _this3.handleChange(event);\n\n          _this3.loadAccountCurrency(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, this.state.principalCurrency))))), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"beneficiaryAccount\",\n        placeholder: \"B\\xE9n\\xE9ficiaire\",\n        value: this.state.beneficiaryAccount,\n        onChange: function onChange(event) {\n          _this3.handleChange(event);\n\n          _this3.loadAccountCurrency(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, this.state.beneficiaryCurrency)))))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transactionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"transactionAmount\",\n        placeholder: \"Montant ...\",\n        value: this.state.transactionAmount,\n        onChange: function onChange(event) {\n          _this3.handleChange(event);\n\n          _this3.getTransactionCurrency();\n\n          _this3.loadCommissionData(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, this.state.principalCurrency === this.state.beneficiaryCurrency ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, this.state.transactionCurrency) : React.createElement(\"select\", {\n        name: \"select\",\n        className: \"form-control1\",\n        id: \"transactionCurrency\",\n        value: this.state.transactionCurrency,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, this.state.principalCurrency), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, this.state.beneficiaryCurrency)))))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferReason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Motif\"), React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Motif ...\",\n        id: \"transferReason\",\n        value: this.state.transferReason,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"executionDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Date d'execution\"), React.createElement(ReactDatetime, {\n        id: \"executionDate\",\n        inputProps: {\n          className: \"form-control\",\n          placeholder: \"Date Picker Here\"\n        },\n        value: this.state.executionDate,\n        defaultValue: new Date(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }))),\n      /********************* Echange **************/\n      this.state.principalCurrency === \"MAD\" && this.state.beneficiaryCurrency !== \"MAD\" ? React.createElement(React.Fragment, null, this.state.transactionAmount > this.state.largeAmount ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"tradingTicket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Ticket de n\\xE9gociation\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"tradingTicket\",\n        placeholder: \"ticket ...\",\n        className: \"tim-icons\",\n        value: this.state.tradingTicket,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      })) : null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferNature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"Nature de transfert\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"transferNature\",\n        value: this.state.transferNature,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"2\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"N\\xB0 d'autorisation\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"authorizationNumber\",\n        placeholder: \"Code ...\",\n        value: this.state.authorizationNumber,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationValidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"Validit\\xE9 de l'autorisation\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"authorizationValidity\",\n        placeholder: \"???\",\n        value: this.state.authorizationValidity,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exchangeRate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Cours de change\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"exchangeRate\",\n        placeholder: \"...\",\n        value: this.state.exchangeRate,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      })))) : null\n      /********************* Commission **************/\n      , React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"chargeType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, \"Type de charge\"), React.createElement(Input, {\n        type: \"select\",\n        id: \"chargeType\",\n        name: \"select\",\n        value: this.state.chargeType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"OUR\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, \"2\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"Taux applique\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, this.state.applyedRate + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"Montant commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, this.state.commissionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionTVA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, \"TVA sur commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, this.state.commissionTVA + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      })))), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"totalAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \"Montant total\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, this.getTotalAmount() + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, this.state.transactionCurrency))), this.state.totalAmount, React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        id: \"applyCommission\",\n        onChange: this.handleChange,\n        checked: this.state.applyCommission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }), \"Appliquer commission\", React.createElement(\"span\", {\n        className: \"form-check-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"reset\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, \"Annuler\"), React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \"Virer\")))));\n    }\n  }]);\n\n  return Forms;\n}(React.Component);\n\n;\n\nvar Transfer =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Transfer, _React$Component2);\n\n  function Transfer(props) {\n    _classCallCheck(this, Transfer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Transfer).call(this, props));\n  }\n\n  _createClass(Transfer, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, \"Saisie du virement\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(Forms, {\n        notify: function notify(place, type, message) {\n          return _this4.props.notify(place, type, message);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Transfer;\n}(React.Component);\n\nexport default Transfer;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer.jsx"],"names":["React","getAccountData","getAccountCurrency","createTransfer","getCommissionData","ReactDatetime","Card","CardHeader","CardBody","InputGroupAddon","InputGroupText","InputGroup","Row","Col","FormGroup","Input","Label","Button","Forms","props","loadAccountCurrency","event","number","target","value","id","length","idCurrency","promise","setState","commissionAmount","loadCommissionData","commissionData","accountN1","state","principalAccount","accountN2","beneficiaryAccount","amount","totalAmount","applyedRate","commissionTVA","focused","transactionType","principalCurrency","beneficiaryCurrency","transactionAmount","transactionCurrency","transferReason","executionDate","Date","DBValueDate","CRValueDate","transferNature","authorizationNumber","authorizationValidity","applyCommission","chargeType","exchangeRate","tradingTicket","largeAmount","account","isLoadingAccount","handleChange","bind","handleSubmit","getTotalAmount","type","checked","preventDefault","transferData","then","response","notify","history","push","catch","error","status","handleLogout","parseFloat","getTransactionCurrency","className","placeholder","Component","Transfer","place","message"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  getAccountData, getAccountCurrency, createTransfer, getCommissionData\n} from '../../util/APIUtils';\n// react plugin used to create datetimepicker\nimport ReactDatetime from \"react-datetime\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass Forms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focused: \"\",\n      transactionType: \"\",\n      principalAccount: \"\",\n      principalCurrency: \"NaN\",\n      beneficiaryAccount: \"\",\n      beneficiaryCurrency: \"NaN\",\n      transactionAmount: 0,\n      transactionCurrency: \"NaN\",\n      transferReason: \"\",\n      executionDate: new Date(),\n      DBValueDate: \"\",\n      CRValueDate: \"\",\n      transferNature: \"\",\n      authorizationNumber: \"\",\n      authorizationValidity: \"\",\n      //commissionCode: 0,\n      applyedRate:0,\n      commissionAmount: 0,\n      applyCommission: true,\n      commissionTVA: 0,\n      chargeType: \"\",\n      exchangeRate: \"\",\n      tradingTicket: \"\",\n      largeAmount: 4000,\n      totalAmount:2000,\n\n      account: [],\n      /*page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,*/\n      isLoadingAccount: true\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //this.loadAccountData = this.loadAccountData.bind(this);\n    this.loadCommissionData = this.loadCommissionData.bind(this);\n    this.loadAccountCurrency = this.loadAccountCurrency.bind(this);\n    this.getTotalAmount = this.getTotalAmount.bind(this);\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const id = target.id;\n\n    //console.log(id+\":\"+value);\n\n    this.setState({\n      [id]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const transferData = {\n        transactionType: this.state.transactionType,\n        principalAccount: this.state.principalAccount,\n        principalCurrency: this.state.principalCurrency,\n        beneficiaryAccount: this.state.beneficiaryAccount,\n        beneficiaryCurrency: this.state.beneficiaryCurrency,\n        transactionAmount: this.state.transactionAmount,\n        transactionCurrency: this.state.transactionCurrency,\n        transferReason: this.state.transferReason,\n        executionDate: this.state.executionDate,\n        transferNature: this.state.transferNature,\n        authorizationNumber: this.state.authorizationNumber,\n        authorizationValidity: this.state.authorizationValidity,\n        //commissionCode: this.state.commissionCode,\n        applyedRate: this.state.applyedRate,\n        commissionAmount: this.state.commissionAmount,\n        applyCommission: this.state.applyCommission,\n        commissionTVA: this.state.commissionTVA,\n        chargeType: this.state.chargeType,\n        exchangeRate: this.state.exchangeRate,\n        tradingTicket: this.state.tradingTicket,\n        totalAmount: this.state.totalAmount\n    };\n\n    createTransfer(transferData)\n        .then(response => {\n          this.props.notify('tr','success','Virement effectué avec succès');\n          this.props.history.push(\"/\");\n        }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer un virement.');\n      } else {\n        this.props.notify('tr','danger','Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n      }\n    });\n  }\n\n  /*loadAccountData(number) {\n    let promise;\n\n    promise = getAccountData(number);\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoadingCurrency: true\n    });\n\n    promise\n        .then(response => {\n          this.setState({\n            account: response.content,\n            isLoadingCurrency: false\n          })\n        }).catch(error => {\n      this.setState({\n        isLoadingCurrency: false\n      })\n    });\n  }*/\n\n  loadAccountCurrency = (event) => {\n    const number = event.target.value;\n    const id = event.target.id;\n\n    if(number.length===7){\n      let idCurrency = (id===\"principalAccount\")?(\"principalCurrency\"):(\"beneficiaryCurrency\");\n      let promise;\n\n        this.setState({\n            //isLoadingCurrency: true\n            commissionAmount: 13\n        });\n      /*promise = getAccountCurrency(number);\n\n      if(!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingCurrency: true\n      });\n\n      promise\n          .then(response => {\n            this.setState({\n              [idCurrency]: response.content,\n              isLoadingCurrency: false\n            })\n          }).catch(error => {\n        this.setState({\n          isLoadingCurrency: false\n        })\n      });*/\n    }\n  };\n\n  loadCommissionData = (event) => {\n    //event.preventDefault();\n\n    let commissionData = {\n      accountN1 : this.state.principalAccount,\n      accountN2 : this.state.beneficiaryAccount,\n      amount : this.state.totalAmount\n    };\n\n    let promise;\n\n    //promise = getCommissionData(commissionData);\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      //isLoadingCurrency: true\n      commissionAmount: 13\n    });\n\n    /*promise\n        .then(response => {*/\n          this.setState({\n            applyedRate: 12,//response.applyedRate,\n            commissionAmount: 13,//response.commissionAmount,\n            commissionTVA: 14//response.commissionTVA,\n            //isLoadingCurrency: false\n          })/*\n        }).catch(error => {\n      this.setState({\n        //isLoadingCurrency: false\n      })\n    });*/\n  };\n\n  getTotalAmount(){\n    if(this.state.applyCommission){\n     /* this.setState({\n        totalAmount: parseFloat(this.state.transactionAmount)+this.state.commissionAmount+this.state.commissionTVA\n      });*/\n      return /*this.totalAmount;//=*/parseFloat(this.state.transactionAmount)+this.state.commissionAmount+this.state.commissionTVA;\n    }\n    else{\n      /*this.setState({\n        totalAmount: this.state.principalCurrency\n      });*/\n      return /*this.totalAmount;//=*/this.state.transactionAmount;\n    }\n  }\n\n  getTransactionCurrency(){\n    if(this.state.principalCurrency===this.state.beneficiaryCurrency){\n      this.setState({\n        transactionCurrency: this.state.principalCurrency\n      })\n    }\n  }\n\n  render() {\n    return (\n        <>\n          <Card>\n            <CardBody>\n              <form onSubmit={this.handleSubmit}>\n                {/*<FormGroup>\n                  <Label for=\"transactionType\">Type de transaction</Label>\n                  <Input\n                      type=\"select\"\n                      name=\"select\"\n                      id=\"transactionType\"\n                      value={this.state.transactionType}\n                      onChange={this.handleChange}\n                  >\n                    <option selected>1</option>\n                    <option>2</option>\n                  </Input>\n                </FormGroup>*/}\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"principalAccount\">N° compte débiteur</Label>\n                    <InputGroup>\n                      <Input\n                          type=\"number\"\n                          id=\"principalAccount\"\n                          placeholder=\"Débiteur\"\n                          value={this.state.principalAccount}\n                          onChange={(event)=>{this.handleChange(event);this.loadAccountCurrency(event)}}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          <p>{this.state.principalCurrency}</p>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                    <InputGroup>\n                      <Input\n                          type=\"number\"\n                          id=\"beneficiaryAccount\"\n                          placeholder=\"Bénéficiaire\"\n                          value={this.state.beneficiaryAccount}\n                          onChange={(event)=>{this.handleChange(event);this.loadAccountCurrency(event)}}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          <p>{this.state.beneficiaryCurrency}</p>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                </div>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transactionAmount\">Montant</Label>\n                    <InputGroup>\n                      <Input\n                          type=\"number\"\n                          id=\"transactionAmount\"\n                          placeholder=\"Montant ...\"\n                          value={this.state.transactionAmount}\n                          onChange={(event)=>{this.handleChange(event);this.getTransactionCurrency();this.loadCommissionData(event)}}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          {this.state.principalCurrency===this.state.beneficiaryCurrency?\n                              (<p>{this.state.transactionCurrency}</p>):\n                              (<select\n                                  name=\"select\"\n                                  className=\"form-control1\"\n                                  id=\"transactionCurrency\"\n                                  value={this.state.transactionCurrency}\n                                  onChange={this.handleChange}\n                              >\n                                <option selected>{this.state.principalCurrency}</option>\n                                <option>{this.state.beneficiaryCurrency}</option>\n                              </select>)\n                          }\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transferReason\">Motif</Label>\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Motif ...\"\n                        id=\"transferReason\"\n                        value={this.state.transferReason}\n                        onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"executionDate\">Date d'execution</Label>\n                    <ReactDatetime\n                        id=\"executionDate\"\n                        inputProps={{\n                          className: \"form-control\",\n                          placeholder: \"Date Picker Here\"\n                        }}\n                        value={this.state.executionDate}\n                        defaultValue={new Date()}\n                    />\n                  </FormGroup>\n                </div>\n                {/********************* Echange **************/\n                  (this.state.principalCurrency===\"MAD\" && this.state.beneficiaryCurrency!==\"MAD\") ?(\n                 <>\n                   {\n                     (this.state.transactionAmount>this.state.largeAmount)?(\n                         <FormGroup>\n                           <Label for=\"tradingTicket\">Ticket de négociation</Label>\n                           <Input\n                               type=\"number\"\n                               id=\"tradingTicket\"\n                               placeholder=\"ticket ...\"\n                               className=\"tim-icons\"\n                               value={this.state.tradingTicket}\n                               onChange={this.handleChange}\n                           />\n                         </FormGroup>\n                     ):null\n                   }\n                   <FormGroup>\n                    <Label for=\"transferNature\">Nature de transfert</Label>\n                    <Input\n                        type=\"select\"\n                        name=\"select\"\n                        id=\"transferNature\"\n                        value={this.state.transferNature}\n                        onChange={this.handleChange}\n                    >\n                      <option selected>1</option>\n                      <option>2</option>\n                    </Input>\n                  </FormGroup>\n\n                  <div className=\"form-row\">\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"authorizationNumber\">N° d'autorisation</Label>\n                      <Input\n                          type=\"number\"\n                          id=\"authorizationNumber\"\n                          placeholder=\"Code ...\"\n                          value={this.state.authorizationNumber}\n                          onChange={this.handleChange}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-6\">\n                      <Label for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                      <Input\n                          type=\"number\"\n                          id=\"authorizationValidity\"\n                          placeholder=\"???\"\n                          value={this.state.authorizationValidity}\n                          onChange={this.handleChange}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"exchangeRate\">Cours de change</Label>\n                      <Input\n                          type=\"number\"\n                          id=\"exchangeRate\"\n                          placeholder=\"...\"\n                          value={this.state.exchangeRate}\n                          disabled\n                      />\n                    </FormGroup>\n                   </div>\n                 </>):null\n                  /********************* Commission **************/}\n                <FormGroup>\n                  <Label for=\"chargeType\">Type de charge</Label>\n                  <Input\n                      type=\"select\"\n                      id=\"chargeType\"\n                      name=\"select\"\n                      value={this.state.chargeType}\n                      onChange={this.handleChange}\n                  >\n                    <option selected>OUR</option>\n                    <option>2</option>\n                  </Input>\n                </FormGroup>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionCode\">{/*Code Commission/*/}Taux applique</Label>\n                    {/*<Input\n                        type=\"number\"\n                        id=\"commissionCode\"\n                        placeholder=\"Code ...\"\n                        value={this.state.commissionCode}\n                        disabled\n                    />*/}\n                    <h3 className=\"card-title\">\n                      {this.state.applyedRate+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionAmount\">Montant commission</Label>\n                    {/*<Input\n                        type=\"number\"\n                        id=\"commissionAmount\"\n                        placeholder=\"MAD\"\n                        value={this.state.commissionAmount}\n                        disabled\n                    />*/}\n                    <h3 className=\"card-title\">\n                      {this.state.commissionAmount+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionTVA\">TVA sur commission</Label>\n                    {/*<Input\n                        type=\"number\"\n                        id=\"commissionTVA\"\n                        placeholder=\"tva ...\"\n                        value={this.state.commissionTVA}\n                        disabled\n                    />*/}\n                    <h3 className=\"card-title\">\n                      {this.state.commissionTVA+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n\n                </div>\n\n                {/*<FormGroup>\n                  <Label for=\"totalAmount\">Montant total</Label>\n                  <Input\n                      type=\"number\"\n                      id=\"totalAmount\"\n                      placeholder=\"...\"\n                      value={this.state.totalAmount}\n                      disabled\n                  />\n                </FormGroup>*/}\n\n                <FormGroup check>\n                  <Label for=\"totalAmount\">Montant total</Label>\n                  <h3 className=\"card-title\">\n                    {this.getTotalAmount()+\" \"}<span>{this.state.transactionCurrency}</span>\n                  </h3>\n                </FormGroup>\n\n                {this.state.totalAmount}\n                <FormGroup check>\n                  <Label className=\"form-check-label\">\n                    <Input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        id=\"applyCommission\"\n                        onChange={this.handleChange}\n                        checked={this.state.applyCommission}\n                    />\n                    Appliquer commission\n                    <span className=\"form-check-sign\">\n                      <span className=\"check\"></span>\n                    </span>\n                  </Label>\n                </FormGroup>\n\n                <br />\n                <Button  type=\"reset\" color=\"primary\">Annuler</Button>\n                <Button type=\"submit\" color=\"primary\">Virer</Button>\n              </form>\n            </CardBody>\n          </Card>\n        </>\n    );\n  }\n};\n\n\nclass Transfer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <>\n          <div className=\"content\">\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <h4 className=\"title\">Saisie du virement</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col md=\"2\"></Col>\n                      <Col md=\"8\">\n                        {/* Virement INTRA en agence*/}\n                        <Forms notify={(place,type,message) => this.props.notify(place,type,message)} />\n                      </Col>\n                      <Col md=\"2\"></Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\nexport default Transfer;\n\n"]},"metadata":{},"sourceType":"module"}