{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/routes/App.js\";\nimport React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../variables/constants'; //import EventList from '../views/HomePage/HomePage';\n\nimport Dashboard from '../views/Dashboard/Dashboard.jsx';\nimport Login from '../views/Login'; //import Signup from '../views/SignUpPage/SignUpPage';\n//import Profile from '../views/ClubPage/ClubPage';\n//import Event from '../views/EventPage/EventPage';\n\nimport NotFound from '../views/NotFound'; //import LoadingIndicator from '../components/LoadingIndicator/LoadingIndicator';\n\nimport PrivateRoute from './PrivateRoute'; // react plugin for creating notifications over the dashboard\n\nimport NotificationAlert from \"react-notification-alert\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      currentUser: null,\n      isAuthenticated: true,\n      //false,\n      isLoading: true\n    };\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadCurrentUser = _this.loadCurrentUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /*componentWillMount(){\n    this.loadCurrentUser();\n    alert(this.state.isAuthenticated);\n  }*/\n\n\n  _createClass(App, [{\n    key: \"loadCurrentUser\",\n    value: function loadCurrentUser() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getCurrentUser().then(function (response) {\n        _this2.setState({\n          currentUser: response,\n          isAuthenticated: true,\n          isLoading: false\n        }); //alert(this.state.isAuthenticated);\n\n      }).catch(function (error) {\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadCurrentUser();\n    }\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout() {\n      var redirectTo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/login\";\n      var notificationType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"success\";\n      var description = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"Vous êtes déconnecté avec succès.\";\n      localStorage.removeItem(ACCESS_TOKEN);\n      this.setState({\n        currentUser: null,\n        isAuthenticated: false\n      });\n      this.props.history.push('/login');\n      /*notification[notificationType]({\n        message: 'Event App',\n        description: description,\n      });*/\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      /*notification.success({\n        message: 'Event App',\n        description: \"Vous êtes connecté avec succès.\",\n      });*/\n      this.notify('tr', 2, \"Vous êtes connecté avec succès.\");\n      this.loadCurrentUser();\n      this.props.history.push(\"/\");\n    }\n    /********************** Notification *************************/\n\n  }, {\n    key: \"notify\",\n    value: function notify(place, type, message) {\n      options = {\n        place: place,\n        message: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Welcome to \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Black Dashboard React\"), \" - a beautiful freebie for every web developer.\")),\n        type: type,\n        icon: \"tim-icons icon-bell-55\",\n        autoDismiss: 7\n      };\n      this.refs.notificationAlert.notificationAlert(options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      /*if(this.state.isLoading) {\n        return <LoadingIndicator />\n      }*/\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/login\",\n        render: function render(props) {\n          return React.createElement(Login, Object.assign({\n            onLogin: _this3.handleLogin\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/user\",\n        component: Dashboard,\n        handleLogout: this.handleLogout,\n        currentUser: this.state.currentUser,\n        isAuthenticated: this.state.isAuthenticated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/routes/App.js"],"names":["React","Component","Route","withRouter","Switch","getCurrentUser","ACCESS_TOKEN","Dashboard","Login","NotFound","PrivateRoute","NotificationAlert","App","props","state","currentUser","isAuthenticated","isLoading","handleLogout","bind","loadCurrentUser","handleLogin","setState","then","response","catch","error","redirectTo","notificationType","description","localStorage","removeItem","history","push","notify","place","type","message","options","icon","autoDismiss","refs","notificationAlert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Route,\n  withRouter,\n  Switch\n} from 'react-router-dom';\n\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../variables/constants';\n\n//import EventList from '../views/HomePage/HomePage';\nimport Dashboard from '../views/Dashboard/Dashboard.jsx';\nimport Login from '../views/Login';\n\n//import Signup from '../views/SignUpPage/SignUpPage';\n//import Profile from '../views/ClubPage/ClubPage';\n//import Event from '../views/EventPage/EventPage';\nimport NotFound from '../views/NotFound';\n//import LoadingIndicator from '../components/LoadingIndicator/LoadingIndicator';\nimport PrivateRoute from './PrivateRoute';\n\n\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: true,//false,\n      isLoading: true\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  /*componentWillMount(){\n    this.loadCurrentUser();\n    alert(this.state.isAuthenticated);\n  }*/\n\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n      //alert(this.state.isAuthenticated);\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });  \n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  handleLogout(redirectTo=\"/login\", notificationType=\"success\", description=\"Vous êtes déconnecté avec succès.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n\n    this.props.history.push('/login');\n    \n    /*notification[notificationType]({\n      message: 'Event App',\n      description: description,\n    });*/\n  }\n\n  handleLogin() {\n    /*notification.success({\n      message: 'Event App',\n      description: \"Vous êtes connecté avec succès.\",\n    });*/\n    this.notify('tr',2,\"Vous êtes connecté avec succès.\");\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  /********************** Notification *************************/\n  notify(place,type, message) {\n\n    options = {\n      place: place,\n      message: (\n          <div>\n            <div>\n              Welcome to <b>Black Dashboard React</b> - a beautiful freebie for\n              every web developer.\n            </div>\n          </div>\n      ),\n      type: type,\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: 7\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  };\n\n  render() {\n    /*if(this.state.isLoading) {\n      return <LoadingIndicator />\n    }*/\n    return (\n              <Switch>      \n                {/*<Route exact path=\"/\"\n                  render={(props) => <EventList isAuthenticated={this.state.isAuthenticated}\n                      onLogout={this.handleLogout} {...props} />}>\n                </Route>*/}\n                <Route path=\"/login\"\n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />} />\n                {/*<Route path=\"/signup\" component={Signup} />*/}\n                <PrivateRoute path=\"/user\" component={Dashboard} handleLogout={this.handleLogout} currentUser={this.state.currentUser} isAuthenticated={this.state.isAuthenticated} />\n\n                <Route component={NotFound} />\n\n              </Switch>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}