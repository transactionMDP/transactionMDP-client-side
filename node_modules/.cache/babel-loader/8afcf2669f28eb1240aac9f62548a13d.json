{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransferPage.jsx\";\nimport React from \"react\";\nimport { getTransfer } from '../../../util/APIUtils'; // react plugin used to create datetime\n\nimport { formatDateTime } from \"../../../util/Helpers\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, InputGroupAddon, InputGroupText, InputGroup, Row, Col, FormGroup, Input, Label, Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\nvar TransferPage2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransferPage2, _React$Component);\n\n  // Constructeur\n  function TransferPage2(props) {\n    var _this;\n\n    _classCallCheck(this, TransferPage2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransferPage2).call(this, props));\n    _this.state = {\n      transfer: null,\n      isLoading: true\n    };\n    _this.loadTransferDetails = _this.loadTransferDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TransferPage2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.loadTransferDetails(id);\n    }\n  }, {\n    key: \"loadTransferDetails\",\n    value: function loadTransferDetails(id) {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getTransfer(id).then(function (response) {\n        _this2.setState({\n          transfer: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this2.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(state) {\n      switch (state) {\n        case 'accepted':\n          return React.createElement(\"p\", {\n            className: \"form-control-static\",\n            style: {\n              color: \"#24ff47\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \"Valid\\xE9e\");\n\n        case 'in_progress':\n          return React.createElement(\"p\", {\n            className: \"form-control-static\",\n            style: {\n              color: \"#ffaa23\"\n            },\n            color: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"Encours\");\n\n        case 'canceled':\n          return React.createElement(\"p\", {\n            className: \"form-control-static\",\n            style: {\n              color: \"#FF0000\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, \"Annul\\xE9e\");\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          transfer = _this$state.transfer;\n\n      if (isLoading) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Waiting\");\n      }\n\n      if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n\n      return React.createElement(React.Fragment, null, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, transfer.principalAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, transfer.principalCurrency))), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, transfer.beneficiaryAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, transfer.beneficiaryCurrency)))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transactionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, transfer.transactionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, transfer.transactionCurrency))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferReason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Motif\"), React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Motif ...\",\n        id: \"transferReason\",\n        value: this.state.transferReason,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, transfer.transferReason)), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"executionDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Date d'execution\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, formatDateTime(transfer.executionDate)))),\n      /********************* Echange **************/\n      transfer.principalCurrency === \"MAD\" && transfer.beneficiaryCurrency !== \"MAD\" ? React.createElement(React.Fragment, null, transfer.transactionAmount > transfer.largeAmount ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"tradingTicket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Ticket de n\\xE9gociation\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, transfer.tradingTicket)) : null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferNature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Nature de transfert\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, transfer.transferNature)), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"N\\xB0 d'autorisation\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, transfer.authorizationNumber)), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationValidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Validit\\xE9 de l'autorisation\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, transfer.authorizationValidity)), React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exchangeRate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Cours de change\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, transfer.exchangeRate)))) : null\n      /********************* Commission **************/\n      , React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"chargeType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Type de charge\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, transfer.chargeType)), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Taux applique\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, transfer.applyedRate + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Montant commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, transfer.commissionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionTVA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"TVA sur commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, transfer.commissionTVA + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })))), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"totalAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Montant total\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, transfer.totalAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, transfer.transactionCurrency))), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Appliquer commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, transfer.applyCommission ? \"Oui\" : \"Non\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"reset\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Annuler\"), React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Virer\")))));\n    }\n  }]);\n\n  return TransferPage2;\n}(React.Component);\n\n;\n\nvar TransferPage =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TransferPage, _React$Component2);\n\n  // Constructeur\n  function TransferPage(props) {\n    var _this3;\n\n    _classCallCheck(this, TransferPage);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(TransferPage).call(this, props));\n    _this3.state = {\n      transfer: null,\n      isLoading: true\n    };\n    _this3.loadTransferDetails = _this3.loadTransferDetails.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(TransferPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.loadTransferDetails(id);\n    }\n  }, {\n    key: \"loadTransferDetails\",\n    value: function loadTransferDetails(id) {\n      var _this4 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getTransfer(id).then(function (response) {\n        _this4.setState({\n          transfer: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this4.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this4.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(state) {\n      switch (state) {\n        case 'accepted':\n          return React.createElement(\"p\", {\n            className: \"form-control-static\",\n            style: {\n              color: \"#24ff47\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }, \"Valid\\xE9e\");\n\n        case 'in_progress':\n          return React.createElement(\"p\", {\n            className: \"form-control-static\",\n            style: {\n              color: \"#ffaa23\"\n            },\n            color: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, \"Encours\");\n\n        case 'canceled':\n          return React.createElement(\"p\", {\n            className: \"form-control-static\",\n            style: {\n              color: \"#FF0000\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }, \"Annul\\xE9e\");\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          isLoading = _this$state2.isLoading,\n          transfer = _this$state2.transfer;\n\n      if (isLoading) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, \"Waiting\");\n      }\n\n      if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        });\n      }\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(BreadcrumbItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/user/transfers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Mes virements\")), React.createElement(BreadcrumbItem, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Virement\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Virement\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, transfer.principalAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, transfer.beneficiaryAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transactionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, transfer.transactionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }))))))), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return TransferPage;\n}(React.Component);\n\nexport default TransferPage2;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransferPage.jsx"],"names":["React","getTransfer","formatDateTime","Card","CardHeader","CardBody","InputGroupAddon","InputGroupText","InputGroup","Row","Col","FormGroup","Input","Label","Button","Breadcrumb","BreadcrumbItem","NotFound","TransferPage2","props","state","transfer","isLoading","loadTransferDetails","bind","id","match","params","setState","then","response","catch","error","status","notFound","serverError","color","handleSubmit","principalAccount","principalCurrency","beneficiaryAccount","beneficiaryCurrency","transactionAmount","transactionCurrency","transferReason","handleChange","executionDate","largeAmount","tradingTicket","transferNature","authorizationNumber","authorizationValidity","exchangeRate","chargeType","applyedRate","commissionAmount","commissionTVA","totalAmount","applyCommission","Component","TransferPage"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { getTransfer } from '../../../util/APIUtils';\n// react plugin used to create datetime\nimport { formatDateTime } from \"../../../util/Helpers\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n  Label,\n  Button,\n  Breadcrumb,\n  BreadcrumbItem\n} from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\n\n\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\nclass TransferPage2 extends React.Component {\n    // Constructeur\n    constructor(props) {\n        super(props);\n        this.state = {\n            transfer: null,\n            isLoading: true,\n        };\n        this.loadTransferDetails = this.loadTransferDetails.bind(this);\n    }\n\n    componentDidMount() {\n        const id = this.props.match.params.id;\n        this.loadTransferDetails(id);\n    }\n\n    loadTransferDetails(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        getTransfer(id)\n            .then(response => {\n                this.setState({\n                    transfer: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n\n    renderSwitch(state) {\n        switch(state) {\n            case 'accepted':\n                return <p className=\"form-control-static\" style={{color:\"#24ff47\"}}>Validée</p>;\n            case 'in_progress':\n                return <p className=\"form-control-static\" style={{color:\"#ffaa23\"}} color=\"warning\">Encours</p>;\n            case 'canceled':\n                return <p className=\"form-control-static\" style={{color:\"#FF0000\"}}>Annulée</p>;\n            default:\n                return null;\n        }\n    }\n\n  render() {\n      const { isLoading, transfer } = this.state;\n      if(isLoading) {\n          return <h1>Waiting</h1>;\n      }\n\n      if(this.state.notFound ) {\n          return <NotFound />;\n      }\n\n    /*if(this.state.serverError) {\n      return <ServerError />;\n    }*/\n    return (\n        <>\n          <Card>\n            <CardBody>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"principalAccount\">N° compte débiteur</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.principalAccount+\" \"}<span>{transfer.principalCurrency}</span>\n                    </h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.beneficiaryAccount+\" \"}<span>{transfer.beneficiaryCurrency}</span>\n                    </h3>\n                  </FormGroup>\n                </div>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transactionAmount\">Montant</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.transactionAmount+\" \"}<span>{transfer.transactionCurrency}</span>\n                    </h3>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transferReason\">Motif</Label>\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Motif ...\"\n                        id=\"transferReason\"\n                        value={this.state.transferReason}\n                        onChange={this.handleChange}\n                    />\n                    <h3 className=\"card-title\">{transfer.transferReason}</h3>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"executionDate\">Date d'execution</Label>\n                    <h3 className=\"card-title\">{formatDateTime(transfer.executionDate)}</h3>\n                  </FormGroup>\n                </div>\n                {/********************* Echange **************/\n                  (transfer.principalCurrency===\"MAD\" && transfer.beneficiaryCurrency!==\"MAD\") ?(\n                 <>\n                   {\n                     (transfer.transactionAmount>transfer.largeAmount)?(\n                         <FormGroup>\n                           <Label for=\"tradingTicket\">Ticket de négociation</Label>\n                           <h3 className=\"card-title\">{transfer.tradingTicket}</h3>\n                         </FormGroup>\n                     ):null\n                   }\n                   <FormGroup>\n                    <Label for=\"transferNature\">Nature de transfert</Label>\n                     <h3 className=\"card-title\">{transfer.transferNature}</h3>\n                  </FormGroup>\n\n                  <div className=\"form-row\">\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"authorizationNumber\">N° d'autorisation</Label>\n                      <h3 className=\"card-title\">{transfer.authorizationNumber}</h3>\n                    </FormGroup>\n                    <FormGroup className=\"col-md-6\">\n                      <Label for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                      <h3 className=\"card-title\">{transfer.authorizationValidity}</h3>\n                    </FormGroup>\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"exchangeRate\">Cours de change</Label>\n                      <h3 className=\"card-title\">{transfer.exchangeRate}</h3>\n                    </FormGroup>\n                   </div>\n                 </>):null\n                  /********************* Commission **************/}\n                <FormGroup>\n                  <Label for=\"chargeType\">Type de charge</Label>\n                  <h3 className=\"card-title\">{transfer.chargeType}</h3>\n                </FormGroup>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionCode\">Taux applique</Label>\n                    <h3 className=\"card-title\">{transfer.applyedRate+\" \"}<span></span></h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionAmount\">Montant commission</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.commissionAmount+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionTVA\">TVA sur commission</Label>\n                    <h3 className=\"card-title\">\n                      {transfer.commissionTVA+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n                </div>\n\n                <FormGroup check>\n                  <Label for=\"totalAmount\">Montant total</Label>\n                  <h3 className=\"card-title\">\n                    {transfer.totalAmount+\" \"}<span>{transfer.transactionCurrency}</span>\n                  </h3>\n                </FormGroup>\n                <FormGroup check>\n                  <Label className=\"form-check-label\">Appliquer commission</Label>\n                  <h3 className=\"card-title\">\n                    {transfer.applyCommission?(\"Oui\"):\"Non\"}\n                  </h3>\n                </FormGroup>\n\n                <br />\n                <Button  type=\"reset\" color=\"primary\">Annuler</Button>\n                <Button type=\"submit\" color=\"primary\">Virer</Button>\n              </form>\n            </CardBody>\n          </Card>\n        </>\n    );\n  }\n};\n\nclass TransferPage extends React.Component {\n    // Constructeur\n    constructor(props) {\n        super(props);\n        this.state = {\n            transfer: null,\n            isLoading: true,\n        };\n        this.loadTransferDetails = this.loadTransferDetails.bind(this);\n    }\n\n    componentDidMount() {\n        const id = this.props.match.params.id;\n        this.loadTransferDetails(id);\n    }\n\n    loadTransferDetails(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        getTransfer(id)\n            .then(response => {\n                this.setState({\n                    transfer: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n\n    renderSwitch(state) {\n        switch(state) {\n            case 'accepted':\n                return <p className=\"form-control-static\" style={{color:\"#24ff47\"}}>Validée</p>;\n            case 'in_progress':\n                return <p className=\"form-control-static\" style={{color:\"#ffaa23\"}} color=\"warning\">Encours</p>;\n            case 'canceled':\n                return <p className=\"form-control-static\" style={{color:\"#FF0000\"}}>Annulée</p>;\n            default:\n                return null;\n        }\n    }\n\n  render() {\n      const { isLoading, transfer } = this.state;\n      if(isLoading) {\n          return <h1>Waiting</h1>;\n      }\n\n      if(this.state.notFound ) {\n          return <NotFound />;\n      }\n\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n    return (\n        <>\n          <div className=\"content\">\n              <Breadcrumb>\n                  <BreadcrumbItem><a href=\"/user/transfers\">Mes virements</a></BreadcrumbItem>\n                  <BreadcrumbItem active>Virement</BreadcrumbItem>\n              </Breadcrumb>\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <h4 className=\"title\">Virement</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col md=\"2\"/>\n                      <Col md=\"8\">\n                        {/* Virement INTRA en agence */}\n                          <CardBody>\n                              <form onSubmit={this.handleSubmit} className=\"form-horizontal\">\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"principalAccount\">N° compte débiteur</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">\n                                              {transfer.principalAccount+\" \"}<span>{/*transfer.principalCurrency*/}</span>\n                                          </p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">\n                                              {transfer.beneficiaryAccount+\" \"}<span>{/*transfer.beneficiaryCurrency*/}</span>\n                                          </p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"}  for=\"transactionAmount\">Montant</Label>\n                                      <FormGroup  className=\"col-md-8\">\n                                          <p className=\"form-control-static\">\n                                              {transfer.transactionAmount+\" \"}<span>{/*transfer.transactionCurrency*/}</span>\n                                          </p>\n                                      </FormGroup>\n                                  </div>\n                              </form>\n                          </CardBody>\n                      </Col>\n                      <Col md=\"2\"/>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\n\nexport default TransferPage2;\n\n"]},"metadata":{},"sourceType":"module"}