{"ast":null,"code":"var _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/js/reducers/index.js\";\n\n/*import { ADD_ARTICLE, DATA_LOADED } from \"../constants/action-types\";\n\nconst initialState = {\n    articles: [],\n    remoteArticles: []\n};\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === ADD_ARTICLE) {\n        return Object.assign({}, state, {\n            articles: state.articles.concat(action.payload)\n        });\n    }\n    if (action.type === DATA_LOADED) {\n        return Object.assign({}, state, {\n            remoteArticles: state.remoteArticles.concat(action.payload)\n        });\n    }\n    return state;\n}\nexport default rootReducer;*/\nvar initialState = {\n  status: 'logged out',\n  value: 'guest'\n}; // reducer\n\nvar auth = function auth() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOGIN':\n      return Object.assign({}, state, {\n        status: 'logged in',\n        value: action.value\n      });\n\n    case 'LOGOUT':\n      return Object.assign({}, state, {\n        status: 'logged out',\n        value: action.value\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default auth; // react component\n\nvar Auth = React.createClass({\n  displayName: \"Auth\",\n  handleLogin: function handleLogin() {\n    var username = this.refs.username.value; // dispatch action\n\n    store.dispatch({\n      type: 'LOGIN',\n      value: username\n    });\n  },\n  handleLogout: function handleLogout() {\n    // dispatch action\n    store.dispatch({\n      type: 'LOGOUT',\n      value: 'guest'\n    });\n    this.refs.username.value = '';\n  },\n  render: function render() {\n    var button;\n\n    if (this.props.state.status === 'logged in') {\n      button = React.createElement(\"button\", {\n        onClick: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Log out\");\n    } else {\n      button = React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Login\",\n        onClick: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), button, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Current state is \", this.props.state.status + ' as ' + this.props.state.value));\n  }\n});\n\nvar render = function render() {\n  ReactDOM.render(React.createElement(Auth, {\n    state: store.getState(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nstore.subscribe(render);\nrender();","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/js/reducers/index.js"],"names":["initialState","status","value","auth","state","action","type","Object","assign","Auth","React","createClass","handleLogin","username","refs","store","dispatch","handleLogout","render","button","props","ReactDOM","getState","document","getElementById","subscribe"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,YADS;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB,C,CAKA;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAuC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BH,QAAAA,MAAM,EAAE,WADoB;AAE5BC,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFc,OAAzB,CAAP;;AAIJ,SAAK,QAAL;AACI,aAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BH,QAAAA,MAAM,EAAE,YADoB;AAE5BC,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFc,OAAzB,CAAP;;AAIJ;AACI,aAAOE,KAAP;AAZR;AAcH,CAfD;;AAgBA,eAAeD,IAAf,C,CAGA;;AACA,IAAIM,IAAI,GAAGC,KAAK,CAACC,WAAN,CAAkB;AAAA;AACzBC,EAAAA,WAAW,EAAE,uBAAW;AACpB,QAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAUD,QAAV,CAAmBX,KAAlC,CADoB,CAEpB;;AACAa,IAAAA,KAAK,CAACC,QAAN,CAAe;AACXV,MAAAA,IAAI,EAAE,OADK;AAEXJ,MAAAA,KAAK,EAAEW;AAFI,KAAf;AAIH,GARwB;AASzBI,EAAAA,YAAY,EAAE,wBAAW;AACrB;AACAF,IAAAA,KAAK,CAACC,QAAN,CAAe;AACXV,MAAAA,IAAI,EAAE,QADK;AAEXJ,MAAAA,KAAK,EAAE;AAFI,KAAf;AAIA,SAAKY,IAAL,CAAUD,QAAV,CAAmBX,KAAnB,GAA2B,EAA3B;AACH,GAhBwB;AAiBzBgB,EAAAA,MAAM,EAAE,kBAAW;AACf,QAAIC,MAAJ;;AACA,QAAG,KAAKC,KAAL,CAAWhB,KAAX,CAAiBH,MAAjB,KAA4B,WAA/B,EAA4C;AACxCkB,MAAAA,MAAM,GAAG;AAAQ,QAAA,OAAO,EAAE,KAAKF,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAT;AACH,KAFD,MAEO;AACHE,MAAAA,MAAM,GAAG;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,OAA3B;AAAmC,QAAA,OAAO,EAAE,KAAKP,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACH;;AAAA;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKO,MAFL,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsB,KAAKC,KAAL,CAAWhB,KAAX,CAAiBH,MAAjB,GAA0B,MAA1B,GAAmC,KAAKmB,KAAL,CAAWhB,KAAX,CAAiBF,KAA1E,CAHJ,CADJ;AAOH;AAhCwB,CAAlB,CAAX;;AAmCA,IAAMgB,MAAM,GAAG,SAATA,MAAS,GAAW;AACtBG,EAAAA,QAAQ,CAACH,MAAT,CACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,KAAK,CAACO,QAAN,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHJ;AAKH,CAND;;AAQAT,KAAK,CAACU,SAAN,CAAgBP,MAAhB;AACAA,MAAM","sourcesContent":["/*import { ADD_ARTICLE, DATA_LOADED } from \"../constants/action-types\";\n\nconst initialState = {\n    articles: [],\n    remoteArticles: []\n};\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === ADD_ARTICLE) {\n        return Object.assign({}, state, {\n            articles: state.articles.concat(action.payload)\n        });\n    }\n    if (action.type === DATA_LOADED) {\n        return Object.assign({}, state, {\n            remoteArticles: state.remoteArticles.concat(action.payload)\n        });\n    }\n    return state;\n}\nexport default rootReducer;*/\n\nconst initialState = {\n    status: 'logged out',\n    value: 'guest'\n};\n\n// reducer\nconst auth = function(state = initialState, action) {\n    switch (action.type) {\n        case 'LOGIN':\n            return Object.assign({}, state, {\n                status: 'logged in',\n                value: action.value\n            });\n        case 'LOGOUT':\n            return Object.assign({}, state, {\n                status: 'logged out',\n                value: action.value\n            });\n        default:\n            return state;\n    }\n};\nexport default auth;\n\n\n// react component\nvar Auth = React.createClass({\n    handleLogin: function() {\n        let username = this.refs.username.value;\n        // dispatch action\n        store.dispatch({\n            type: 'LOGIN',\n            value: username\n        });\n    },\n    handleLogout: function() {\n        // dispatch action\n        store.dispatch({\n            type: 'LOGOUT',\n            value: 'guest'\n        });\n        this.refs.username.value = '';\n    },\n    render: function() {\n        let button;\n        if(this.props.state.status === 'logged in') {\n            button = <button onClick={this.handleLogout}>Log out</button>;\n        } else {\n            button = <input type=\"button\" value=\"Login\" onClick={this.handleLogin} />\n        };\n\n        return (\n            <div>\n                <input type=\"text\" ref=\"username\" />\n                {button}\n                <h1>Current state is {this.props.state.status + ' as ' + this.props.state.value}</h1>\n            </div>\n        );\n    }\n});\n\nconst render = function() {\n    ReactDOM.render(\n        <Auth state={store.getState()}\n        />,\n        document.getElementById('root')\n    );\n};\n\nstore.subscribe(render);\nrender();\n"]},"metadata":{},"sourceType":"module"}