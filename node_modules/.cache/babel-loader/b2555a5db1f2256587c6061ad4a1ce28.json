{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/views/User/Transfer/TransferPage.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { acceptTransfer, cancelTransfer, getTransfer, sendTransfer } from '../../../util/APIUtils'; // react plugin used to create datetime\n\nimport { formatDateTime } from \"../../../util/Helpers\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, Row, Col, FormGroup, Label, Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../../../redux/actions\"; // Sweet alert\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nvar MySwal = withReactContent(Swal);\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\nvar TransferPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransferPage, _React$Component);\n\n  // Constructeur\n  function TransferPage(props) {\n    var _this;\n\n    _classCallCheck(this, TransferPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransferPage).call(this, props));\n    _this.state = {\n      transfer: null,\n      isLoading: true\n    };\n    _this.loadTransferDetails = _this.loadTransferDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TransferPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentUser();\n      var id = this.props.match.params.id;\n      this.loadTransferDetails(id);\n    }\n  }, {\n    key: \"loadTransferDetails\",\n    value: function loadTransferDetails(id) {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getTransfer(id).then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          transfer: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this2.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleCancelTransfer\",\n    value: function handleCancelTransfer(id) {\n      var _this3 = this;\n\n      MySwal.fire({\n        buttonsStyling: false,\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        title: 'Entrer votre motif',\n        input: 'textarea',\n        inputPlaceholder: 'Votre motif ...',\n        showCancelButton: true,\n        confirmButtonText: 'Confirmer',\n        cancelButtonText: 'Annuler'\n      }).then(function (result) {\n        if (result.value) {\n          var reason = result.value;\n          cancelTransfer(id, reason).then(function (response) {\n            /*return */\n            MySwal.fire({\n              type: 'success',\n              title: 'Votre operation a été enregistrée',\n              showConfirmButton: false,\n              timer: 1500\n            });\n\n            _this3.loadTransfersList();\n          }).catch(function (error) {\n            if (error.status === 401) {\n              MySwal.fire({\n                type: 'error',\n                title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                showConfirmButton: false,\n                timer: 1500\n              });\n            } else {\n              MySwal.fire({\n                type: 'warning',\n                title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                showConfirmButton: false,\n                timer: 1500\n              });\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleAcceptTransfer\",\n    value: function handleAcceptTransfer(id) {\n      var _this4 = this;\n\n      acceptTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this4.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          MySwal.fire({\n            type: 'error',\n            title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n            showConfirmButton: false,\n            timer: 1500\n          }); //this.props.history.push('/login');\n        } else {\n          MySwal.fire({\n            type: 'warning',\n            title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n            showConfirmButton: false,\n            timer: 1500\n          });\n\n          _this4.props.history.push('/login');\n        }\n      });\n    }\n  }, {\n    key: \"handleSendTransfer\",\n    value: function handleSendTransfer(id) {\n      var _this5 = this;\n\n      sendTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this5.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          MySwal.fire({\n            type: 'error',\n            title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n            showConfirmButton: false,\n            timer: 1500\n          });\n\n          _this5.props.history.push('/login');\n        } else {\n          MySwal.fire({\n            type: 'warning',\n            title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(state, ref) {\n      var _this6 = this;\n\n      var link = \"/user/transfers/\" + ref;\n      return React.createElement(React.Fragment, null, React.createElement(Link, {\n        to: link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-link\",\n        color: state.code === 1000 ? \"warning\" : state.code === 3000 ? \"success\" : \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, state.libelle)), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: function onClick() {\n          return _this6.handleCancelTransfer(ref);\n        },\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderBtnCTN\",\n    value: function renderBtnCTN(ref) {\n      var _this7 = this;\n\n      var link = \"/user/transfers/\" + ref;\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: function onClick() {\n          return _this7.handleAcceptTransfer(ref);\n        },\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: function onClick() {\n          return _this7.handleRefuseTransfer(ref);\n        },\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), \" \", React.createElement(Link, {\n        to: link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"renderBtnCTRL\",\n    value: function renderBtnCTRL(ref) {\n      var _this8 = this;\n\n      var link = \"/user/transfers/\" + ref;\n      return React.createElement(React.Fragment, null, this.renderBtnCTN(link), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: function onClick() {\n          return _this8.handleSendTransfer(ref);\n        },\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-paper-plane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          transfer = _this$state.transfer;\n\n      if (isLoading) {\n        return React.createElement(LoadingIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.notFound || !this.props.currentUser || !transfer) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.serverError) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }); //<ServerError />;\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(BreadcrumbItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/user/lsttransfers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Mes virements\")), React.createElement(BreadcrumbItem, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Virement\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Virement\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, transfer.creditAccount.accountNumber, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, transfer.debitAccount.accountNumber, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transactionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, transfer.amount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, transfer.transactionCurrency.name)))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transferReason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Motif\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, transfer.transferReason))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"executionDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Date d'execution\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, formatDateTime(transfer.executionDate)))),\n      /********************* Echange **************/\n\n      /*(transfer.principalCurrency===\"MAD\" && transfer.beneficiaryCurrency!==\"MAD\")*/\n      false ? React.createElement(React.Fragment, null, transfer.transactionAmount > transfer.largeAmount ? React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"tradingTicket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Ticket de n\\xE9gociation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, transfer.tradingTicket))) : null, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transferNature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Nature de transfert\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, transfer.transferNature))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"authorizationNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"N\\xB0 d'autorisation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, transfer.authorizationNumber))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"authorizationValidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Validit\\xE9 de l'autorisation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, transfer.authorizationValidity))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"exchangeRate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Cours de change\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, transfer.exchangeRate)))) : null\n      /********************* Commission ****************\n         <div className=\"form-row\">\n            <Label className={\"col-md-4 col-form-label\"} for=\"chargeType\">Type de charge</Label>\n            <FormGroup className=\"col-md-8\">\n              <p className=\"form-control-static\">{transfer.chargeType}</p>\n            </FormGroup>\n        </div>\n         <div className=\"form-row\">\n            <Label className={\"col-md-4 col-form-label\"} for=\"commissionCode\">Taux applique</Label>\n            <FormGroup className=\"col-md-8\">\n              <p className=\"form-control-static\">{transfer.applyedRate+\" \"}<span></span></p>\n            </FormGroup>\n        </div>\n         <div className=\"form-row\">\n            <Label className={\"col-md-4 col-form-label\"} for=\"commissionAmount\">Montant commission</Label>\n            <FormGroup className=\"col-md-8\">\n              <p className=\"form-control-static\">{transfer.commissionAmount+\" \"}<span></span></p>\n            </FormGroup>\n        </div>\n         <div className=\"form-row\">\n            <Label className={\"col-md-4 col-form-label\"} for=\"commissionTVA\">TVA sur commission</Label>\n            <FormGroup className=\"col-md-8\">\n              <p className=\"form-control-static\"> {transfer.commissionTVA+\" \"}<span></span></p>\n            </FormGroup>\n        </div>\n         <div className=\"form-row\">\n            <Label className={\"col-md-4 col-form-label\"} for=\"totalAmount\">Montant total</Label>\n            <FormGroup className=\"col-md-8\">\n              <p className=\"form-control-static\">{transfer.totalAmount+\" \"}<span>{transfer.transactionCurrency}</span></p>\n            </FormGroup>\n        </div>\n         <div className=\"form-row\">\n            <Label className={\"col-md-4 col-form-label\"} for=\"applyCommission\">Appliquer commission</Label>\n            <FormGroup className=\"col-md-8\">\n                <p className=\"form-control-static\">{transfer.applyCommission?\"Oui\":\"Non\"}</p>\n            </FormGroup>\n        </div>*/\n      , React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"applyCommission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Etat/Action\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, this.props.currentUser.role === \"ROLE_AGENT\" ? this.renderSwitch(transfer.state, transfer.reference) : null, this.props.currentUser.role === \"ROLE_CTN\" ? this.renderBtnCTN(transfer.reference) : null, this.props.currentUser.role === \"ROLE_CTRL\" ? this.renderBtnCTRL(transfer.reference) : null)), transfer.state.code === '4000' && this.props.currentUser.role === \"ROLE_AGENT\" ? React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"applyCommissio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \"Motif de l'annulation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, transfer.reasonOfRefuse))) : null)), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return TransferPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentUser: getCurrentUser\n})(TransferPage);","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/views/User/Transfer/TransferPage.jsx"],"names":["React","Link","acceptTransfer","cancelTransfer","getTransfer","sendTransfer","formatDateTime","Card","CardHeader","CardBody","Row","Col","FormGroup","Label","Button","Breadcrumb","BreadcrumbItem","NotFound","LoadingIndicator","connect","getCurrentUser","Swal","withReactContent","MySwal","TransferPage","props","state","transfer","isLoading","loadTransferDetails","bind","id","match","params","setState","then","response","console","log","catch","error","status","notFound","serverError","fire","buttonsStyling","customClass","confirmButton","cancelButton","title","input","inputPlaceholder","showCancelButton","confirmButtonText","cancelButtonText","result","value","reason","type","showConfirmButton","timer","loadTransfersList","message","history","push","ref","link","code","libelle","handleCancelTransfer","border","handleAcceptTransfer","handleRefuseTransfer","renderBtnCTN","handleSendTransfer","currentUser","handleSubmit","creditAccount","accountNumber","debitAccount","amount","transactionCurrency","name","transferReason","executionDate","transactionAmount","largeAmount","tradingTicket","transferNature","authorizationNumber","authorizationValidity","exchangeRate","role","renderSwitch","reference","renderBtnCTRL","reasonOfRefuse","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {acceptTransfer, cancelTransfer, getTransfer, sendTransfer} from '../../../util/APIUtils';\n// react plugin used to create datetime\nimport { formatDateTime } from \"../../../util/Helpers\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Button,\n  Breadcrumb,\n  BreadcrumbItem\n} from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\n\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../../../redux/actions\";\n\n// Sweet alert\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nconst MySwal = withReactContent(Swal);\n\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\nclass TransferPage extends React.Component {\n    // Constructeur\n    constructor(props) {\n        super(props);\n        this.state = {\n            transfer: null,\n            isLoading: true,\n        };\n        this.loadTransferDetails = this.loadTransferDetails.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getCurrentUser();\n        const id = this.props.match.params.id;\n        this.loadTransferDetails(id);\n    }\n\n    loadTransferDetails(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        getTransfer(id)\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    transfer: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n\n    handleCancelTransfer(id) {\n        MySwal.fire({\n            buttonsStyling:false,\n            customClass: {\n                confirmButton: 'btn btn-success',\n                cancelButton: 'btn btn-danger',\n            },\n            title: 'Entrer votre motif',\n            input: 'textarea',\n            inputPlaceholder: 'Votre motif ...',\n            showCancelButton: true,\n            confirmButtonText: 'Confirmer',\n            cancelButtonText: 'Annuler'\n        }).then((result) => {\n            if (result.value) {\n                let reason = result.value;\n                cancelTransfer(id, reason)\n                    .then(response => {\n\n                        /*return */MySwal.fire({\n                            type: 'success',\n                            title: 'Votre operation a été enregistrée',\n                            showConfirmButton: false,\n                            timer: 1500\n                        });\n                        this.loadTransfersList();\n                    }).catch(error => {\n                    if(error.status === 401) {\n                        MySwal.fire({\n                          type: 'error',\n                          title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                          showConfirmButton: false,\n                          timer: 1500\n                        })\n                    } else {\n                         MySwal.fire({\n                          type: 'warning',\n                          title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                          showConfirmButton: false,\n                          timer: 1500\n                        })\n                    }\n                });\n            }\n        })\n    }\n\n    handleAcceptTransfer(id) {\n        acceptTransfer(id)\n            .then(response => {\n\n                /*return */MySwal.fire({\n                    type: 'success',\n                    title: 'Votre operation a été enregistrée',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                this.loadTransfersList();\n            }).catch(error => {\n            if(error.status === 401) {\n                MySwal.fire({\n                    type: 'error',\n                    title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                //this.props.history.push('/login');\n            } else {\n                MySwal.fire({\n                    type: 'warning',\n                    title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                this.props.history.push('/login');\n            }\n        });\n    }\n\n    handleSendTransfer(id) {\n        sendTransfer(id)\n            .then(response => {\n\n                /*return */MySwal.fire({\n                    type: 'success',\n                    title: 'Votre operation a été enregistrée',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                this.loadTransfersList();\n            }).catch(error => {\n            if(error.status === 401) {\n                MySwal.fire({\n                    type: 'error',\n                    title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                this.props.history.push('/login');\n            } else {\n                MySwal.fire({\n                    type: 'warning',\n                    title: error.message ||'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n            }\n        });\n    }\n\n    renderSwitch(state, ref) {\n        let link = \"/user/transfers/\"+ref;\n\n        return <><Link to={link}><Button className=\"btn-link\" color={state.code===1000?\"warning\":state.code===3000?\"success\":\"danger\"}>{state.libelle}</Button></Link>\n            {` `}<Button className=\"btn-icon btn-simple\" onClick={()=>this.handleCancelTransfer(ref)} style={{border:0}} color=\"primary\" size=\"sm\">\n                <i className=\"fa fa-times\" />\n            </Button>\n        </>;\n    }\n\n    renderBtnCTN(ref) {\n        let link = \"/user/transfers/\"+ref;\n        return(\n            <>\n                <Button className=\"btn-icon btn-simple\" onClick={()=>this.handleAcceptTransfer(ref)} style={{border:0}} color=\"primary\" size=\"sm\">\n                    <i className=\"fa fa-check\"></i>\n                </Button>{` `}\n                <Button className=\"btn-icon btn-simple\" onClick={()=>this.handleRefuseTransfer(ref)} style={{border:0}} color=\"primary\" size=\"sm\">\n                    <i className=\"fa fa-times\" />\n                </Button>{` `}\n                <Link to={link}><Button className=\"btn-icon btn-simple\" style={{border:0}} color=\"primary\" size=\"sm\">\n                    <i className=\"fa fa-eye\"></i>\n                </Button></Link>\n            </>\n        );\n    }\n\n    renderBtnCTRL(ref) {\n        let link = \"/user/transfers/\"+ref;\n        return(\n            <>\n                {this.renderBtnCTN(link)}\n                {` `}\n                <Button className=\"btn-icon btn-simple\" onClick={()=>this.handleSendTransfer(ref)} style={{border:0}} color=\"primary\" size=\"sm\">\n                    <i className=\"fa fa-paper-plane\"></i>\n                </Button>\n            </>\n        );\n    }\n\n  render() {\n      const { isLoading, transfer } = this.state;\n      if(isLoading) {\n          return <LoadingIndicator />;\n      }\n\n      if(this.state.notFound || !this.props.currentUser || !transfer) {\n          return <NotFound />;\n      }\n\n      if(this.state.serverError) {\n        return  <NotFound />;//<ServerError />;\n      }\n    return (\n        <>\n          <div className=\"content\">\n              <Breadcrumb>\n                  <BreadcrumbItem><Link to=\"/user/lsttransfers\">Mes virements</Link></BreadcrumbItem>\n                  <BreadcrumbItem active>Virement</BreadcrumbItem>\n              </Breadcrumb>\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <h4 className=\"title\">Virement</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col md=\"2\"/>\n                      <Col md=\"8\">\n                        {/* Virement INTRA en agence */}\n                              <form onSubmit={this.handleSubmit} className=\"form-horizontal\">\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"principalAccount\">N° compte débiteur</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">\n                                              {transfer.creditAccount.accountNumber}<span>{/*transfer.principalCurrency*/}</span>\n                                          </p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">\n                                              {transfer.debitAccount.accountNumber}<span>{/*transfer.beneficiaryCurrency*/}</span>\n                                          </p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"}  for=\"transactionAmount\">Montant</Label>\n                                      <FormGroup  className=\"col-md-8\">\n                                          <p className=\"form-control-static\">\n                                              {transfer.amount+\" \"}<span>{transfer.transactionCurrency.name}</span>\n                                          </p>\n                                      </FormGroup>\n                                  </div>\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"transferReason\">Motif</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">{transfer.transferReason}</p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"executionDate\">Date d'execution</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">{formatDateTime(transfer.executionDate)}</p>\n                                      </FormGroup>\n                                  </div>\n\n                          {/********************* Echange **************/\n                          /*(transfer.principalCurrency===\"MAD\" && transfer.beneficiaryCurrency!==\"MAD\")*/false ?(\n                          <>\n                            {\n                              (transfer.transactionAmount>transfer.largeAmount)?(\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"tradingTicket\">Ticket de négociation</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                        <p className=\"form-control-static\">{transfer.tradingTicket}</p>\n                                      </FormGroup>\n                                  </div>\n                              ):null\n                            }\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"transferNature\">Nature de transfert</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.transferNature}</p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                     <Label className={\"col-md-4 col-form-label\"} for=\"authorizationNumber\">N° d'autorisation</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.authorizationNumber}</p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                  <Label className={\"col-md-4 col-form-label\"} for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.authorizationValidity}</p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"exchangeRate\">Cours de change</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.exchangeRate}</p>\n                                    </FormGroup>\n                                </div>\n                              </>):null\n                              /********************* Commission ****************\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"chargeType\">Type de charge</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.chargeType}</p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"commissionCode\">Taux applique</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.applyedRate+\" \"}<span></span></p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"commissionAmount\">Montant commission</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.commissionAmount+\" \"}<span></span></p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"commissionTVA\">TVA sur commission</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\"> {transfer.commissionTVA+\" \"}<span></span></p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"totalAmount\">Montant total</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.totalAmount+\" \"}<span>{transfer.transactionCurrency}</span></p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"applyCommission\">Appliquer commission</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                        <p className=\"form-control-static\">{transfer.applyCommission?\"Oui\":\"Non\"}</p>\n                                    </FormGroup>\n                                </div>*/}\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"applyCommission\">Etat/Action</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                        {this.props.currentUser.role===\"ROLE_AGENT\"?this.renderSwitch(transfer.state,transfer.reference):null}\n                                        {this.props.currentUser.role===\"ROLE_CTN\"?this.renderBtnCTN(transfer.reference):null}\n                                        {this.props.currentUser.role===\"ROLE_CTRL\"?this.renderBtnCTRL(transfer.reference):null}\n                                    </FormGroup>\n                                </div>\n                                  {transfer.state.code==='4000' && this.props.currentUser.role===\"ROLE_AGENT\"?(\n                                      <div className=\"form-row\">\n                                          <Label className={\"col-md-4 col-form-label\"} for=\"applyCommissio\">Motif de l'annulation</Label>\n                                          <FormGroup className=\"col-md-8\">\n                                              <p className=\"form-control-static\">{transfer.reasonOfRefuse}</p>\n                                          </FormGroup>\n                                      </div>\n                                  ):null}\n                              </form>\n                      </Col>\n                      <Col md=\"2\"/>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        currentUser: state.currentUser\n    };\n};\n\nexport default connect(mapStateToProps, { getCurrentUser })(TransferPage);\n"]},"metadata":{},"sourceType":"module"}