{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Dashboard.jsx\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport logo from \"assets/img/react-logo.png\";\nimport { getCurrentUser } from \"../../util/APIUtils\";\nimport { ACCESS_TOKEN } from '../../variables/constants'; // core components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport dashboardRoutesAdmin from \"routes/dashboardAdmin.jsx\";\nimport dashboardRoutesUser from \"routes/dashboardUser.jsx\";\nimport Transfer from \"views/Dashboard/Sections/Transfer.jsx\";\nimport Notifications from \"views/Dashboard/Sections/Notifications.jsx\";\nimport NotFound from \"../NotFound\"; // react plugin for creating notifications over the dashboard\n\nimport NotificationAlert from \"react-notification-alert\";\nvar ps;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleToggleSidebar = function () {\n      document.documentElement.classList.toggle(\"nav-open\");\n\n      _this.setState({\n        sidebarOpened: !_this.state.sidebarOpened\n      });\n    };\n\n    _this.handleBgClick = function (color) {\n      _this.setState({\n        backgroundColor: color\n      });\n    };\n\n    _this.handleLogout = function () {\n      var redirectTo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/login\";\n      var notificationType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"success\";\n      var description = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"Vous êtes déconnecté avec succès.\";\n      localStorage.removeItem(ACCESS_TOKEN);\n      /*this.setState({\n        currentUser: null,\n        isAuthenticated: false\n      });*/\n      //this.notify();\n\n      _this.props.history.push('/login');\n      /*notification[notificationType]({\n        message: 'Event App',\n        description: description,\n      });*/\n\n    };\n\n    _this.notify = function () {\n      var place = 'tr';\n      var type = \"info\";\n      var message = \"Vous êtes connecté avec succès.\";\n      var options = {};\n      options = {\n        place: place,\n        message: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, message)),\n        type: type,\n        icon: \"tim-icons icon-bell-55\",\n        autoDismiss: 2\n      };\n\n      _this.refs.notificationAlert.notificationAlert(options);\n    };\n\n    _this.state = {\n      user: null,\n      currentUser: _this.props.currentUser,\n      isLoading: true,\n      backgroundColor: \"primary\",\n      sidebarOpened: document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n    _this.loadUserProfile = _this.loadUserProfile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"loadUserProfile\",\n    value: function loadUserProfile() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getCurrentUser().then(function (response) {\n        _this2.setState({\n          user: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this2.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        document.documentElement.className += \" perfect-scrollbar-on\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n        ps = new PerfectScrollbar(this.refs.mainPanel, {\n          suppressScrollX: true\n        });\n        var tables = document.querySelectorAll(\".table-responsive\");\n\n        for (var i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n\n      this.loadUserProfile();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.className += \" perfect-scrollbar-off\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.action === \"PUSH\") {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          var tables = document.querySelectorAll(\".table-responsive\");\n\n          for (var i = 0; i < tables.length; i++) {\n            ps = new PerfectScrollbar(tables[i]);\n          }\n        }\n\n        document.documentElement.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n        this.refs.mainPanel.scrollTop = 0;\n      } //this.loadUserProfile();\n\n    } // this function opens and closes the sidebar on small devices\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var dashboardRoutes;\n      {\n        /*this.props.currentUser.role===\"ROLE_CLUB\"*/\n        true ? dashboardRoutes = dashboardRoutesUser : dashboardRoutes = dashboardRoutesAdmin;\n      }\n      var switchRoutes =\n      /*this.props.currentUser.role===\"ROLE_USER\"?(*/\n      React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/user/transfer\",\n        render: function render(props) {\n          return React.createElement(Transfer, Object.assign({\n            currentUser: _this3.state.currentUser\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/user/notifications\",\n        render: function render(props) {\n          return React.createElement(Notifications, Object.assign({\n            currentUser: _this3.state.currentUser\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }));\n      /*):(\n          <Switch>\n              {/*<Route exact path=\"/dash/dashboard\"\n                   render={(props) => <DashboardPage currentUser={this.state.currentUser} {...props} />}>\n            </Route>\n            <Route exact path=\"/dash/profile\"\n                   render={(props) => <Profile currentUser={this.state.currentUser} {...props} />}>\n            </Route>*}\n            <Route component={NotFound} />\n          </Switch>\n      );*/\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"react-notification-alert-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(NotificationAlert, {\n        ref: \"notificationAlert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        bgColor: this.state.backgroundColor,\n        logo: {\n          outterLink: \"https://www.bcp.com/\",\n          text: \"Banque Populaire\",\n          imgSrc: logo\n        },\n        toggleSidebar: this.handleToggleSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        data: this.state.backgroundColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(AdminNavbar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        toggleSidebar: this.toggleSidebar,\n        sidebarOpened: this.state.sidebarOpened,\n        handleLogout: this.handleLogout,\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })),\n      /*this.getRoutes*/\n      switchRoutes, // we don't want the Footer to be rendered on map page\n      this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Dashboard.jsx"],"names":["React","Route","Switch","PerfectScrollbar","logo","getCurrentUser","ACCESS_TOKEN","AdminNavbar","Footer","Sidebar","FixedPlugin","dashboardRoutesAdmin","dashboardRoutesUser","Transfer","Notifications","NotFound","NotificationAlert","ps","Dashboard","props","handleToggleSidebar","document","documentElement","classList","toggle","setState","sidebarOpened","state","handleBgClick","color","backgroundColor","handleLogout","redirectTo","notificationType","description","localStorage","removeItem","history","push","notify","place","type","message","options","icon","autoDismiss","refs","notificationAlert","user","currentUser","isLoading","className","indexOf","loadUserProfile","bind","then","response","catch","error","status","notFound","serverError","navigator","platform","remove","mainPanel","suppressScrollX","tables","querySelectorAll","i","length","destroy","e","action","scrollTop","scrollingElement","dashboardRoutes","switchRoutes","outterLink","text","imgSrc","toggleSidebar","location","pathname","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport logo from \"assets/img/react-logo.png\";\nimport {getCurrentUser} from \"../../util/APIUtils\";\nimport { ACCESS_TOKEN } from '../../variables/constants';\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport dashboardRoutesAdmin from \"routes/dashboardAdmin.jsx\";\nimport dashboardRoutesUser from \"routes/dashboardUser.jsx\";\n\nimport Transfer from \"views/Dashboard/Sections/Transfer.jsx\";\nimport Notifications from \"views/Dashboard/Sections/Notifications.jsx\";\n\nimport NotFound from \"../NotFound\";\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      currentUser: this.props.currentUser,\n      isLoading: true,\n      backgroundColor: \"primary\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);\n  }\n  loadUserProfile() {\n    this.setState({\n      isLoading: true\n    });\n\n    getCurrentUser()\n        .then(response => {\n          this.setState({\n            user: response,\n            isLoading: false\n          });\n        }).catch(error => {\n      if(error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    this.loadUserProfile();\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n    //this.loadUserProfile();\n  }\n  // this function opens and closes the sidebar on small devices\n  handleToggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  /*getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };*/\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n\n  handleLogout = (redirectTo=\"/login\", notificationType=\"success\", description=\"Vous êtes déconnecté avec succès.\")=> {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    /*this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });*/\n    //this.notify();\n\n    this.props.history.push('/login');\n\n    /*notification[notificationType]({\n      message: 'Event App',\n      description: description,\n    });*/\n  };\n  notify = () => {\n    let place='tr';\n    let type=\"info\";\n    let message=\"Vous êtes connecté avec succès.\";\n    let options = {};\n    options = {\n      place: place,\n      message: (\n          <div>\n            <div>\n              {message}\n            </div>\n          </div>\n      ),\n      type: type,\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: 2\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  };\n  render() {\n    let dashboardRoutes;\n    {/*this.props.currentUser.role===\"ROLE_CLUB\"*/true?(dashboardRoutes=dashboardRoutesUser):(dashboardRoutes=dashboardRoutesAdmin);}\n    const switchRoutes = /*this.props.currentUser.role===\"ROLE_USER\"?(*/\n        <Switch>\n          <Route exact path=\"/user/transfer\"\n                 render={(props) => <Transfer currentUser={this.state.currentUser} {...props} />}>\n          </Route>\n          <Route exact path=\"/user/notifications\"\n                 render={(props) => <Notifications currentUser={this.state.currentUser} {...props} />}>\n          </Route>\n          <Route component={NotFound} />\n        </Switch>;\n    /*):(\n        <Switch>\n            {/*<Route exact path=\"/dash/dashboard\"\n                 render={(props) => <DashboardPage currentUser={this.state.currentUser} {...props} />}>\n          </Route>\n          <Route exact path=\"/dash/profile\"\n                 render={(props) => <Profile currentUser={this.state.currentUser} {...props} />}>\n          </Route>*}\n          <Route component={NotFound} />\n        </Switch>\n    );*/\n    return (\n      <>\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref=\"notificationAlert\" />\n        </div>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={dashboardRoutes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"https://www.bcp.com/\",\n              text: \"Banque Populaire\",\n              imgSrc: logo\n            }}\n            toggleSidebar={this.handleToggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              routes={dashboardRoutes}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n              handleLogout={this.handleLogout}\n              history={this.props.history}\n            />\n            {/*<Switch>{this.getRoutes(routes)}</Switch>*/}\n            {/*this.getRoutes*/(switchRoutes)}\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n        {/*<FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleBgClick={this.handleBgClick}\n        />*/}\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}