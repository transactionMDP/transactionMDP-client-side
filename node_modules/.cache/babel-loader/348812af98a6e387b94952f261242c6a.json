{"ast":null,"code":"import _objectWithoutProperties from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Dashboard.jsx\";\nimport DashboardPage from \"views/Dashboard/Sections/Dashboard.jsx\";\nimport Profile from \"views/Dashboard/Sections/Profile.jsx\";\nimport AddEvent from \"views/Dashboard/Sections/AddEvent.jsx\";\nimport EditEvent from \"views/Dashboard/Sections/EditEvent.jsx\";\nimport EventList from \"views/Dashboard/Sections/EventList.jsx\";\nimport ClubList from \"views/Dashboard/Sections/ClubList.jsx\";\nimport NotificationsPage from \"views/Notifications/Notifications.jsx\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleDrawerToggle = function () {\n      _this.setState({\n        mobileOpen: !_this.state.mobileOpen\n      });\n    };\n\n    _this.state = {\n      user: null,\n      currentUser: _this.props.currentUser,\n      isLoading: true,\n      mobileOpen: false\n    };\n    _this.resizeFunction = _this.resizeFunction.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadUserProfile = _this.loadUserProfile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"loadUserProfile\",\n    value: function loadUserProfile() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getCurrentUser().then(function (response) {\n        _this2.setState({\n          user: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this2.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getRoute\",\n    value: function getRoute() {\n      return this.props.location.pathname !== \"/maps\";\n    }\n  }, {\n    key: \"resizeFunction\",\n    value: function resizeFunction() {\n      if (window.innerWidth >= 960) {\n        this.setState({\n          mobileOpen: false\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        var ps = new PerfectScrollbar(this.refs.mainPanel);\n      }\n\n      window.addEventListener(\"resize\", this.resizeFunction);\n      this.loadUserProfile();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.location.pathname !== e.location.pathname) {\n        this.refs.mainPanel.scrollTop = 0;\n\n        if (this.state.mobileOpen) {\n          this.setState({\n            mobileOpen: false\n          });\n        }\n      } //this.loadUserProfile();\n\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.resizeFunction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          rest = _objectWithoutProperties(_this$props, [\"classes\"]);\n\n      return React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.mainPanel,\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({\n        routes: dashboardRoutes,\n        handleDrawerToggle: this.handleDrawerToggle,\n        handleLogout: this.props.handleLogout\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), this.getRoute() ? React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, switchRoutes)) : React.createElement(\"div\", {\n        className: classes.map,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, switchRoutes), this.getRoute() ? React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(dashboardStyle)(Dashboard);","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Dashboard.jsx"],"names":["DashboardPage","Profile","AddEvent","EditEvent","EventList","ClubList","NotificationsPage","Dashboard","props","handleDrawerToggle","setState","mobileOpen","state","user","currentUser","isLoading","resizeFunction","bind","loadUserProfile","getCurrentUser","then","response","catch","error","status","notFound","serverError","location","pathname","window","innerWidth","navigator","platform","indexOf","ps","PerfectScrollbar","refs","mainPanel","addEventListener","e","history","scrollTop","removeEventListener","classes","rest","wrapper","dashboardRoutes","handleLogout","getRoute","content","container","switchRoutes","map","React","Component","propTypes","PropTypes","object","isRequired","withStyles","dashboardStyle"],"mappings":"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","sourcesContent":["\n\nimport DashboardPage from \"views/Dashboard/Sections/Dashboard.jsx\";\nimport Profile from \"views/Dashboard/Sections/Profile.jsx\";\nimport AddEvent from \"views/Dashboard/Sections/AddEvent.jsx\";\nimport EditEvent from \"views/Dashboard/Sections/EditEvent.jsx\";\nimport EventList from \"views/Dashboard/Sections/EventList.jsx\";\nimport ClubList from \"views/Dashboard/Sections/ClubList.jsx\";\nimport NotificationsPage from \"views/Notifications/Notifications.jsx\";\n\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        user: null,\n        currentUser: this.props.currentUser,\n        isLoading: true,\n      mobileOpen: false\n    };\n    this.resizeFunction = this.resizeFunction.bind(this);\n    this.loadUserProfile = this.loadUserProfile.bind(this);\n  }\n    loadUserProfile() {\n        this.setState({\n            isLoading: true\n        });\n\n        getCurrentUser()\n            .then(response => {\n                this.setState({\n                    user: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n  getRoute() {\n    return this.props.location.pathname !== \"/maps\";\n  }\n  resizeFunction() {\n    if (window.innerWidth >= 960) {\n      this.setState({ mobileOpen: false });\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      const ps = new PerfectScrollbar(this.refs.mainPanel);\n    }\n    window.addEventListener(\"resize\", this.resizeFunction);\n      this.loadUserProfile();\n  }\n  componentDidUpdate(e) {\n    if (e.history.location.pathname !== e.location.pathname) {\n      this.refs.mainPanel.scrollTop = 0;\n      if (this.state.mobileOpen) {\n        this.setState({ mobileOpen: false });\n      }\n    }\n      //this.loadUserProfile();\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeFunction);\n  }\n\n  render() {\n    const { classes, ...rest} = this.props;\n\n    return (\n      <div className={classes.wrapper}>\n\n        <div className={classes.mainPanel} ref=\"mainPanel\">\n            <Header\n                routes={dashboardRoutes}\n                handleDrawerToggle={this.handleDrawerToggle}\n                handleLogout={this.props.handleLogout}\n                {...rest}\n            />\n          {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n          {this.getRoute() ? (\n            <div className={classes.content}>\n              <div className={classes.container}>{switchRoutes}</div>\n            </div>\n          ) : (\n            <div className={classes.map}>{switchRoutes}</div>\n          )}\n          {this.getRoute() ? <Footer /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(dashboardStyle)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}