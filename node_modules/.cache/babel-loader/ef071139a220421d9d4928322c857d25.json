{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Sections/ClubList.jsx\";\nimport React from \"react\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport { EVENT_LIST_SIZE } from \"../../../variables/constants\";\nimport { getUserFollowedClubs } from \"../../../util/APIUtils\";\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nvar ClubList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClubList, _React$Component);\n\n  function ClubList(props) {\n    var _this;\n\n    _classCallCheck(this, ClubList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClubList).call(this, props));\n    _this.state = {\n      clubs: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingClubs: true\n    };\n    _this.loadClubList = _this.loadClubList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLoadMore = _this.handleLoadMore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ClubList, [{\n    key: \"loadClubList\",\n    value: function loadClubList() {\n      var _this2 = this;\n\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EVENT_LIST_SIZE;\n      var promise;\n      promise = getUserFollowedClubs(this.props.currentUser.username, page, size);\n\n      if (!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingClubs: true\n      });\n      promise.then(function (response) {\n        var clubs = _this2.state.clubs.slice();\n\n        _this2.setState({\n          clubs: clubs.concat(response.content),\n          page: response.page,\n          size: response.size,\n          totalElements: response.totalElements,\n          totalPages: response.totalPages,\n          last: response.last,\n          isLoadingClubs: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoadingClubs: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadClubList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.props.isAuthenticated !== nextProps.isAuthenticated) {\n        // Reset State\n        this.setState({\n          clubs: [],\n          page: 0,\n          size: 10,\n          totalElements: 0,\n          totalPages: 0,\n          last: true,\n          isLoadingClubs: false\n        });\n        this.loadClubList();\n      }\n    }\n  }, {\n    key: \"handleLoadMore\",\n    value: function handleLoadMore() {\n      this.loadClubList(this.state.page + 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var clubsData = [];\n      this.state.clubs.forEach(function (club) {\n        var c = [club.user.name, club.user.username, club.category, club.user.email];\n        clubsData.push(c);\n      });\n      return React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Mes favoris\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableHeaderColor: \"primary\",\n        tableHead: [\"Nom\", \"Username\", \"Categorie\", \"Email\"],\n        tableData: clubsData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ClubList;\n}(React.Component);\n\nexport default withStyles(styles)(ClubList);","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Sections/ClubList.jsx"],"names":["React","withStyles","GridItem","GridContainer","Table","Card","CardHeader","CardBody","EVENT_LIST_SIZE","getUserFollowedClubs","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","ClubList","props","state","clubs","page","size","totalElements","totalPages","last","isLoadingClubs","loadClubList","bind","handleLoadMore","promise","currentUser","username","setState","then","response","slice","concat","content","catch","error","nextProps","isAuthenticated","classes","clubsData","forEach","club","c","user","name","category","email","push","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// core components\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport {EVENT_LIST_SIZE} from \"../../../variables/constants\";\nimport {\n    getUserFollowedClubs\n} from \"../../../util/APIUtils\";\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nclass ClubList extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            clubs: [],\n            page: 0,\n            size: 10,\n            totalElements: 0,\n            totalPages: 0,\n            last: true,\n            isLoadingClubs: true\n        };\n        this.loadClubList = this.loadClubList.bind(this);\n        this.handleLoadMore = this.handleLoadMore.bind(this);\n    }\n    loadClubList(page = 0, size = EVENT_LIST_SIZE) {\n        let promise;\n\n        promise = getUserFollowedClubs(this.props.currentUser.username, page, size);\n\n        if(!promise) {\n            return;\n        }\n\n        this.setState({\n            isLoadingClubs: true\n        });\n\n        promise\n            .then(response => {\n                const clubs = this.state.clubs.slice();\n\n                this.setState({\n                    clubs: clubs.concat(response.content),\n                    page: response.page,\n                    size: response.size,\n                    totalElements: response.totalElements,\n                    totalPages: response.totalPages,\n                    last: response.last,\n                    isLoadingClubs: false\n                })\n            }).catch(error => {\n            this.setState({\n                isLoadingClubs: false\n            })\n        });\n\n    } $\n\n    componentDidMount() {\n        this.loadClubList();\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n            // Reset State\n            this.setState({\n                clubs: [],\n                page: 0,\n                size: 10,\n                totalElements: 0,\n                totalPages: 0,\n                last: true,\n                isLoadingClubs: false\n            });\n            this.loadClubList();\n        }\n    }\n\n    handleLoadMore() {\n        this.loadClubList(this.state.page + 1);\n    }\n  render() {\n      const {classes} = this.props;\n      let clubsData = [];\n      this.state.clubs.forEach( club =>{\n        let c=[club.user.name, club.user.username, club.category, club.user.email];\n        clubsData.push(c);\n      });\n      return (\n          <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                  <Card>\n                      <CardHeader color=\"primary\">\n                          <h4 className={classes.cardTitleWhite}>Mes favoris</h4>\n                      </CardHeader>\n                      <CardBody>\n                          <Table\n                              tableHeaderColor=\"primary\"\n                              tableHead={[\"Nom\", \"Username\",\"Categorie\", \"Email\"]}\n                              tableData={clubsData}\n                          />\n                      </CardBody>\n                  </Card>\n              </GridItem>\n              {/*<GridItem xs={12} sm={12} md={12}>\n                  <Card plain>\n                      <CardHeader plain color=\"primary\">\n                          <h4 className={classes.cardTitleWhite}>Autres clubs</h4>\n                      </CardHeader>\n                      <CardBody>\n                          <Table\n                              tableHeaderColor=\"primary\"\n                              tableHead={[\"ID\", \"Name\", \"Country\", \"City\", \"Salary\"]}\n                              tableData={[\n                                  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"]\n                              ]}\n                          />\n                      </CardBody>\n                  </Card>\n              </GridItem>*/}\n          </GridContainer>\n      );\n  }\n}\n\nexport default withStyles(styles)(ClubList);\n"]},"metadata":{},"sourceType":"module"}