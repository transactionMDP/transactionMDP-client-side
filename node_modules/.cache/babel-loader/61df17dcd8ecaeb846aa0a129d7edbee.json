{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/Login.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames\"; // reactstrap components\n\nimport { Button, Card, CardBody, CardFooter, CardHeader, CardImg, CardTitle, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from \"reactstrap\"; // core components\n\nimport Footer from \"components/Footer/Footer.jsx\";\nimport { login } from \"../util/APIUtils\"; // Redux components\n\nimport { connect } from \"react-redux\";\nimport { setAuthState as _setAuthState } from \"../redux/actions/index\";\nimport { ACCESS_TOKEN } from \"../variables/constants\"; // Sweet alert components\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nvar MySwal = withReactContent(Swal);\n/** La page d'authentification\n * Cette interface est dédiée à tous les utilisateurs du système.\n * Ainsi, une fois l’utilisateur est connecté, il se redirige vers un tableau de bord selon son rôle dans le système.\n * @params : usernameOrEmail, password\n * */\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  // constructeur\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.followCursor = function (event) {\n      var posX = event.clientX - window.innerWidth / 2;\n      var posY = event.clientY - window.innerWidth / 6;\n\n      _this.setState({\n        squares1to6: \"perspective(500px) rotateY(\" + posX * 0.05 + \"deg) rotateX(\" + posY * -0.05 + \"deg)\",\n        squares7and8: \"perspective(500px) rotateY(\" + posX * 0.02 + \"deg) rotateX(\" + posY * -0.02 + \"deg)\"\n      });\n    };\n\n    _this.state = {\n      squares1to6: \"\",\n      squares7and8: \"\",\n      formData: {\n        usernameOrEmail: \"\",\n        // le nom d'utilisateur\n        password: \"\" // mot de passe\n\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // componentDidMount() se déclenche Juste après que le composant fasse son premier render() pour\n  // aller chercher des références directes à certains éléments du DOM que l’on peut alors manipuler\n\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.classList.toggle(\"register-page\"); //\n\n      document.documentElement.addEventListener(\"mousemove\", this.followCursor);\n    } // À l'inverse, componentWillUnmount() se déclenche juste avant que le composant ne quitte complètement le DOM\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.body.classList.toggle(\"register-page\");\n      document.documentElement.removeEventListener(\"mousemove\", this.followCursor);\n    } // Définir la position des carrés\n\n  }, {\n    key: \"handleChange\",\n    // Se déclenche \n    value: function handleChange(event) {\n      var formData = this.state.formData;\n      formData[event.target.id] = event.target.value;\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var loginRequest = this.state.formData;\n      var Toast = MySwal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 2000\n      });\n      login(loginRequest).then(function (response) {\n        localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n        Toast.fire({\n          type: 'success',\n          title: 'Vous êtes connecté avec succès.'\n        }); //this.props.loadCurrentUser();\n\n        _this2.props.setAuthState(true);\n\n        _this2.props.history.push(\"/user/addtransfer\");\n      }).catch(function (error) {\n        if (error.status === 401) {\n          Toast.fire({\n            type: 'error',\n            title: 'Votre nom d\\'utilisateur ou votre mot de passe est incorrect. Veuillez réessayer!'\n          });\n        } else {\n          /************************************************\n           * TESTTTTTTTTTTTTTTTTTT\n           */\n          _this2.props.setAuthState(true);\n\n          _this2.props.history.push(\"/user/addtransfer\");\n\n          Toast.fire({\n            type: 'warning',\n            title: 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"wrapper wrapper-full-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-header-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"square square-7\",\n        id: \"square7\",\n        style: {\n          transform: this.state.squares7and8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"square square-8\",\n        id: \"square8\",\n        style: {\n          transform: this.state.squares7and8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Card, {\n        className: \"card-register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        alt: \"...\",\n        src: require(\"assets/img/square-purple-1.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Login\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: classnames({\n          \"input-group-focus\": this.state.emailFocus\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-email-85\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        placeholder: \"Email\",\n        type: \"text\",\n        onFocus: function onFocus(e) {\n          return _this3.setState({\n            emailFocus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this3.setState({\n            emailFocus: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: classnames({\n          \"input-group-focus\": this.state.passwordFocus\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-lock-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        placeholder: \"Password\",\n        type: \"text\",\n        onFocus: function onFocus(e) {\n          return _this3.setState({\n            passwordFocus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this3.setState({\n            passwordFocus: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        size: \"lg\",\n        block: true,\n        onClick: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Se Connecter\"))))), React.createElement(\"div\", {\n        className: \"square square-1\",\n        id: \"square1\",\n        style: {\n          transform: this.state.squares1to6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"square square-2\",\n        id: \"square2\",\n        style: {\n          transform: this.state.squares1to6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"square square-3\",\n        id: \"square3\",\n        style: {\n          transform: this.state.squares1to6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setAuthState: function setAuthState(isAuthenticated) {\n      return dispatch(_setAuthState(isAuthenticated));\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/Login.jsx"],"names":["React","classnames","Button","Card","CardBody","CardFooter","CardHeader","CardImg","CardTitle","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Footer","login","connect","setAuthState","ACCESS_TOKEN","Swal","withReactContent","MySwal","Login","props","followCursor","event","posX","clientX","window","innerWidth","posY","clientY","setState","squares1to6","squares7and8","state","formData","usernameOrEmail","password","handleChange","bind","handleLogin","document","body","classList","toggle","documentElement","addEventListener","removeEventListener","target","id","value","preventDefault","loginRequest","Toast","mixin","toast","position","showConfirmButton","timer","then","response","localStorage","setItem","accessToken","fire","type","title","history","push","catch","error","status","transform","require","emailFocus","e","passwordFocus","Component","mapDispatchToProps","dispatch","isAuthenticated"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    CardImg,\n    CardTitle,\n    Col,\n    Container,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Row\n} from \"reactstrap\";\n// core components\nimport Footer from \"components/Footer/Footer.jsx\";\nimport {login} from \"../util/APIUtils\";\n// Redux components\nimport {connect} from \"react-redux\";\nimport {setAuthState} from \"../redux/actions/index\";\nimport {ACCESS_TOKEN} from \"../variables/constants\";\n// Sweet alert components\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst MySwal = withReactContent(Swal);\n\n\n/** La page d'authentification\n * Cette interface est dédiée à tous les utilisateurs du système.\n * Ainsi, une fois l’utilisateur est connecté, il se redirige vers un tableau de bord selon son rôle dans le système.\n * @params : usernameOrEmail, password\n * */\n\nclass Login extends React.Component {\n    // constructeur\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares1to6: \"\",\n            squares7and8: \"\",\n            formData: {\n                usernameOrEmail: \"\", // le nom d'utilisateur\n                password: \"\"         // mot de passe\n            }\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    // componentDidMount() se déclenche Juste après que le composant fasse son premier render() pour\n    // aller chercher des références directes à certains éléments du DOM que l’on peut alors manipuler\n    componentDidMount() {\n        document.body.classList.toggle(\"register-page\"); //\n        document.documentElement.addEventListener(\"mousemove\", this.followCursor);\n    }\n\n    // À l'inverse, componentWillUnmount() se déclenche juste avant que le composant ne quitte complètement le DOM\n    componentWillUnmount() {\n        document.body.classList.toggle(\"register-page\");\n        document.documentElement.removeEventListener(\n            \"mousemove\",\n            this.followCursor\n        );\n    }\n\n    // Définir la position des carrés\n    followCursor = event => {\n        let posX = event.clientX - window.innerWidth / 2;\n        let posY = event.clientY - window.innerWidth / 6;\n        this.setState({\n            squares1to6:\n                \"perspective(500px) rotateY(\" +\n                posX * 0.05 +\n                \"deg) rotateX(\" +\n                posY * -0.05 +\n                \"deg)\",\n            squares7and8:\n                \"perspective(500px) rotateY(\" +\n                posX * 0.02 +\n                \"deg) rotateX(\" +\n                posY * -0.02 +\n                \"deg)\"\n        });\n    };\n\n    // Se déclenche \n    handleChange(event) {\n        const {formData} = this.state;\n        formData[event.target.id] = event.target.value;\n        this.setState({formData});\n    }\n\n    handleLogin(event) {\n        event.preventDefault();\n        const loginRequest = this.state.formData;\n\n        const Toast = MySwal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 2000\n        });\n        login(loginRequest)\n            .then(response => {\n                localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n                Toast.fire({\n                    type: 'success',\n                    title: 'Vous êtes connecté avec succès.'\n                });\n                //this.props.loadCurrentUser();\n                this.props.setAuthState(true);\n                this.props.history.push(\"/user/addtransfer\");\n            }).catch(error => {\n            if (error.status === 401) {\n                Toast.fire({\n                    type: 'error',\n                    title: 'Votre nom d\\'utilisateur ou votre mot de passe est incorrect. Veuillez réessayer!'\n                });\n            } else {\n                /************************************************\n                 * TESTTTTTTTTTTTTTTTTTT\n                 */\n                this.props.setAuthState(true);\n                this.props.history.push(\"/user/addtransfer\");\n                Toast.fire({\n                    type: 'warning',\n                    title: 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!'\n                });\n            }\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <div className=\"wrapper wrapper-full-page\">\n                    <div className=\"page-header\">\n                        <div className=\"page-header-image\"/>\n                        <div className=\"content\">\n                            <Container>\n                                <Row className=\"justify-content-center\">\n                                    <Col lg=\"4\" md=\"6\">\n                                        <div\n                                            className=\"square square-7\"\n                                            id=\"square7\"\n                                            style={{transform: this.state.squares7and8}}\n                                        />\n                                        <div\n                                            className=\"square square-8\"\n                                            id=\"square8\"\n                                            style={{transform: this.state.squares7and8}}\n                                        />\n                                        <Card className=\"card-register\">\n                                            <CardHeader>\n                                                <CardImg\n                                                    alt=\"...\"\n                                                    src={require(\"assets/img/square-purple-1.png\")}\n                                                />\n                                                <CardTitle tag=\"h4\">Login</CardTitle>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Form className=\"form\">\n                                                    <InputGroup\n                                                        className={classnames({\n                                                            \"input-group-focus\": this.state.emailFocus\n                                                        })}\n                                                    >\n                                                        <InputGroupAddon addonType=\"prepend\">\n                                                            <InputGroupText>\n                                                                <i className=\"tim-icons icon-email-85\"/>\n                                                            </InputGroupText>\n                                                        </InputGroupAddon>\n                                                        <Input\n                                                            placeholder=\"Email\"\n                                                            type=\"text\"\n                                                            onFocus={e => this.setState({emailFocus: true})}\n                                                            onBlur={e => this.setState({emailFocus: false})}\n                                                        />\n                                                    </InputGroup>\n                                                    <InputGroup\n                                                        className={classnames({\n                                                            \"input-group-focus\": this.state.passwordFocus\n                                                        })}\n                                                    >\n                                                        <InputGroupAddon addonType=\"prepend\">\n                                                            <InputGroupText>\n                                                                <i className=\"tim-icons icon-lock-circle\"/>\n                                                            </InputGroupText>\n                                                        </InputGroupAddon>\n                                                        <Input\n                                                            placeholder=\"Password\"\n                                                            type=\"text\"\n                                                            onFocus={e =>\n                                                                this.setState({passwordFocus: true})\n                                                            }\n                                                            onBlur={e =>\n                                                                this.setState({passwordFocus: false})\n                                                            }\n                                                        />\n                                                    </InputGroup>\n                                                </Form>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <Button color=\"primary\" size=\"lg\" block onClick={this.handleLogin}>\n                                                    Se Connecter\n                                                </Button>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                                <div\n                                    className=\"square square-1\"\n                                    id=\"square1\"\n                                    style={{transform: this.state.squares1to6}}\n                                />\n                                <div\n                                    className=\"square square-2\"\n                                    id=\"square2\"\n                                    style={{transform: this.state.squares1to6}}\n                                />\n                                <div\n                                    className=\"square square-3\"\n                                    id=\"square3\"\n                                    style={{transform: this.state.squares1to6}}\n                                />\n                            </Container>\n                        </div>\n                    </div>\n                    <Footer/>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setAuthState: isAuthenticated => dispatch(setAuthState(isAuthenticated))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}