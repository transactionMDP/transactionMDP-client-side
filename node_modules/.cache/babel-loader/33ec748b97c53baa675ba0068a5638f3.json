{"ast":null,"code":"import _defineProperty from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/views/Login.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames\"; // reactstrap components\n\nimport { Button, Card, CardBody, CardFooter, CardHeader, CardImg, CardTitle, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from \"reactstrap\"; // core components\n\nimport Footer from \"components/Footer/Footer.jsx\"; // API\n\nimport { login } from \"../util/APIs\"; // Redux components\n\nimport { connect } from \"react-redux\";\nimport { setAuthState as _setAuthState } from \"../redux/actions/index\";\nimport { ACCESS_TOKEN } from \"../variables/constants\"; // Sweet alert components\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nvar MySwal = withReactContent(Swal);\n/** La page d'authentification\n * Cette interface est dédiée à tous les utilisateurs du système.\n * Ainsi, une fois l’utilisateur est connecté, il se redirige vers un tableau de bord selon son rôle dans le système.\n * @params : usernameOrEmail, password\n * */\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  // constructeur\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.followCursor = function (event) {\n      var posX = event.clientX - window.innerWidth / 2;\n      var posY = event.clientY - window.innerWidth / 6;\n\n      _this.setState({\n        squares1to6: \"perspective(500px) rotateY(\" + posX * 0.05 + \"deg) rotateX(\" + posY * -0.05 + \"deg)\",\n        squares7and8: \"perspective(500px) rotateY(\" + posX * 0.02 + \"deg) rotateX(\" + posY * -0.02 + \"deg)\"\n      });\n    };\n\n    _this.state = {\n      squares1to6: \"\",\n      squares7and8: \"\",\n      registrationNumberOrEmail: \"\",\n      // le matricule ou email d'utilisateur\n      password: \"\" // mot de passe\n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // componentDidMount() se déclenche Juste après que le composant fasse son premier render() pour\n  // aller chercher des références directes à certains éléments du DOM que l’on peut alors manipuler\n\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.classList.toggle(\"register-page\"); //\n\n      document.documentElement.addEventListener(\"mousemove\", this.followCursor);\n    } // À l'inverse, componentWillUnmount() se déclenche juste avant que le composant ne quitte complètement le DOM\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.body.classList.toggle(\"register-page\");\n      document.documentElement.removeEventListener(\"mousemove\", this.followCursor);\n    } // Définir la position des carrés\n\n  }, {\n    key: \"handleChange\",\n    // Cette fonction se déclenche lorsque l'utilisateur saisit son identifiant et son mot de passe\n    // Elle permet d'affecter la valeur saisie à la variable convenable\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.id, event.target.value));\n    } // Se déclenche lorsque l'utilisateur clique sur se connecter\n    // Elle permet de vérifie l’identité de l’utilisateur et ensuite l’autorise à accéder au tableau de bord\n\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin(event) {\n      event.preventDefault(); // Récupérer l’identité de l’utilisateur\n\n      var loginRequest = {\n        registrationNumberOrEmail: this.state.registrationNumberOrEmail,\n        password: this.state.password\n      }; // Initialisation de l'alert\n\n      var Toast = MySwal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 2000\n      }); // Envoyer l’identité de l’utilisateur au serveur puis récupérer la réponse\n\n      var resp;\n      login(loginRequest) // Si l'authentification est réussie\n      .then(function (response) {\n        // enregistrer le token\n        console.log(\"d\" + response); // localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n        // afficher un message de succès\n\n        Toast.fire({\n          type: 'success',\n          title: 'Vous êtes connecté avec succès.'\n        }); // modifier l'état de la variable d'authentification\n        //this.props.setAuthState(true);\n        // redirection vers un tableau de bord selon le rôle d'utilisateur dans le système.\n        //this.props.history.push(\"/user/addtransfer\");\n\n        if (response.status === 401) {\n          return response.json();\n        }\n      }).catch(function (error) {\n        // Sinon\n        console.log(\"e\" + error.status);\n\n        if (error.status === 401) {\n          // affichee un message d’erreur\n          Toast.fire({\n            type: 'error',\n            title: 'Votre nom d\\'utilisateur ou votre mot de passe est incorrect. Veuillez réessayer!'\n          });\n        } else {\n          // affichee un message d’erreur\n          Toast.fire({\n            type: 'warning',\n            title: 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"wrapper wrapper-full-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-header-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"square square-7\",\n        id: \"square7\",\n        style: {\n          transform: this.state.squares7and8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"square square-8\",\n        id: \"square8\",\n        style: {\n          transform: this.state.squares7and8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(Card, {\n        className: \"card-register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        alt: \"...\",\n        src: require(\"assets/img/square-purple-1.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Login\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: classnames({\n          \"input-group-focus\": this.state.emailFocus\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        id: \"registrationNumberOrEmail\",\n        placeholder: \"Email ou Matricule\",\n        type: \"text\",\n        value: this.state.registrationNumberOrEmail,\n        onChange: this.handleChange,\n        onFocus: function onFocus(e) {\n          return _this2.setState({\n            emailFocus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this2.setState({\n            emailFocus: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: classnames({\n          \"input-group-focus\": this.state.passwordFocus\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-lock-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        id: \"password\",\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        onFocus: function onFocus(e) {\n          return _this2.setState({\n            passwordFocus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this2.setState({\n            passwordFocus: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        size: \"lg\",\n        block: true,\n        onClick: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Se Connecter\"))))), React.createElement(\"div\", {\n        className: \"square square-1\",\n        id: \"square1\",\n        style: {\n          transform: this.state.squares1to6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"square square-2\",\n        id: \"square2\",\n        style: {\n          transform: this.state.squares1to6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"square square-3\",\n        id: \"square3\",\n        style: {\n          transform: this.state.squares1to6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setAuthState: function setAuthState(isAuthenticated) {\n      return dispatch(_setAuthState(isAuthenticated));\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/views/Login.jsx"],"names":["React","classnames","Button","Card","CardBody","CardFooter","CardHeader","CardImg","CardTitle","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Footer","login","connect","setAuthState","ACCESS_TOKEN","Swal","withReactContent","MySwal","Login","props","followCursor","event","posX","clientX","window","innerWidth","posY","clientY","setState","squares1to6","squares7and8","state","registrationNumberOrEmail","password","handleChange","bind","handleLogin","document","body","classList","toggle","documentElement","addEventListener","removeEventListener","target","id","value","preventDefault","loginRequest","Toast","mixin","toast","position","showConfirmButton","timer","resp","then","response","console","log","fire","type","title","status","json","catch","error","transform","require","emailFocus","e","passwordFocus","Component","mapDispatchToProps","dispatch","isAuthenticated"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    CardImg,\n    CardTitle,\n    Col,\n    Container,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Row\n} from \"reactstrap\";\n\n// core components\nimport Footer from \"components/Footer/Footer.jsx\";\n\n// API\nimport {login} from \"../util/APIs\";\n\n// Redux components\nimport {connect} from \"react-redux\";\nimport {setAuthState} from \"../redux/actions/index\";\nimport {ACCESS_TOKEN} from \"../variables/constants\";\n\n// Sweet alert components\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst MySwal = withReactContent(Swal);\n\n\n/** La page d'authentification\n * Cette interface est dédiée à tous les utilisateurs du système.\n * Ainsi, une fois l’utilisateur est connecté, il se redirige vers un tableau de bord selon son rôle dans le système.\n * @params : usernameOrEmail, password\n * */\n\nclass Login extends React.Component {\n    // constructeur\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares1to6: \"\",\n            squares7and8: \"\",\n            registrationNumberOrEmail: \"\",       // le matricule ou email d'utilisateur\n            password: \"\"         // mot de passe\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    // componentDidMount() se déclenche Juste après que le composant fasse son premier render() pour\n    // aller chercher des références directes à certains éléments du DOM que l’on peut alors manipuler\n    componentDidMount() {\n        document.body.classList.toggle(\"register-page\"); //\n        document.documentElement.addEventListener(\"mousemove\", this.followCursor);\n    }\n\n    // À l'inverse, componentWillUnmount() se déclenche juste avant que le composant ne quitte complètement le DOM\n    componentWillUnmount() {\n        document.body.classList.toggle(\"register-page\");\n        document.documentElement.removeEventListener(\n            \"mousemove\",\n            this.followCursor\n        );\n    }\n\n    // Définir la position des carrés\n    followCursor = event => {\n        let posX = event.clientX - window.innerWidth / 2;\n        let posY = event.clientY - window.innerWidth / 6;\n        this.setState({\n            squares1to6:\n                \"perspective(500px) rotateY(\" +\n                posX * 0.05 +\n                \"deg) rotateX(\" +\n                posY * -0.05 +\n                \"deg)\",\n            squares7and8:\n                \"perspective(500px) rotateY(\" +\n                posX * 0.02 +\n                \"deg) rotateX(\" +\n                posY * -0.02 +\n                \"deg)\"\n        });\n    };\n\n    // Cette fonction se déclenche lorsque l'utilisateur saisit son identifiant et son mot de passe\n    // Elle permet d'affecter la valeur saisie à la variable convenable\n    handleChange(event) {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    }\n\n    // Se déclenche lorsque l'utilisateur clique sur se connecter\n    // Elle permet de vérifie l’identité de l’utilisateur et ensuite l’autorise à accéder au tableau de bord\n    handleLogin(event) {\n        event.preventDefault();\n\n        // Récupérer l’identité de l’utilisateur\n        const loginRequest = {\n            registrationNumberOrEmail: this.state.registrationNumberOrEmail,\n            password: this.state.password\n        };\n\n        // Initialisation de l'alert\n        const Toast = MySwal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 2000\n        });\n\n        // Envoyer l’identité de l’utilisateur au serveur puis récupérer la réponse\n        let resp;\n        login(loginRequest)\n            // Si l'authentification est réussie\n            .then(response => {\n                // enregistrer le token\n                console.log(\"d\"+response);\n                // localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n                // afficher un message de succès\n                Toast.fire({\n                    type: 'success',\n                    title: 'Vous êtes connecté avec succès.'\n                });\n                // modifier l'état de la variable d'authentification\n                //this.props.setAuthState(true);\n                // redirection vers un tableau de bord selon le rôle d'utilisateur dans le système.\n                //this.props.history.push(\"/user/addtransfer\");\n\n                if (response.status === 401) {\n                    return response.json()\n                }\n            }).catch(error => {\n            // Sinon\n            console.log(\"e\"+error.status)\n            if (error.status === 401) {\n                // affichee un message d’erreur\n                Toast.fire({\n                    type: 'error',\n                    title: 'Votre nom d\\'utilisateur ou votre mot de passe est incorrect. Veuillez réessayer!'\n                });\n            } else {\n                // affichee un message d’erreur\n                Toast.fire({\n                    type: 'warning',\n                    title: 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!'\n                });\n            }\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <div className=\"wrapper wrapper-full-page\">\n                    <div className=\"page-header\">\n                        <div className=\"page-header-image\"/>\n                        <div className=\"content\">\n                            <Container>\n                                <Row className=\"justify-content-center\">\n                                    <Col lg=\"4\" md=\"6\">\n                                        <div\n                                            className=\"square square-7\"\n                                            id=\"square7\"\n                                            style={{transform: this.state.squares7and8}}\n                                        />\n                                        <div\n                                            className=\"square square-8\"\n                                            id=\"square8\"\n                                            style={{transform: this.state.squares7and8}}\n                                        />\n                                        <Card className=\"card-register\">\n                                            <CardHeader>\n                                                <CardImg\n                                                    alt=\"...\"\n                                                    src={require(\"assets/img/square-purple-1.png\")}\n                                                />\n                                                <CardTitle tag=\"h4\">Login</CardTitle>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Form className=\"form\">\n                                                    <InputGroup\n                                                        className={classnames({\n                                                            \"input-group-focus\": this.state.emailFocus\n                                                        })}\n                                                    >\n                                                        <InputGroupAddon addonType=\"prepend\">\n                                                            <InputGroupText>\n                                                                <i className=\"tim-icons icon-single-02\"/>\n                                                            </InputGroupText>\n                                                        </InputGroupAddon>\n                                                        <Input\n                                                            id=\"registrationNumberOrEmail\"\n                                                            placeholder=\"Email ou Matricule\"\n                                                            type=\"text\"\n                                                            value={this.state.registrationNumberOrEmail}\n                                                            onChange={this.handleChange}\n                                                            onFocus={e => this.setState({emailFocus: true})}\n                                                            onBlur={e => this.setState({emailFocus: false})}\n                                                        />\n                                                    </InputGroup>\n                                                    <InputGroup\n                                                        className={classnames({\n                                                            \"input-group-focus\": this.state.passwordFocus\n                                                        })}\n                                                    >\n                                                        <InputGroupAddon addonType=\"prepend\">\n                                                            <InputGroupText>\n                                                                <i className=\"tim-icons icon-lock-circle\"/>\n                                                            </InputGroupText>\n                                                        </InputGroupAddon>\n                                                        <Input\n                                                            id=\"password\"\n                                                            placeholder=\"Password\"\n                                                            type=\"password\"\n                                                            value={this.state.password}\n                                                            onChange={this.handleChange}\n                                                            onFocus={e => this.setState({passwordFocus: true})}\n                                                            onBlur={e => this.setState({passwordFocus: false})}\n                                                        />\n                                                    </InputGroup>\n                                                </Form>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <Button color=\"primary\" size=\"lg\" block onClick={this.handleLogin}>\n                                                    Se Connecter\n                                                </Button>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                                <div\n                                    className=\"square square-1\"\n                                    id=\"square1\"\n                                    style={{transform: this.state.squares1to6}}\n                                />\n                                <div\n                                    className=\"square square-2\"\n                                    id=\"square2\"\n                                    style={{transform: this.state.squares1to6}}\n                                />\n                                <div\n                                    className=\"square square-3\"\n                                    id=\"square3\"\n                                    style={{transform: this.state.squares1to6}}\n                                />\n                            </Container>\n                        </div>\n                    </div>\n                    <Footer/>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setAuthState: isAuthenticated => dispatch(setAuthState(isAuthenticated))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}