{"ast":null,"code":"import _defineProperty from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTable2.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardTitle, Table, Row, Col, Button, FormGroup, Modal, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Label } from \"reactstrap\"; // Sweet alert\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { TRANSFER_LIST_SIZE } from \"../../../variables/constants\";\nimport { getUserCreatedTransfers, getAllTransfers, cancelTransfer, acceptTransfer, sendTransfer } from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\nimport { formatDateTime } from \"../../../util/Helpers\";\nvar MySwal = withReactContent(Swal);\n\nvar TransfersTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransfersTable, _React$Component);\n\n  function TransfersTable(props) {\n    var _this;\n\n    _classCallCheck(this, TransfersTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransfersTable).call(this, props));\n\n    _this.toggleModal = function (modalState, id) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, modalState, !_this.state[modalState]), _defineProperty(_this$setState, \"idModal\", id), _this$setState));\n    };\n\n    _this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true,\n      formModal: false,\n      transfer: null,\n      isLoadingTransfer: true,\n      idModal: -1\n    };\n    _this.loadTransfersList = _this.loadTransfersList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLoadMore = _this.handleLoadMore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancelTransfer = _this.handleCancelTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAcceptTransfer = _this.handleAcceptTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSendTransfer = _this.handleSendTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TransfersTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /*************************************************/\n      //const username = this.props.match.params.username;\n      this.loadTransfersList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.props.isAuthenticated !== nextProps.isAuthenticated) {\n        // Reset State\n        this.setState({\n          transfers: [],\n          page: 0,\n          size: 10,\n          totalElements: 0,\n          totalPages: 0,\n          last: true,\n          isLoadingTransfers: false\n        });\n        this.loadTransfersList();\n      }\n    }\n  }, {\n    key: \"handleLoadMore\",\n    value: function handleLoadMore() {\n      this.loadTransfersList(this.state.page + 1);\n    }\n  }, {\n    key: \"loadTransfersList\",\n    value: function loadTransfersList() {\n      var _this2 = this;\n\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TRANSFER_LIST_SIZE;\n      var promise;\n      promise = getAllTransfers(); //getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n      if (!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingTransfers: true\n      });\n      promise.then(function (response) {\n        _this2.setState({\n          transfers: response,\n\n          /*response.content\n          page: response.page,\n          size: response.size,\n          totalElements: response.totalElements,\n          totalPages: response.totalPages,\n          last: response.last,*/\n          isLoadingTransfers: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoadingTransfers: false\n        });\n      });\n    }\n  }, {\n    key: \"handleCancelTransfer\",\n    value: function handleCancelTransfer(id) {\n      var _this3 = this;\n\n      MySwal.fire({\n        buttonsStyling: false,\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        title: 'Enter your motif',\n        input: 'textarea',\n        inputPlaceholder: 'Votre motif ...',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          var reason = result.value;\n          cancelTransfer(id, reason).then(function (response) {\n            /*return */\n            MySwal.fire({\n              type: 'success',\n              title: 'Votre operation a été enregistrée',\n              showConfirmButton: false,\n              timer: 1500\n            });\n\n            _this3.loadTransfersList();\n          }).catch(function (error) {\n            if (error.status === 401) {\n              _this3.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n              /*MySwal.fire({\n                type: 'error',\n                title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                showConfirmButton: false,\n                timer: 1500\n              })*/\n\n            } else {\n              _this3.props.notify('tr', 'warning', error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n              /*return MySwal.fire({\n                type: 'error',\n                title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                showConfirmButton: false,\n                timer: 1500\n              })*/\n\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleAcceptTransfer\",\n    value: function handleAcceptTransfer(id) {\n      var _this4 = this;\n\n      acceptTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this4.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          _this4.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n        } else {\n          _this4.props.notify('tr', 'warning', error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n        }\n      });\n    }\n  }, {\n    key: \"handleSendTransfer\",\n    value: function handleSendTransfer(id) {\n      var _this5 = this;\n\n      sendTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this5.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          _this5.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n        } else {\n          _this5.props.notify('tr', 'warning', error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n        }\n      });\n    }\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(state, link) {\n      switch (state) {\n        case 'accepted':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, \"Valid\\xE9e\");\n\n        case 'in_progress':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, \"Encours\");\n\n        case 'cancelled':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, \"Annul\\xE9e\");\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"renderBtnModal\",\n    value: function renderBtnModal(link) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleAcceptTransfer,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleCancelTransfer,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), \" \",\n      /*this.currentUser.role==='ROLE_CTRL'*/\n      true ? React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleSendTransfer,\n        style: {\n          border: 0\n        },\n        color: \"warning\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-paper-plane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })) : null);\n    }\n  }, {\n    key: \"renderBtn\",\n    value: function renderBtn(link, id) {\n      var _this6 = this;\n\n      return React.createElement(React.Fragment, null, this.renderBtnModal(link), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: function onClick() {\n          return _this6.toggleModal(\"formModal\", id - 1);\n        },\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })));\n    }\n    /*renderBtnCTRL(link) {\n      return(\n          <>\n            {this.renderBtnCTN(link)}\n            {` `}\n            <Button className=\"btn-icon btn-simple\" onClick={this.handleSendTransfer} style={{border:0}} color=\"warning\" size=\"sm\">\n              <i className=\"fa fa-paper-plane\"></i>\n            </Button>\n          </>\n      );\n    }*/\n\n  }, {\n    key: \"renderModal\",\n    value: function renderModal() {\n      var _this7 = this;\n\n      var idModal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n      if (idModal === -1) return null;\n      return React.createElement(React.Fragment, null, React.createElement(Modal, {\n        modalClassName: \"modal-black\",\n        isOpen: this.state.formModal,\n        toggle: function toggle() {\n          return _this7.toggleModal(\"formModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return _this7.toggleModal(\"formModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-muted text-center ml-auto mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Virement N\\xB0\", this.state.transfers[idModal].ref))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Form, {\n        role: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-5 col-form-label\",\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(FormGroup, {\n        className: \"col-md-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, this.state.transfers[idModal].principalAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-5 col-form-label\",\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(FormGroup, {\n        className: \"col-md-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, this.state.transfers[idModal].beneficiaryAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transactionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, this.state.transfers[idModal].transactionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transferReason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Motif\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, this.state.transfers[idModal].transferReason))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"executionDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Date d'execution\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, formatDateTime(this.state.transfers[idModal].executionDate)))),\n      /********************* Echange **************/\n      this.state.transfers[idModal].principalCurrency === \"MAD\" && this.state.transfers[idModal].beneficiaryCurrency !== \"MAD\" ? React.createElement(React.Fragment, null, this.state.transfers[idModal].transactionAmount > this.state.transfers[idModal].largeAmount ? React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"tradingTicket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Ticket de n\\xE9gociation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, this.state.transfers[idModal].tradingTicket))) : null, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transferNature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Nature de transfert\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, this.state.transfers[idModal].transferNature))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"authorizationNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"N\\xB0 d'autorisation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, this.state.transfers[idModal].authorizationNumber))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"authorizationValidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Validit\\xE9 de l'autorisation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, this.state.transfers[idModal].authorizationValidity))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"exchangeRate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"Cours de change\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, this.state.transfers[idModal].exchangeRate)))) : null\n      /********************* Commission ****************/\n      , React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"chargeType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Type de charge\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, this.state.transfers[idModal].chargeType))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"commissionCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"Taux applique\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, this.state.transfers[idModal].applyedRate + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"commissionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Montant commission\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, this.state.transfers[idModal].commissionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"commissionTVA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"TVA sur commission\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \" \", this.state.transfers[idModal].commissionTVA + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"totalAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Montant total\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, this.state.transfers[idModal].totalAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, this.state.transfers[idModal].transactionCurrency)))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"applyCommission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Appliquer commission\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, this.state.transfers[idModal].applyCommission ? \"Oui\" : \"Non\"))), this.state.transfers[idModal].state === 'cancelled' ? React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"applyCommissio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"Motif de l'annulation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, this.state.transfers[idModal].cancelledMotif))) : null, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, this.renderBtnModal(\"/user/transfers/\" + idModal + 1))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var _this$state = this.state,\n          isLoadingTransfers = _this$state.isLoadingTransfers,\n          transfers = _this$state.transfers;\n\n      if (isLoadingTransfers) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          },\n          __self: this\n        }, \"Waiting\");\n      }\n\n      if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444\n          },\n          __self: this\n        });\n      }\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n\n      return React.createElement(React.Fragment, null, this.renderModal(this.state.idModal), React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: function onClick() {\n          return _this8.toggleModal(\"formModal\", 2);\n        },\n        style: {\n          border: 0,\n          marginLeft: \"123p\"\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TransfersTable;\n}(React.Component);\n\nexport default TransfersTable;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTable2.jsx"],"names":["React","classnames","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","Button","FormGroup","Modal","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Label","Swal","withReactContent","TRANSFER_LIST_SIZE","getUserCreatedTransfers","getAllTransfers","cancelTransfer","acceptTransfer","sendTransfer","NotFound","formatDateTime","MySwal","TransfersTable","props","toggleModal","modalState","id","setState","state","transfers","page","size","totalElements","totalPages","last","isLoadingTransfers","formModal","transfer","isLoadingTransfer","idModal","loadTransfersList","bind","handleLoadMore","handleCancelTransfer","handleAcceptTransfer","handleSendTransfer","nextProps","isAuthenticated","promise","then","response","catch","error","fire","buttonsStyling","customClass","confirmButton","cancelButton","title","input","inputPlaceholder","showCancelButton","confirmButtonText","result","value","reason","type","showConfirmButton","timer","status","handleLogout","notify","message","link","border","renderBtnModal","ref","principalAccount","beneficiaryAccount","transactionAmount","transferReason","executionDate","principalCurrency","beneficiaryCurrency","largeAmount","tradingTicket","transferNature","authorizationNumber","authorizationValidity","exchangeRate","chargeType","applyedRate","commissionAmount","commissionTVA","totalAmount","transactionCurrency","applyCommission","cancelledMotif","notFound","renderModal","marginLeft","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  Button,\n\n\n\n    FormGroup,\n    Modal,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Label\n} from \"reactstrap\";\n// Sweet alert\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nimport {TRANSFER_LIST_SIZE} from \"../../../variables/constants\";\nimport {getUserCreatedTransfers,  getAllTransfers, cancelTransfer, acceptTransfer, sendTransfer} from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\nimport {formatDateTime} from \"../../../util/Helpers\";\n\n\nconst MySwal = withReactContent(Swal);\n\nclass TransfersTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true,\n      formModal: false,\n      transfer: null,\n      isLoadingTransfer: true,\n        idModal: -1\n    };\n    this.loadTransfersList = this.loadTransfersList.bind(this);\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n    this.handleCancelTransfer = this.handleCancelTransfer.bind(this);\n    this.handleAcceptTransfer = this.handleAcceptTransfer.bind(this);\n    this.handleSendTransfer = this.handleSendTransfer.bind(this);\n  }\n\n  componentDidMount() {\n    /*************************************************/\n    //const username = this.props.match.params.username;\n    this.loadTransfersList();\n  }\n\n  componentDidUpdate(nextProps) {\n    if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n      // Reset State\n      this.setState({\n        transfers: [],\n        page: 0,\n        size: 10,\n        totalElements: 0,\n        totalPages: 0,\n        last: true,\n        isLoadingTransfers: false\n      });\n      this.loadTransfersList();\n    }\n  }\n\n  handleLoadMore() {\n    this.loadTransfersList(this.state.page + 1);\n  }\n\n  loadTransfersList(page = 0, size = TRANSFER_LIST_SIZE) {\n    let promise;\n\n    promise = getAllTransfers();//getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoadingTransfers: true\n    });\n\n    promise\n        .then(response => {\n          this.setState({\n            transfers: response,/*response.content\n            page: response.page,\n            size: response.size,\n            totalElements: response.totalElements,\n            totalPages: response.totalPages,\n            last: response.last,*/\n            isLoadingTransfers: false\n          })\n        }).catch(error => {\n      this.setState({\n        isLoadingTransfers: false\n      })\n    });\n\n  }\n\n  handleCancelTransfer(id) {\n    MySwal.fire({\n      buttonsStyling:false,\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger',\n      },\n      title: 'Enter your motif',\n      input: 'textarea',\n      inputPlaceholder: 'Votre motif ...',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n        let reason = result.value;\n        cancelTransfer(id, reason)\n            .then(response => {\n\n              /*return */MySwal.fire({\n                type: 'success',\n                title: 'Votre operation a été enregistrée',\n                showConfirmButton: false,\n                timer: 1500\n              });\n              this.loadTransfersList();\n            }).catch(error => {\n          if(error.status === 401) {\n            this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n            /*MySwal.fire({\n              type: 'error',\n              title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n              showConfirmButton: false,\n              timer: 1500\n            })*/\n          } else {\n            this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n            /*return MySwal.fire({\n              type: 'error',\n              title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n              showConfirmButton: false,\n              timer: 1500\n            })*/\n          }\n        });\n      }\n    })\n  }\n\n  handleAcceptTransfer(id) {\n    acceptTransfer(id)\n        .then(response => {\n\n          /*return */MySwal.fire({\n            type: 'success',\n            title: 'Votre operation a été enregistrée',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.loadTransfersList();\n        }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n      } else {\n        this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n      }\n    });\n  }\n\n  handleSendTransfer(id) {\n    sendTransfer(id)\n        .then(response => {\n\n          /*return */MySwal.fire({\n            type: 'success',\n            title: 'Votre operation a été enregistrée',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.loadTransfersList();\n        }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n      } else {\n        this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n      }\n    });\n  }\n\n  renderSwitch(state, link) {\n    switch(state) {\n      case 'accepted':\n        return <Button className=\"btn-link\" href={link} color=\"success\">Validée</Button>;\n      case 'in_progress':\n        return <Button className=\"btn-link\" href={link} color=\"warning\">Encours</Button>;\n      case 'cancelled':\n        return <Button className=\"btn-link\" href={link} color=\"danger\">Annulée</Button>;\n      default:\n        return null;\n    }\n  }\n\n    renderBtnModal(link) {\n        return(\n            <>\n                <Button className=\"btn-icon btn-simple\" onClick={this.handleAcceptTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n                    <i className=\"fa fa-check\"></i>\n                </Button>{` `}\n                <Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n                    <i className=\"fa fa-times\" />\n                </Button>{` `}\n                {/*this.currentUser.role==='ROLE_CTRL'*/true?(\n                    <Button className=\"btn-icon btn-simple\" onClick={this.handleSendTransfer} style={{border:0}} color=\"warning\" size=\"sm\">\n                        <i className=\"fa fa-paper-plane\"></i>\n                    </Button>\n                ):null}\n            </>\n        );\n    }\n\n  renderBtn(link,id) {\n    return(\n        <>\n          {this.renderBtnModal(link)}\n          {` `}\n          <Button className=\"btn-icon btn-simple\" onClick={() => this.toggleModal(\"formModal\",id-1)} style={{border:0}} color=\"primary\" size=\"sm\">\n              <i className=\"fa fa-eye\"></i>\n          </Button>\n        </>\n    );\n  }\n\n\n\n  /*renderBtnCTRL(link) {\n    return(\n        <>\n          {this.renderBtnCTN(link)}\n          {` `}\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleSendTransfer} style={{border:0}} color=\"warning\" size=\"sm\">\n            <i className=\"fa fa-paper-plane\"></i>\n          </Button>\n        </>\n    );\n  }*/\n\n  renderModal(idModal=-1){\n    if(idModal===-1) return null;\n    return(\n      <>\n          {/* Start Form Modal */}\n          <Modal\n              modalClassName=\"modal-black\"\n              isOpen={this.state.formModal}\n              toggle={() => this.toggleModal(\"formModal\")}\n          >\n              <div className=\"modal-header justify-content-center\">\n                  <button\n                      className=\"close\"\n                      onClick={() => this.toggleModal(\"formModal\")}\n                  >\n                      <i className=\"tim-icons icon-simple-remove text-white\" />\n                  </button>\n                  <div className=\"text-muted text-center ml-auto mr-auto\">\n                      <h3 className=\"mb-0\">Virement N°{this.state.transfers[idModal].ref}</h3>\n                  </div>\n              </div>\n              <div className=\"modal-body\">\n                  <Form role=\"form\">\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-5 col-form-label\"} for=\"principalAccount\">N° compte débiteur</Label>\n                          <FormGroup className=\"col-md-7\">\n                              <p className=\"form-control-static\">\n                                  {this.state.transfers[idModal].principalAccount+\" \"}<span>{/*transfer.principalCurrency*/}</span>\n                              </p>\n                          </FormGroup>\n                      </div>\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-5 col-form-label\"} for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                          <FormGroup className=\"col-md-7\">\n                              <p className=\"form-control-static\">\n                                  {this.state.transfers[idModal].beneficiaryAccount+\" \"}<span>{/*transfer.beneficiaryCurrency*/}</span>\n                              </p>\n                          </FormGroup>\n                      </div>\n\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-4 col-form-label\"}  for=\"transactionAmount\">Montant</Label>\n                          <FormGroup  className=\"col-md-8\">\n                              <p className=\"form-control-static\">\n                                  {this.state.transfers[idModal].transactionAmount+\" \"}<span>{/*transfer.transactionCurrency*/}</span>\n                              </p>\n                          </FormGroup>\n                      </div>\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-4 col-form-label\"} for=\"transferReason\">Motif</Label>\n                          <FormGroup className=\"col-md-8\">\n                              <p className=\"form-control-static\">{this.state.transfers[idModal].transferReason}</p>\n                          </FormGroup>\n                      </div>\n\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-4 col-form-label\"} for=\"executionDate\">Date d'execution</Label>\n                          <FormGroup className=\"col-md-8\">\n                              <p className=\"form-control-static\">{formatDateTime(this.state.transfers[idModal].executionDate)}</p>\n                          </FormGroup>\n                      </div>\n\n                      {/********************* Echange **************/\n                          (this.state.transfers[idModal].principalCurrency===\"MAD\" && this.state.transfers[idModal].beneficiaryCurrency!==\"MAD\") ?(\n                              <>\n                                  {\n                                      (this.state.transfers[idModal].transactionAmount>this.state.transfers[idModal].largeAmount)?(\n                                          <div className=\"form-row\">\n                                              <Label className={\"col-md-4 col-form-label\"} for=\"tradingTicket\">Ticket de négociation</Label>\n                                              <FormGroup className=\"col-md-8\">\n                                                  <p className=\"form-control-static\">{this.state.transfers[idModal].tradingTicket}</p>\n                                              </FormGroup>\n                                          </div>\n                                      ):null\n                                  }\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"transferNature\">Nature de transfert</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">{this.state.transfers[idModal].transferNature}</p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"authorizationNumber\">N° d'autorisation</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">{this.state.transfers[idModal].authorizationNumber}</p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">{this.state.transfers[idModal].authorizationValidity}</p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"exchangeRate\">Cours de change</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">{this.state.transfers[idModal].exchangeRate}</p>\n                                      </FormGroup>\n                                  </div>\n                              </>):null\n                          /********************* Commission ****************/}\n\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-4 col-form-label\"} for=\"chargeType\">Type de charge</Label>\n                          <FormGroup className=\"col-md-8\">\n                              <p className=\"form-control-static\">{this.state.transfers[idModal].chargeType}</p>\n                          </FormGroup>\n                      </div>\n\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-4 col-form-label\"} for=\"commissionCode\">Taux applique</Label>\n                          <FormGroup className=\"col-md-8\">\n                              <p className=\"form-control-static\">{this.state.transfers[idModal].applyedRate+\" \"}<span></span></p>\n                          </FormGroup>\n                      </div>\n\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-4 col-form-label\"} for=\"commissionAmount\">Montant commission</Label>\n                          <FormGroup className=\"col-md-8\">\n                              <p className=\"form-control-static\">{this.state.transfers[idModal].commissionAmount+\" \"}<span></span></p>\n                          </FormGroup>\n                      </div>\n\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-4 col-form-label\"} for=\"commissionTVA\">TVA sur commission</Label>\n                          <FormGroup className=\"col-md-8\">\n                              <p className=\"form-control-static\"> {this.state.transfers[idModal].commissionTVA+\" \"}<span></span></p>\n                          </FormGroup>\n                      </div>\n\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-4 col-form-label\"} for=\"totalAmount\">Montant total</Label>\n                          <FormGroup className=\"col-md-8\">\n                              <p className=\"form-control-static\">{this.state.transfers[idModal].totalAmount+\" \"}<span>{this.state.transfers[idModal].transactionCurrency}</span></p>\n                          </FormGroup>\n                      </div>\n\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-4 col-form-label\"} for=\"applyCommission\">Appliquer commission</Label>\n                          <FormGroup className=\"col-md-8\">\n                              <p className=\"form-control-static\">{this.state.transfers[idModal].applyCommission?\"Oui\":\"Non\"}</p>\n                          </FormGroup>\n                      </div>\n\n                      {this.state.transfers[idModal].state==='cancelled'?(\n                          <div className=\"form-row\">\n                              <Label className={\"col-md-4 col-form-label\"} for=\"applyCommissio\">Motif de l'annulation</Label>\n                              <FormGroup className=\"col-md-8\">\n                                  <p className=\"form-control-static\">{this.state.transfers[idModal].cancelledMotif}</p>\n                              </FormGroup>\n                          </div>\n                      ):null}\n\n\n                      <div className=\"text-center\">\n                          {this.renderBtnModal(\"/user/transfers/\"+idModal+1)}\n                      </div>\n                  </Form>\n              </div>\n          </Modal>\n          {/* End Form Modal */}\n      </>\n    );\n  }\n\n    toggleModal = (modalState,id) => {\n        this.setState({\n            [modalState]: !this.state[modalState],\n            idModal:id\n        });\n    };\n  render() {\n    const { isLoadingTransfers, transfers } = this.state;\n    if(isLoadingTransfers) {\n      return <h1>Waiting</h1>;\n    }\n\n    if(this.state.notFound ) {\n      return <NotFound />;\n    }\n\n    /*if(this.state.serverError) {\n      return <ServerError />;\n    }*/\n    return (\n        <>\n            {this.renderModal(this.state.idModal)}\n            <Button className=\"btn-icon btn-simple\" onClick={() => this.toggleModal(\"formModal\",2)} style={{border:0,marginLeft:\"123p\"}} color=\"primary\" size=\"sm\">\n                <i className=\"fa fa-eye\"></i>\n            </Button>\n        </>\n    );\n  }\n}\n\nexport default TransfersTable;\n"]},"metadata":{},"sourceType":"module"}