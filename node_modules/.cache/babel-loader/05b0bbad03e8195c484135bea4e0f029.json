{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Sections/EventList.jsx\";\nimport React from \"react\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { defaultFont, primaryColor, dangerColor } from \"../../../assets/jss/material-dashboard-react.jsx\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport { EVENT_LIST_SIZE } from \"../../../variables/constants\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport { getUserCreatedEvents, getUserFollowedClubs, deleteEvent } from \"../../../util/APIUtils\"; // @material-ui/icons\n\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport AddCircle from \"@material-ui/icons/AddCircle\";\nimport { notification } from \"antd\";\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  tableActions: {\n    display: \"flex\",\n    border: \"none\",\n    padding: \"12px 8px !important\",\n    verticalAlign: \"middle\"\n  },\n  tableActionButton: {\n    width: \"27px\",\n    height: \"27px\",\n    padding: \"0\"\n  },\n  tableActionButtonIcon: {\n    width: \"17px\",\n    height: \"17px\"\n  },\n  edit: {\n    backgroundColor: \"transparent\",\n    color: primaryColor,\n    boxShadow: \"none\"\n  },\n  close: {\n    backgroundColor: \"transparent\",\n    color: dangerColor,\n    boxShadow: \"none\"\n  }\n};\n\nvar EventList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventList, _React$Component);\n\n  function EventList(props) {\n    var _this;\n\n    _classCallCheck(this, EventList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventList).call(this, props));\n    _this.state = {\n      events: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      currentReactions: [],\n      isLoadingEvents: true\n    };\n    _this.loadEventList = _this.loadEventList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLoadMore = _this.handleLoadMore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteEvent = _this.handleDeleteEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EventList, [{\n    key: \"loadEventList\",\n    value: function loadEventList() {\n      var _this2 = this;\n\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EVENT_LIST_SIZE;\n      var promise;\n      promise = getUserCreatedEvents(this.props.currentUser.username, page, size);\n\n      if (!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingEvents: true\n      });\n      promise.then(function (response) {\n        //const events = this.state.events.slice();\n        //const currentReactions = this.state.currentReactions.slice();\n        _this2.setState({\n          events: response.content,\n          //events.concat(response.content),\n          page: response.page,\n          size: response.size,\n          totalElements: response.totalElements,\n          totalPages: response.totalPages,\n          last: response.last,\n          //currentReactions: currentReactions.concat(Array(response.content.length).fill(null)),\n          isLoadingEvents: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoadingEvents: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /*************************************************/\n      //const username = this.props.match.params.username;\n      this.loadEventList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.props.isAuthenticated !== nextProps.isAuthenticated) {\n        // Reset State\n        this.setState({\n          events: [],\n          page: 0,\n          size: 10,\n          totalElements: 0,\n          totalPages: 0,\n          last: true,\n          isLoadingEvents: false\n        });\n        this.loadEventList();\n      }\n    }\n  }, {\n    key: \"handleLoadMore\",\n    value: function handleLoadMore() {\n      this.loadEventList(this.state.page + 1);\n    }\n  }, {\n    key: \"handleDeleteEvent\",\n    value: function handleDeleteEvent(id) {\n      var _this3 = this;\n\n      deleteEvent(id).then(function (response) {\n        notification.success({\n          message: 'Event App',\n          description: \"Suppression effectuée avec succès\"\n        }); //this.props.history.push(\"/dash/myevents\");\n\n        _this3.loadEventList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          _this3.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour éditer l\\'événement.');\n        } else {\n          notification.error({\n            message: 'Event App',\n            description: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var classes = this.props.classes;\n      var eventsData = [];\n      this.state.events.forEach(function (event) {\n        var eventData = [];\n        eventData.push(event.name);\n        eventData.push(event.eventDateTime);\n        event.types.forEach(function (type) {\n          eventData.push(type.reactionCount);\n        });\n        eventData.push(React.createElement(\"div\", {\n          className: classes.tableActions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          id: \"tooltip-top\",\n          title: \"Modifier\",\n          placement: \"top\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Edit\",\n          href: \"/dash/myevents/events/\".concat(event.id),\n          className: classes.tableActionButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(Edit, {\n          className: classes.tableActionButtonIcon + \" \" + classes.edit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }))), React.createElement(Tooltip, {\n          id: \"tooltip-top-start\",\n          title: \"Supprimer\",\n          placement: \"top\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Close\",\n          onClick: function onClick() {\n            return _this4.handleDeleteEvent(event.id);\n          },\n          className: classes.tableActionButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(Close, {\n          className: classes.tableActionButtonIcon + \" \" + classes.close,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        })))));\n        eventsData.push(eventData);\n      });\n      return React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Mes \\xE9v\\xE9nements\", React.createElement(Button, {\n        href: \"/dash/myevents/addevent\",\n        className: classes.navLink,\n        color: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(AddCircle, {\n        className: classes.icons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableHeaderColor: \"primary\",\n        tableHead: [\"Nom\", \"Date\", \"Intéressés\", \"Participants\", \"Actions\"],\n        tableData: eventsData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return EventList;\n}(React.Component);\n\nexport default withStyles(styles)(EventList);","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Sections/EventList.jsx"],"names":["React","withStyles","Tooltip","IconButton","defaultFont","primaryColor","dangerColor","GridItem","GridContainer","Table","Card","CardHeader","CardBody","EVENT_LIST_SIZE","Button","getUserCreatedEvents","getUserFollowedClubs","deleteEvent","Edit","Close","AddCircle","notification","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","tableActions","display","border","padding","verticalAlign","tableActionButton","width","height","tableActionButtonIcon","edit","backgroundColor","boxShadow","close","EventList","props","state","events","page","size","totalElements","totalPages","last","currentReactions","isLoadingEvents","loadEventList","bind","handleLoadMore","handleDeleteEvent","promise","currentUser","username","setState","then","response","content","catch","error","nextProps","isAuthenticated","id","success","message","description","status","handleLogout","classes","eventsData","forEach","event","eventData","push","name","eventDateTime","types","type","reactionCount","tooltip","navLink","icons","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n    defaultFont,\n    primaryColor,\n    dangerColor\n} from \"../../../assets/jss/material-dashboard-react.jsx\";\n// core components\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport {EVENT_LIST_SIZE} from \"../../../variables/constants\";\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport {\n    getUserCreatedEvents,\n    getUserFollowedClubs, deleteEvent\n} from \"../../../util/APIUtils\";\n// @material-ui/icons\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport AddCircle from \"@material-ui/icons/AddCircle\";\nimport {notification} from \"antd\";\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n    tableActions: {\n        display: \"flex\",\n        border: \"none\",\n        padding: \"12px 8px !important\",\n        verticalAlign: \"middle\"\n    },\n    tableActionButton: {\n        width: \"27px\",\n        height: \"27px\",\n        padding: \"0\"\n    },\n    tableActionButtonIcon: {\n        width: \"17px\",\n        height: \"17px\"\n    },\n    edit: {\n        backgroundColor: \"transparent\",\n        color: primaryColor,\n        boxShadow: \"none\"\n    },\n    close: {\n        backgroundColor: \"transparent\",\n        color: dangerColor,\n        boxShadow: \"none\"\n    }\n};\n\nclass EventList extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: [],\n            page: 0,\n            size: 10,\n            totalElements: 0,\n            totalPages: 0,\n            last: true,\n            currentReactions: [],\n            isLoadingEvents: true\n        };\n        this.loadEventList = this.loadEventList.bind(this);\n        this.handleLoadMore = this.handleLoadMore.bind(this);\n        this.handleDeleteEvent = this.handleDeleteEvent.bind(this);\n    }\n\n    loadEventList(page = 0, size = EVENT_LIST_SIZE) {\n        let promise;\n\n        promise = getUserCreatedEvents(this.props.currentUser.username, page, size);\n\n        if(!promise) {\n            return;\n        }\n\n        this.setState({\n            isLoadingEvents: true\n        });\n\n        promise\n            .then(response => {\n                //const events = this.state.events.slice();\n                //const currentReactions = this.state.currentReactions.slice();\n\n                this.setState({\n                    events: response.content,//events.concat(response.content),\n                    page: response.page,\n                    size: response.size,\n                    totalElements: response.totalElements,\n                    totalPages: response.totalPages,\n                    last: response.last,\n                    //currentReactions: currentReactions.concat(Array(response.content.length).fill(null)),\n                    isLoadingEvents: false\n                })\n            }).catch(error => {\n            this.setState({\n                isLoadingEvents: false\n            })\n        });\n\n    }\n\n    componentDidMount() {\n        /*************************************************/\n        //const username = this.props.match.params.username;\n        this.loadEventList();\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n            // Reset State\n            this.setState({\n                events: [],\n                page: 0,\n                size: 10,\n                totalElements: 0,\n                totalPages: 0,\n                last: true,\n                isLoadingEvents: false\n            });\n            this.loadEventList();\n        }\n    }\n\n    handleLoadMore() {\n        this.loadEventList(this.state.page + 1);\n    }\n\n    handleDeleteEvent(id) {\n\n        deleteEvent(id)\n            .then(response => {\n                notification.success({\n                    message: 'Event App',\n                    description: \"Suppression effectuée avec succès\",\n                });\n                //this.props.history.push(\"/dash/myevents\");\n                this.loadEventList();\n            }).catch(error => {\n            if(error.status === 401) {\n                this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour éditer l\\'événement.');\n            } else {\n                notification.error({\n                    message: 'Event App',\n                    description: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!'\n                });\n            }\n        });\n    }\n\n  render() {\n      const {classes} = this.props;\n      let eventsData = [];\n      this.state.events.forEach( event =>{\n        let eventData = [];\n        eventData.push(event.name);\n        eventData.push(event.eventDateTime);\n        event.types.forEach( type =>{eventData.push(type.reactionCount)});\n          eventData.push(<div className={classes.tableActions}>\n              <Tooltip\n                  id=\"tooltip-top\"\n                  title=\"Modifier\"\n                  placement=\"top\"\n                  classes={{ tooltip: classes.tooltip }}\n              >\n                  <IconButton\n                      aria-label=\"Edit\"\n                      href={`/dash/myevents/events/${event.id}`}\n                      className={classes.tableActionButton}\n                  >\n                      <Edit\n                          className={\n                              classes.tableActionButtonIcon + \" \" + classes.edit\n                          }\n                      />\n                  </IconButton>\n              </Tooltip>\n              <Tooltip\n                  id=\"tooltip-top-start\"\n                  title=\"Supprimer\"\n                  placement=\"top\"\n                  classes={{ tooltip: classes.tooltip }}\n              >\n                  <IconButton\n                      aria-label=\"Close\"\n                      onClick={ () => this.handleDeleteEvent(event.id)}\n                      className={classes.tableActionButton}\n                  >\n                      <Close\n                          className={\n                              classes.tableActionButtonIcon + \" \" + classes.close\n                          }\n                      />\n                  </IconButton>\n              </Tooltip>\n          </div>);\n\n        eventsData.push(eventData);\n      });\n      return (\n          <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                  <Card>\n                      <CardHeader color=\"primary\">\n                          <h4 className={classes.cardTitleWhite}>Mes événements\n                              <Button\n                                  href=\"/dash/myevents/addevent\"\n                                  className={classes.navLink}\n                                  color=\"transparent\"\n                              >\n                                  <AddCircle className={classes.icons} />\n                              </Button>\n                          </h4>\n                      </CardHeader>\n                      <CardBody>\n                          <Table\n                              tableHeaderColor=\"primary\"\n                              tableHead={[\"Nom\", \"Date\", \"Intéressés\",\"Participants\", \"Actions\"]}\n                              tableData={eventsData}\n                          />\n                      </CardBody>\n                  </Card>\n              </GridItem>\n          </GridContainer>\n      );\n  }\n}\n\nexport default withStyles(styles)(EventList);\n"]},"metadata":{},"sourceType":"module"}