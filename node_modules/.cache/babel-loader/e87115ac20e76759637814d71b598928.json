{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/layouts/Admin/Admin.jsx\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\"; // core components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport routes from \"routes.js\";\nimport logo from \"assets/img/react-logo.png\";\nvar ps;\n\nvar Admin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Admin, _React$Component);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Admin).call(this, props));\n\n    _this.toggleSidebar = function () {\n      document.documentElement.classList.toggle(\"nav-open\");\n\n      _this.setState({\n        sidebarOpened: !_this.state.sidebarOpened\n      });\n    };\n\n    _this.getRoutes = function (routes) {\n      return routes.map(function (prop, key) {\n        if (prop.layout === \"/admin\") {\n          return React.createElement(Route, {\n            path: prop.layout + prop.path,\n            component: prop.component,\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    _this.handleBgClick = function (color) {\n      _this.setState({\n        backgroundColor: color\n      });\n    };\n\n    _this.state = {\n      backgroundColor: \"primary\",\n      sidebarOpened: document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        document.documentElement.className += \" perfect-scrollbar-on\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n        ps = new PerfectScrollbar(this.refs.mainPanel, {\n          suppressScrollX: true\n        });\n        var tables = document.querySelectorAll(\".table-responsive\");\n\n        for (var i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.className += \" perfect-scrollbar-off\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.action === \"PUSH\") {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          var tables = document.querySelectorAll(\".table-responsive\");\n\n          for (var i = 0; i < tables.length; i++) {\n            ps = new PerfectScrollbar(tables[i]);\n          }\n        }\n\n        document.documentElement.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n        this.refs.mainPanel.scrollTop = 0;\n      }\n    } // this function opens and closes the sidebar on small devices\n\n  }, {\n    key: \"render\",\n\n    /*getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (\n          this.props.location.pathname.indexOf(\n            routes[i].layout + routes[i].path\n          ) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n      return \"Brand\";\n    };*/\n    value: function render() {\n      return React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return Admin;\n}(React.Component);\n\nexport default Admin;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/layouts/Admin/Admin.jsx"],"names":["React","Route","Switch","PerfectScrollbar","AdminNavbar","Footer","Sidebar","FixedPlugin","routes","logo","ps","Admin","props","toggleSidebar","document","documentElement","classList","toggle","setState","sidebarOpened","state","getRoutes","map","prop","key","layout","path","component","handleBgClick","color","backgroundColor","className","indexOf","navigator","platform","remove","refs","mainPanel","suppressScrollX","tables","querySelectorAll","i","length","destroy","e","history","action","scrollTop","scrollingElement","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"primary\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  /*getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };*/\n  render() {\n    return (\n      <>\n        {/*<div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"https://www.bcp.com/\",\n              text: \"Banque Populaire\",\n              imgSrc: logo\n            }}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>{this.getRoutes(routes)}</Switch>\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>*/}\n        {/*<FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleBgClick={this.handleBgClick}\n        />*/}\n      </>\n    );\n  }\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}