{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/routes/App.js\";\nimport React, { Component } from 'react';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport { getCurrentUser, login } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../variables/constants';\nimport Dashboard from '../layouts/Dashboard/Dashboard.jsx';\nimport Login from '../views/Login';\nimport NotFound from '../views/NotFound'; //import LoadingIndicator from '../components/LoadingIndicator/LoadingIndicator';\n\nimport PrivateRoute from './PrivateRoute'; // react plugin for creating notifications over the dashboard\n\nimport NotificationAlert from \"react-notification-alert\"; // Sweet alert\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nvar MySwal = withReactContent(Swal);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleLogin = function (loginRequest) {\n      //let loginRequest=null;\n      var Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000\n      });\n      login(loginRequest).then(function (response) {\n        localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n        Toast.fire({\n          type: 'success',\n          title: 'Vous êtes connecté avec succès.'\n        }); //this.loadCurrentUser();\n\n        _this.props.history.push(\"/user/transfer\");\n      }).catch(function (error) {\n        if (error.status === 401) {\n          Toast.fire({\n            type: 'error',\n            title: 'Votre nom d\\'utilisateur ou votre mot de passe est incorrect. Veuillez réessayer!'\n          });\n        } else {\n          _this.setState({\n            isAuthenticated: true\n          });\n\n          _this.props.history.push(\"/user/transfer\");\n\n          _this.notify(\"tr\", \"warning\", \"Pardon! Quelque chose s'est mal passé. Veuillez réessayer!\");\n        }\n      });\n    };\n\n    _this.handleLogout = function () {\n      localStorage.removeItem(ACCESS_TOKEN);\n\n      _this.setState({\n        currentUser: null,\n        isAuthenticated: false\n      });\n\n      _this.notify(\"tr\", \"success\", \"Vous êtes déconnecté avec succès.\");\n\n      _this.props.history.push('/login');\n    };\n\n    _this.notify = function () {\n      var place = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"tr\";\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"danger\";\n      var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"ok\";\n      var options = {};\n      options = {\n        place: place,\n        message: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, message)),\n        type: type,\n        icon: \"tim-icons icon-bell-55\",\n        autoDismiss: 2\n      };\n\n      _this.refs.notificationAlert.notificationAlert(options);\n    };\n\n    _this.state = {\n      currentUser: null,\n      isAuthenticated: true,\n      //false,\n      isLoading: true\n    };\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadCurrentUser = _this.loadCurrentUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.notify = _this.notify.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /*componentWillMount(){\n    this.loadCurrentUser();\n    alert(this.state.isAuthenticated);\n  }*/\n\n\n  _createClass(App, [{\n    key: \"loadCurrentUser\",\n    value: function loadCurrentUser() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getCurrentUser().then(function (response) {\n        _this2.setState({\n          currentUser: response,\n          isAuthenticated: true,\n          isLoading: false\n        }); //alert(this.state.isAuthenticated);\n\n      }).catch(function (error) {\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadCurrentUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      /*if(this.state.isLoading) {\n        return <LoadingIndicator />\n      }*/\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"react-notification-alert-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(NotificationAlert, {\n        ref: \"notificationAlert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/login\",\n        render: function render(props) {\n          return React.createElement(Login, Object.assign({\n            handleLogin: _this3.handleLogin\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/user\",\n        component: Dashboard,\n        handleLogout: this.handleLogout,\n        notify: function notify(place, type, message) {\n          return _this3.notify(place, type, message);\n        },\n        history: this.props.history,\n        currentUser: this.state.currentUser,\n        isAuthenticated: this.state.isAuthenticated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        exact: true,\n        from: \"/\",\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/routes/App.js"],"names":["React","Component","Route","withRouter","Switch","Redirect","getCurrentUser","login","ACCESS_TOKEN","Dashboard","Login","NotFound","PrivateRoute","NotificationAlert","Swal","withReactContent","MySwal","App","props","handleLogin","loginRequest","Toast","mixin","toast","position","showConfirmButton","timer","then","response","localStorage","setItem","accessToken","fire","type","title","history","push","catch","error","status","setState","isAuthenticated","notify","handleLogout","removeItem","currentUser","place","message","options","icon","autoDismiss","refs","notificationAlert","state","isLoading","bind","loadCurrentUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Route,\n  withRouter,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport { getCurrentUser,login } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../variables/constants';\n\nimport Dashboard from '../layouts/Dashboard/Dashboard.jsx';\nimport Login from '../views/Login';\nimport NotFound from '../views/NotFound';\n//import LoadingIndicator from '../components/LoadingIndicator/LoadingIndicator';\nimport PrivateRoute from './PrivateRoute';\n\n\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\n// Sweet alert\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nconst MySwal = withReactContent(Swal);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: true,//false,\n      isLoading: true\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.notify = this.notify.bind(this);\n  }\n\n  /*componentWillMount(){\n    this.loadCurrentUser();\n    alert(this.state.isAuthenticated);\n  }*/\n\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n      //alert(this.state.isAuthenticated);\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });  \n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n\n  handleLogin = (loginRequest) => {\n\n    //let loginRequest=null;\n\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000\n    });\n    login(loginRequest)\n        .then(response => {\n          localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n          Toast.fire({\n            type: 'success',\n            title: 'Vous êtes connecté avec succès.'\n          });\n          //this.loadCurrentUser();\n          this.props.history.push(\"/user/transfer\");\n        }).catch(error => {\n      if(error.status === 401) {\n        Toast.fire({\n          type: 'error',\n          title: 'Votre nom d\\'utilisateur ou votre mot de passe est incorrect. Veuillez réessayer!'\n        });\n      } else {\n        this.setState({\n          isAuthenticated: true\n        });\n        this.props.history.push(\"/user/transfer\");\n        this.notify(\"tr\",\"warning\",\"Pardon! Quelque chose s'est mal passé. Veuillez réessayer!\");\n      }\n    });\n  };\n\n\n\n  handleLogout = ()=> {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n    this.notify(\"tr\",\"success\", \"Vous êtes déconnecté avec succès.\");\n    this.props.history.push('/login');\n  };\n\n  notify = (place =\"tr\",type=\"danger\", message=\"ok\") => {\n\n    let options = {};\n    options = {\n      place: place,\n      message: (\n          <div>\n            <div>\n              {message}\n            </div>\n          </div>\n      ),\n      type: type,\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: 2\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  };\n\n  render() {\n    /*if(this.state.isLoading) {\n      return <LoadingIndicator />\n    }*/\n    return (\n        <>\n            <div className=\"react-notification-alert-container\">\n              <NotificationAlert ref=\"notificationAlert\" />\n            </div>\n            <Switch>\n              <Route path=\"/login\"\n                     render={(props) => <Login handleLogin={this.handleLogin} {...props} />} />\n              <PrivateRoute path=\"/user\" component={Dashboard} handleLogout={this.handleLogout} notify={(place,type,message)=>this.notify(place,type,message)} history={this.props.history} currentUser={this.state.currentUser} isAuthenticated={this.state.isAuthenticated}/>\n              <Redirect exact from=\"/\" to=\"/login\" />\n              <Route component={NotFound} />\n            </Switch>\n        </>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}