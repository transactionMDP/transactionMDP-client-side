{"ast":null,"code":"import _objectWithoutProperties from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Dashboard.jsx\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleDrawerToggle = function () {\n      _this.setState({\n        mobileOpen: !_this.state.mobileOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"getRoute\",\n    value: function getRoute() {\n      return this.props.location.pathname !== \"/maps\";\n    }\n  }, {\n    key: \"resizeFunction\",\n    value: function resizeFunction() {\n      if (window.innerWidth >= 960) {\n        this.setState({\n          mobileOpen: false\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        var ps = new PerfectScrollbar(this.refs.mainPanel);\n      }\n\n      window.addEventListener(\"resize\", this.resizeFunction);\n      this.loadUserProfile();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.location.pathname !== e.location.pathname) {\n        this.refs.mainPanel.scrollTop = 0;\n\n        if (this.state.mobileOpen) {\n          this.setState({\n            mobileOpen: false\n          });\n        }\n      } //this.loadUserProfile();\n\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.resizeFunction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          rest = _objectWithoutProperties(_this$props, [\"classes\"]);\n\n      return React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.mainPanel,\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({\n        routes: dashboardRoutes,\n        handleDrawerToggle: this.handleDrawerToggle,\n        handleLogout: this.props.handleLogout\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), this.getRoute() ? React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, switchRoutes)) : React.createElement(\"div\", {\n        className: classes.map,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, switchRoutes), this.getRoute() ? React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(dashboardStyle)(Dashboard);","map":{"version":3,"sources":["/Users/geekh04/workspace/bcp-transactionMDP-client/src/views/Dashboard/Dashboard.jsx"],"names":["Dashboard","handleDrawerToggle","setState","mobileOpen","state","props","location","pathname","window","innerWidth","navigator","platform","indexOf","ps","PerfectScrollbar","refs","mainPanel","addEventListener","resizeFunction","loadUserProfile","e","history","scrollTop","removeEventListener","classes","rest","wrapper","dashboardRoutes","handleLogout","getRoute","content","container","switchRoutes","map","React","Component","propTypes","PropTypes","object","isRequired","withStyles","dashboardStyle"],"mappings":";;;;;;;;IACMA,S;;;;;;;;;;;;;;;;;;UAEJC,kB,GAAqB,YAAM;AACzB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAA1B,OAAd;AACD,K;;;;;;;+BACU;AACT,aAAO,KAAKE,KAAL,CAAWC,QAAX,CAAoBC,QAApB,KAAiC,OAAxC;AACD;;;qCACgB;AACf,UAAIC,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,aAAKP,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF;;;wCACmB;AAClB,UAAIO,SAAS,CAACC,QAAV,CAAmBC,OAAnB,CAA2B,KAA3B,IAAoC,CAAC,CAAzC,EAA4C;AAC1C,YAAMC,EAAE,GAAG,IAAIC,gBAAJ,CAAqB,KAAKC,IAAL,CAAUC,SAA/B,CAAX;AACD;;AACDR,MAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,cAAvC;AACE,WAAKC,eAAL;AACH;;;uCACkBC,C,EAAG;AACpB,UAAIA,CAAC,CAACC,OAAF,CAAUf,QAAV,CAAmBC,QAAnB,KAAgCa,CAAC,CAACd,QAAF,CAAWC,QAA/C,EAAyD;AACvD,aAAKQ,IAAL,CAAUC,SAAV,CAAoBM,SAApB,GAAgC,CAAhC;;AACA,YAAI,KAAKlB,KAAL,CAAWD,UAAf,EAA2B;AACzB,eAAKD,QAAL,CAAc;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD;AACF,OANmB,CAOlB;;AACH;;;2CACsB;AACrBK,MAAAA,MAAM,CAACe,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,cAA1C;AACD;;;6BAEQ;AAAA,wBACqB,KAAKb,KAD1B;AAAA,UACCmB,OADD,eACCA,OADD;AAAA,UACaC,IADb;;AAGP,aACE;AAAK,QAAA,SAAS,EAAED,OAAO,CAACE,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACR,SAAxB;AAAmC,QAAA,GAAG,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,MAAM,EAAEW,eADZ;AAEI,QAAA,kBAAkB,EAAE,KAAK1B,kBAF7B;AAGI,QAAA,YAAY,EAAE,KAAKI,KAAL,CAAWuB;AAH7B,SAIQH,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAQG,KAAKI,QAAL,KACC;AAAK,QAAA,SAAS,EAAEL,OAAO,CAACM,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACO,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCC,YAApC,CADF,CADD,GAKC;AAAK,QAAA,SAAS,EAAER,OAAO,CAACS,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BD,YAA9B,CAbJ,EAeG,KAAKH,QAAL,KAAkB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,GAA+B,IAflC,CAFF,CADF;AAsBD;;;;EA1DqBK,KAAK,CAACC,S;;AA6D9BnC,SAAS,CAACoC,SAAV,GAAsB;AACpBZ,EAAAA,OAAO,EAAEa,SAAS,CAACC,MAAV,CAAiBC;AADN,CAAtB;AAIA,eAAeC,UAAU,CAACC,cAAD,CAAV,CAA2BzC,SAA3B,CAAf","sourcesContent":["\nclass Dashboard extends React.Component {\n\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n  getRoute() {\n    return this.props.location.pathname !== \"/maps\";\n  }\n  resizeFunction() {\n    if (window.innerWidth >= 960) {\n      this.setState({ mobileOpen: false });\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      const ps = new PerfectScrollbar(this.refs.mainPanel);\n    }\n    window.addEventListener(\"resize\", this.resizeFunction);\n      this.loadUserProfile();\n  }\n  componentDidUpdate(e) {\n    if (e.history.location.pathname !== e.location.pathname) {\n      this.refs.mainPanel.scrollTop = 0;\n      if (this.state.mobileOpen) {\n        this.setState({ mobileOpen: false });\n      }\n    }\n      //this.loadUserProfile();\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeFunction);\n  }\n\n  render() {\n    const { classes, ...rest} = this.props;\n\n    return (\n      <div className={classes.wrapper}>\n\n        <div className={classes.mainPanel} ref=\"mainPanel\">\n            <Header\n                routes={dashboardRoutes}\n                handleDrawerToggle={this.handleDrawerToggle}\n                handleLogout={this.props.handleLogout}\n                {...rest}\n            />\n          {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n          {this.getRoute() ? (\n            <div className={classes.content}>\n              <div className={classes.container}>{switchRoutes}</div>\n            </div>\n          ) : (\n            <div className={classes.map}>{switchRoutes}</div>\n          )}\n          {this.getRoute() ? <Footer /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(dashboardStyle)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}