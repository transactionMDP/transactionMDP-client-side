{"ast":null,"code":"import _defineProperty from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/views/User/Transfer/RegisterForm.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from '../../../util/APIUtils'; // reactstrap components\n\nimport { Card, CardHeader, CardBody, Row, Col, FormGroup, Label, Button, Breadcrumb, BreadcrumbItem, InputGroupAddon, InputGroupText, InputGroup, Input } from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../../../redux/actions\"; // Sweet alert\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport classnames from \"classnames\";\nvar MySwal = withReactContent(Swal);\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\nvar RegisterForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegisterForm, _React$Component);\n\n  // Constructeur\n  function RegisterForm(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterForm).call(this, props));\n    _this.state = {\n      isLoading: true,\n      name: \"\",\n      registrationNumber: \"\",\n      // matricule\n      email: \"\",\n      password: \"\",\n      role: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RegisterForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} //this.props.getCurrentUser();\n    //const id = this.props.match.params.id;\n    // Cette fonction permet d'affecter les infos saisies à la variable convenable\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var id = target.id;\n      this.setState(_defineProperty({}, id, value));\n    } // Cette fonction se déclenche lorsque l'utilisateur clique sur \"virer\"\n    // Elle permet d'envoyer les données de l'opération au serveur\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault(); // Récupérer les données du virement\n\n      var registerData = {\n        /*transactionType: this.props.currenUser.role===\"ROLE_AGENT\" ? \"agent\"\n                         : this.props.currentUser.role===\"ROLE_CTN\" ? \"ctn\"\n                         : this.props.currentUser.role===\"ROLE_CTRL\"? \"ctrl\":\"\",*/\n        name: this.state.name,\n        registrationNumber: this.state.registrationNumber,\n        email: this.state.email,\n        password: this.state.password,\n        role: this.state.role\n      }; // Envoyer les données de l'opération au serveur\n\n      console.log(registerData);\n      signup(registerData).then(function (response) {\n        //console.log(response);\n        // affichee un message de succès\n\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Inscription effectuée avec succès',\n          showConfirmButton: false,\n          timer: 1500\n        }); // redirection vers un tableau de transactions.\n        //this.props.history.push(\"/user/lsttransfers\");\n      }).catch(function (error) {\n        if (error.status === 401) {\n          // affichee un message d’erreur\n          MySwal.fire({\n            type: 'error',\n            title: 'Vous avez été déconnecté. Veuillez vous connecter pour éffectuer cette opération.',\n            showConfirmButton: false,\n            timer: 1500\n          }); // redirection vers la page d'authentification.\n\n          _this2.props.history.push('/login');\n        } else {\n          // affichee un message d’erreur\n          MySwal.fire({\n            type: 'warning',\n            title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var isLoading = this.state.isLoading;\n      /*if (isLoading) {\n          return <LoadingIndicator/>;\n      }\n       if (this.state.notFound || !this.props.currentUser) {\n          return <NotFound/>;\n      }*/\n\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Virement\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-2 col-form-label\",\n        for: \"registrationNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Matricule\"), React.createElement(FormGroup, {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"registrationNumber\",\n        placeholder: \"Matricule\",\n        value: this.state.registrationNumber,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-2 col-form-label\",\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Email\"), React.createElement(FormGroup, {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"email\",\n        placeholder: \"Email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-email-85\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-2 col-form-label\",\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Mot de passe\"), React.createElement(FormGroup, {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Mot de passe\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-lock-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })))), React.createElement(InputGroup, {\n        className: classnames({\n          \"input-group-focus\": this.state.passwordFocus\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-lock-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        id: \"password\",\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        onFocus: function onFocus(e) {\n          return _this3.setState({\n            passwordFocus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this3.setState({\n            passwordFocus: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-2 col-form-label\",\n        for: \"role\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Role\"), this.state.role, React.createElement(FormGroup, {\n        className: \"checkbox-radios col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-check-radio form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"role\",\n        id: \"role\",\n        onChange: this.handleChange,\n        value: \"ROLE_AGENT\",\n        className: \"form-check-input\",\n        defaultChecked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), \"Agent\", React.createElement(\"span\", {\n        className: \"form-check-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-check-radio form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"role\",\n        id: \"role\",\n        onChange: this.handleChange,\n        value: \"ROLE_CTRL\",\n        className: \"form-check-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), \"Agent controleur\", React.createElement(\"span\", {\n        className: \"form-check-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-check-radio form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"role\",\n        id: \"role\",\n        onChange: this.handleChange,\n        value: \"ROLE_CTN\",\n        className: \"form-check-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), \"Personnel du CTN\", React.createElement(\"span\", {\n        className: \"form-check-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Enregistrer\"))))), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return RegisterForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentUser: getCurrentUser\n})(RegisterForm);","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/views/User/Transfer/RegisterForm.jsx"],"names":["React","Link","signup","Card","CardHeader","CardBody","Row","Col","FormGroup","Label","Button","Breadcrumb","BreadcrumbItem","InputGroupAddon","InputGroupText","InputGroup","Input","NotFound","LoadingIndicator","connect","getCurrentUser","Swal","withReactContent","classnames","MySwal","RegisterForm","props","state","isLoading","name","registrationNumber","email","password","role","handleChange","bind","handleSubmit","event","target","value","id","setState","preventDefault","registerData","console","log","then","response","fire","type","title","showConfirmButton","timer","catch","error","status","history","push","message","passwordFocus","e","Component","mapStateToProps","currentUser"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {signup} from '../../../util/APIUtils';\n\n// reactstrap components\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    Row,\n    Col,\n    FormGroup,\n    Label,\n    Button,\n    Breadcrumb,\n    BreadcrumbItem,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Input\n} from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\n\nimport {connect} from \"react-redux\";\nimport {getCurrentUser} from \"../../../redux/actions\";\n\n// Sweet alert\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport classnames from \"classnames\";\n\nconst MySwal = withReactContent(Swal);\n\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\nclass RegisterForm extends React.Component {\n    // Constructeur\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            name: \"\",\n            registrationNumber: \"\",// matricule\n            email: \"\",\n            password: \"\",\n            role: \"\"\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        //this.props.getCurrentUser();\n        //const id = this.props.match.params.id;\n    }\n\n    // Cette fonction permet d'affecter les infos saisies à la variable convenable\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const id = target.id;\n\n        this.setState({\n            [id]: value\n        });\n    }\n\n    // Cette fonction se déclenche lorsque l'utilisateur clique sur \"virer\"\n    // Elle permet d'envoyer les données de l'opération au serveur\n    handleSubmit(event) {\n        event.preventDefault();\n\n        // Récupérer les données du virement\n        const registerData = {\n            /*transactionType: this.props.currenUser.role===\"ROLE_AGENT\" ? \"agent\"\n                             : this.props.currentUser.role===\"ROLE_CTN\" ? \"ctn\"\n                             : this.props.currentUser.role===\"ROLE_CTRL\"? \"ctrl\":\"\",*/\n            name: this.state.name,\n            registrationNumber: this.state.registrationNumber,\n            email: this.state.email,\n            password: this.state.password,\n            role: this.state.role\n        };\n\n        // Envoyer les données de l'opération au serveur\n        console.log(registerData);\n        signup(registerData)\n            .then(response => {\n                //console.log(response);\n                // affichee un message de succès\n                /*return */\n                MySwal.fire({\n                    type: 'success',\n                    title: 'Inscription effectuée avec succès',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                // redirection vers un tableau de transactions.\n                //this.props.history.push(\"/user/lsttransfers\");\n            }).catch(error => {\n            if (error.status === 401) {\n                // affichee un message d’erreur\n                MySwal.fire({\n                    type: 'error',\n                    title: 'Vous avez été déconnecté. Veuillez vous connecter pour éffectuer cette opération.',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                // redirection vers la page d'authentification.\n                this.props.history.push('/login');\n            } else {\n                // affichee un message d’erreur\n                MySwal.fire({\n                    type: 'warning',\n                    title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n            }\n        });\n    }\n\n\n    render() {\n        const {isLoading} = this.state;\n        /*if (isLoading) {\n            return <LoadingIndicator/>;\n        }\n\n        if (this.state.notFound || !this.props.currentUser) {\n            return <NotFound/>;\n        }*/\n\n        /*if(this.state.serverError) {\n          return <ServerError />;\n        }*/\n        return (\n            <>\n                <div className=\"content\">\n                    <Row>\n                        <Col md=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <h4 className=\"title\">Virement</h4>\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        <Col md=\"2\"/>\n                                        <Col md=\"8\">\n                                            {/* Inscription */}\n                                            <form onSubmit={this.handleSubmit} className=\"form-horizontal\">\n                                                <div className=\"form-row\">\n                                                    <Label className={\"col-md-2 col-form-label\"} for=\"registrationNumber\">Matricule</Label>\n                                                    <FormGroup className=\"col-md-10\">\n                                                        <InputGroup>\n                                                            <Input\n                                                                type=\"text\"\n                                                                id=\"registrationNumber\"\n                                                                placeholder=\"Matricule\"\n                                                                value={this.state.registrationNumber}\n                                                                onChange={this.handleChange}\n                                                            />\n                                                            <InputGroupAddon addonType=\"append\">\n                                                                <InputGroupText><i className=\"tim-icons icon-single-02\" ></i></InputGroupText>\n                                                            </InputGroupAddon>\n                                                        </InputGroup>\n                                                    </FormGroup>\n                                                </div>\n\n                                                <div className=\"form-row\">\n                                                    <Label className={\"col-md-2 col-form-label\"} for=\"email\">Email</Label>\n                                                    <FormGroup className=\"col-md-10\">\n                                                        <InputGroup>\n                                                            <Input\n                                                                type=\"text\"\n                                                                id=\"email\"\n                                                                placeholder=\"Email\"\n                                                                value={this.state.email}\n                                                                onChange={this.handleChange}\n                                                            />\n                                                            <InputGroupAddon addonType=\"append\">\n                                                                <InputGroupText><i className=\"tim-icons icon-email-85\"/></InputGroupText>\n                                                            </InputGroupAddon>\n                                                        </InputGroup>\n                                                    </FormGroup>\n                                                </div>\n\n                                                <div className=\"form-row\">\n                                                    <Label className={\"col-md-2 col-form-label\"} for=\"password\">Mot de passe</Label>\n                                                    <FormGroup className=\"col-md-10\">\n                                                        <InputGroup>\n                                                            <Input\n                                                                type=\"password\"\n                                                                id=\"password\"\n                                                                placeholder=\"Mot de passe\"\n                                                                value={this.state.password}\n                                                                onChange={this.handleChange}\n                                                            />\n                                                            <InputGroupAddon addonType=\"append\">\n                                                                <InputGroupText><i className=\"tim-icons icon-lock-circle\"/></InputGroupText>\n                                                            </InputGroupAddon>\n                                                        </InputGroup>\n\n                                                        <InputGroup\n                                                            className={classnames({\n                                                                \"input-group-focus\": this.state.passwordFocus\n                                                            })}\n                                                        >\n                                                            <InputGroupAddon addonType=\"prepend\">\n                                                                <InputGroupText>\n                                                                    <i className=\"tim-icons icon-lock-circle\"/>\n                                                                </InputGroupText>\n                                                            </InputGroupAddon>\n                                                            <Input\n                                                                id=\"password\"\n                                                                placeholder=\"Password\"\n                                                                type=\"password\"\n                                                                value={this.state.password}\n                                                                onChange={this.handleChange}\n                                                                onFocus={e => this.setState({passwordFocus: true})}\n                                                                onBlur={e => this.setState({passwordFocus: false})}\n                                                            />\n                                                        </InputGroup>\n                                                    </FormGroup>\n                                                </div>\n\n                                                <div className=\"form-row\">\n                                                    <Label className={\"col-md-2 col-form-label\"} for=\"role\">Role</Label>\n                                                    {this.state.role}\n                                                    <FormGroup className=\"checkbox-radios col-sm-5\">\n                                                        <div className=\"form-check-radio form-check\">\n                                                            <Label className=\"form-check-label\">\n                                                                <Input type=\"radio\" name=\"role\" id=\"role\" onChange={this.handleChange} value=\"ROLE_AGENT\" className=\"form-check-input\" defaultChecked/>\n                                                                Agent\n                                                                <span className=\"form-check-sign\"></span>\n                                                            </Label>\n                                                        </div>\n                                                        <div className=\"form-check-radio form-check\">\n                                                            <Label className=\"form-check-label\">\n                                                                <Input type=\"radio\" name=\"role\" id=\"role\" onChange={this.handleChange} value=\"ROLE_CTRL\" className=\"form-check-input\" />\n                                                                Agent controleur\n                                                                <span className=\"form-check-sign\"></span>\n                                                            </Label>\n                                                        </div>\n                                                        <div className=\"form-check-radio form-check\">\n                                                            <Label className=\"form-check-label\">\n                                                                <Input type=\"radio\" name=\"role\" id=\"role\" onChange={this.handleChange} value=\"ROLE_CTN\" className=\"form-check-input\" />\n                                                                Personnel du CTN\n                                                                <span className=\"form-check-sign\"></span>\n                                                            </Label>\n                                                        </div>\n                                                    </FormGroup>\n                                                </div>\n\n\n                                                <div className=\"form-row\">\n                                                    <Label className={\"col-md-2 col-form-label\"} />\n                                                    <FormGroup className=\"col-md-10\">\n                                                        <Button color=\"primary\" type=\"submit\">\n                                                            Enregistrer\n                                                        </Button>\n                                                    </FormGroup>\n                                                </div>\n\n                                            </form>\n                                        </Col>\n                                        <Col md=\"2\"/>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    };\n};\n\nexport default connect(mapStateToProps, {getCurrentUser})(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}