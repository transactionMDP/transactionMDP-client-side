{"ast":null,"code":"import _defineProperty from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransferIntraAgency.jsx\";\nimport React from \"react\";\nimport { getAccountCurrency, createTransfer, getCommissionData } from '../../../util/APIUtils'; // react plugin used to create datetimepicker\n\nimport ReactDatetime from \"react-datetime\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, InputGroupAddon, InputGroupText, InputGroup, Row, Col, FormGroup, Input, Label, Button } from \"reactstrap\"; // Sweet alert components\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nvar MySwal = withReactContent(Swal);\n/** La page du virement\n * Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement\n * */\n\nvar Forms =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forms, _React$Component);\n\n  // Constructeur\n  function Forms(props) {\n    var _this;\n\n    _classCallCheck(this, Forms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Forms).call(this, props));\n\n    _this.loadAccountCurrency = function (event) {\n      var number = event.target.value;\n      var id = event.target.id;\n\n      if (number.length === 8) {\n        var idCurrency = id === \"principalAccount\" ? \"principalCurrency\" : \"beneficiaryCurrency\";\n        var promise;\n        promise = getAccountCurrency(number);\n\n        if (!promise) {\n          return;\n        }\n\n        _this.setState({\n          isLoadingCurrency: true\n        }); // Initialisation de l'alert\n\n\n        var Toast = MySwal.mixin({\n          toast: true,\n          position: 'center',\n          showConfirmButton: false,\n          timer: 2000\n        });\n        promise.then(function (response) {\n          if (response.state === \"active\") {\n            var _this$setState;\n\n            _this.setState((_this$setState = {}, _defineProperty(_this$setState, idCurrency, response.currency), _defineProperty(_this$setState, \"isLoadingCurrency\", false), _this$setState));\n          } else {\n            // afficher un message d’erreur\n            Toast.fire({\n              type: 'error',\n              title: 'Compte en opposition. Vous pouvez pas  effectuer cette opération!'\n            });\n          }\n        }).catch(function (error) {\n          _this.setState({\n            isLoadingCurrency: false\n          });\n        });\n      }\n    };\n\n    _this.loadCommissionData = function (event) {\n      event.preventDefault();\n      var commissionData = {\n        accountN1: _this.state.principalAccount,\n        accountN2: _this.state.beneficiaryAccount,\n        amount: _this.state.totalAmount\n      };\n      var promise;\n      promise = getCommissionData(commissionData);\n\n      if (!promise) {\n        return;\n      }\n\n      _this.setState({\n        isLoadingCurrency: true\n      });\n\n      promise.then(function (response) {\n        _this.setState({\n          applyedRate: response.applyedRate,\n          commissionAmount: response.commissionAmount,\n          commissionTVA: response.commissionTVA,\n          isLoadingCurrency: false\n        });\n\n        _this.getTotalAmount();\n      }).catch(function (error) {\n        _this.setState({\n          isLoadingCurrency: false\n        });\n      });\n    };\n\n    _this.getTotalAmount = function () {\n      if (_this.state.applyCommission) {\n        _this.setState({\n          totalAmount:\n          /*parseFloat(this.state.transactionAmount)+*/\n          _this.state.commissionAmount + _this.state.commissionTVA\n        }); //return /*this.totalAmount;//=*/parseFloat(this.state.transactionAmount)+this.state.commissionAmount+this.state.commissionTVA;\n\n      } else {\n        _this.setState({\n          totalAmount: _this.state.transactionAmount\n        }); //return this.state.transactionAmount;\n\n      }\n    };\n\n    _this.state = {\n      focused: \"\",\n      transactionType: \"agence\",\n      // Type de transaction\n      principalAccount: \"\",\n      // Compte donneur d’ordre\n      principalCurrency: \"NaN\",\n      // Devise Compte donneur ordre\n      beneficiaryAccount: \"\",\n      // Compte bénéficiaire\n      beneficiaryCurrency: \"NaN2\",\n      // Devise Compte bénéficiaire\n      transactionAmount: 0,\n      // Montant de l’opération\n      transactionCurrency: \"NaN\",\n      // Devise de l’opération: doit être égale à la devise du compte à débiter ou celle du compte à créditer\n      transferReason: \"\",\n      // Motif de virement\n      executionDate: new Date(),\n      // Date exécution : par défaut c'est la date courante\n\n      /*DBValueDate: \"\",                // Date valeur DB: Par défaut = J-1 (paramétrable par catégorie de cpt)\n      CRValueDate: \"\",*/\n      // Date valeur CR: Par défaut = J+1 (paramétrable par catégorie de cpt)\n      //commissionCode: 0,              // Code Commission appliquée: Non modifiable\n      applyedRate: 0,\n      // taux appliqué: Non modifiable\n      commissionAmount: 1,\n      // Montant commission: Non modifiable\n      applyCommission: true,\n      // Appliquer commission: OUI/NON\n      commissionTVA: 3,\n      // TVA sur commission: Calculé automatiquement par un taux paramétrable\n      chargeType: \"\",\n      // Type de charge : = ‘OUR’ par défaut La charge est à appliquer sur le compte à débiter\n      totalAmount: 0,\n      // Le montant total à débiter\n\n      /* Saisie uniquement pour les  transferts en devise */\n      transferNature: \"\",\n      // Nature de transfert : Saisie uniquement pour MAD to MAC ou MAD to Autre devise\n      authorizationNumber: \"\",\n      // Numéro d’autorisation: Saisie uniquement pour MAD to MAC ou MAD to Autre devise\n      authorizationValidity: \"\",\n      // Validité de l’autorisation: Saisie uniquement pour MAD to MAC ou MAD to Autre devise\n      exchangeRate: \"\",\n      // Cours de change: Non modifiable\n      tradingTicket: \"\",\n      // La référence du ticket de négociation: Saisie uniquement pour les  clients de la salle de marché ou pour les transactions de très grand montant\n      largeAmount: 4000,\n      // *****************************************\n      account: [],\n      isLoadingCurrency: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.handleChangeCommission = this.handleChangeCommission.bind(this);\n\n    _this.handleChangeCheckbox = _this.handleChangeCheckbox.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadCommissionData = _this.loadCommissionData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadAccountCurrency = _this.loadAccountCurrency.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTotalAmount = _this.getTotalAmount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Cette fonction permet d'affecter les infos saisies à la variable convenable\n\n\n  _createClass(Forms, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var id = target.id;\n      this.setState(_defineProperty({}, id, value));\n    }\n    /*handleChangeCommission(event) {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const id = target.id;\n       this.setState({\n        [id]: value\n      });\n       console.log(this.state.transactionAmount);\n       //this.getTotalAmount();\n      if(this.state.applyCommission){\n        this.setState({\n          totalAmount: /*parseFloat(this.state.transactionAmount)+*this.state.commissionAmount+this.state.commissionTVA\n        });\n        //return /*this.totalAmount;//=*parseFloat(this.state.transactionAmount)+this.state.commissionAmount+this.state.commissionTVA;\n      }\n      else{\n        this.setState({\n          totalAmount: this.state.transactionAmount\n        });\n        //return this.state.transactionAmount;\n      }\n    }*/\n    // Cette fonction se déclenche lorsque l'utilisateur clique sur le checkbox \"appliquer commission\"\n    // Elle permet d'affecter une valeur à la variable \"applyCommission\" avec la mise à jour du montant total\n    // - true : pour appliquer la commission\n    // - false: sinon\n\n  }, {\n    key: \"handleChangeCheckbox\",\n    value: function handleChangeCheckbox(event) {\n      var target = event.target;\n      var value = target.checked;\n      var id = target.id;\n      this.setState(_defineProperty({}, id, value)); // Appler a la fonction getTotalAmount pour la mise à jour du montant total\n      //this.getTotalAmount();\n\n      if (value) {\n        this.setState({\n          totalAmount:\n          /*parseFloat(this.state.transactionAmount)+*/\n          this.state.commissionAmount + this.state.commissionTVA\n        }); //return /*this.totalAmount;//=*/parseFloat(this.state.transactionAmount)+this.state.commissionAmount+this.state.commissionTVA;\n      } else {\n        this.setState({\n          totalAmount: this.state.transactionAmount\n        }); //return this.state.transactionAmount;\n      }\n    } // Cette fonction se déclenche lorsque l'utilisateur clique sur \"virer\"\n    // Elle permet d'envoyer les données de l'opération au serveur\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault(); // Récupérer les données du virement\n\n      var transferData = {\n        transactionType: this.state.transactionType,\n        principalAccount: this.state.principalAccount,\n        principalCurrency: this.state.principalCurrency,\n        beneficiaryAccount: this.state.beneficiaryAccount,\n        beneficiaryCurrency: this.state.beneficiaryCurrency,\n        transactionAmount: this.state.transactionAmount,\n        transactionCurrency: this.state.transactionCurrency,\n        transferReason: this.state.transferReason,\n        executionDate: this.state.executionDate,\n        transferNature: this.state.transferNature,\n        authorizationNumber: this.state.authorizationNumber,\n        authorizationValidity: this.state.authorizationValidity,\n        //commissionCode: this.state.commissionCode,\n        applyedRate: this.state.applyedRate,\n        commissionAmount: this.state.commissionAmount,\n        applyCommission: this.state.applyCommission,\n        commissionTVA: this.state.commissionTVA,\n        chargeType: this.state.chargeType,\n        exchangeRate: this.state.exchangeRate,\n        tradingTicket: this.state.tradingTicket,\n        totalAmount: this.state.totalAmount\n      }; // Envoyer les données de l'opération au serveur\n\n      createTransfer(transferData).then(function (response) {\n        // affichee un message de succès\n\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Virement effectué avec succès',\n          showConfirmButton: false,\n          timer: 1500\n        }); // redirection vers un tableau de transactions.\n\n        _this2.props.history.push(\"/user/lsttransfers\");\n      }).catch(function (error) {\n        if (error.status === 401) {\n          // affichee un message d’erreur\n          MySwal.fire({\n            type: 'error',\n            title: 'Vous avez été déconnecté. Veuillez vous connecter pour éffectuer cette opération.',\n            showConfirmButton: false,\n            timer: 1500\n          }); // redirection vers la page d'authentification.\n\n          _this2.props.history.push('/login');\n        } else {\n          // affichee un message d’erreur\n          MySwal.fire({\n            type: 'warning',\n            title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      });\n    } // Cette fonction se déclenche lorsque l'utilisateur saisit le numero d'un compte\n    // Elle permet de récupérer le devise du compte sinon elle retourne un message d'erreur au cas \n\n  }, {\n    key: \"getTransactionCurrency\",\n    value: function getTransactionCurrency() {\n      if (this.state.principalCurrency === this.state.beneficiaryCurrency) {\n        this.setState({\n          transactionCurrency: this.state.principalCurrency\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"principalAccount\",\n        placeholder: \"D\\xE9biteur\",\n        value: this.state.principalAccount,\n        onChange: function onChange(event) {\n          _this3.handleChange(event);\n\n          _this3.loadAccountCurrency(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, this.state.principalCurrency))))), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"beneficiaryAccount\",\n        placeholder: \"B\\xE9n\\xE9ficiaire\",\n        value: this.state.beneficiaryAccount,\n        onChange: function onChange(event) {\n          _this3.handleChange(event);\n\n          _this3.loadAccountCurrency(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, this.state.beneficiaryCurrency)))))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transactionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"transactionAmount\",\n        placeholder: \"Montant ...\",\n        value: this.state.transactionAmount,\n        onChange: function onChange(event) {\n          _this3.handleChange(event);\n\n          _this3.getTransactionCurrency();\n\n          _this3.loadCommissionData(event);\n          /*;this.getTotalAmount()*/\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, this.state.principalCurrency === this.state.beneficiaryCurrency ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, this.state.transactionCurrency) : React.createElement(\"select\", {\n        name: \"select\",\n        className: \"form-control1\",\n        id: \"transactionCurrency\",\n        value: this.state.transactionCurrency,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, this.state.principalCurrency), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, this.state.beneficiaryCurrency)))))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferReason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"Motif\"), React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Motif ...\",\n        id: \"transferReason\",\n        value: this.state.transferReason,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"executionDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"Date d'execution\"), React.createElement(ReactDatetime, {\n        id: \"executionDate\",\n        inputProps: {\n          className: \"form-control\",\n          placeholder: \"Date Picker Here\"\n        },\n        value: this.state.executionDate,\n        defaultValue: new Date(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }))),\n      /********************* Echange **************/\n      this.state.principalCurrency === \"MAD\" && this.state.beneficiaryCurrency !== \"MAD\" ? React.createElement(React.Fragment, null, this.state.transactionAmount > this.state.largeAmount ? React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"tradingTicket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, \"Ticket de n\\xE9gociation\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"tradingTicket\",\n        placeholder: \"ticket ...\",\n        className: \"tim-icons\",\n        value: this.state.tradingTicket,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      })) : null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"transferNature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"Nature de transfert\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"transferNature\",\n        value: this.state.transferNature,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, \"2\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"N\\xB0 d'autorisation\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"authorizationNumber\",\n        placeholder: \"Code ...\",\n        value: this.state.authorizationNumber,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"authorizationValidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, \"Validit\\xE9 de l'autorisation\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"authorizationValidity\",\n        placeholder: \"???\",\n        value: this.state.authorizationValidity,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exchangeRate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"Cours de change\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"exchangeRate\",\n        placeholder: \"...\",\n        value: this.state.exchangeRate,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      })))) : null\n      /********************* Commission **************/\n      , React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"chargeType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"Type de charge\"), React.createElement(Input, {\n        type: \"select\",\n        id: \"chargeType\",\n        name: \"select\",\n        value: this.state.chargeType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, \"OUR\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, \"2\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"Taux applique\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, this.state.applyedRate + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, \"Montant commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, this.state.commissionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"commissionTVA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \"TVA sur commission\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, this.state.commissionTVA + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      })))), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"totalAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \"Montant total\"), React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, this.state.totalAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, this.state.transactionCurrency))), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        id: \"applyCommission\",\n        onChange: this.handleChangeCheckbox,\n        checked: this.state.applyCommission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }), \"Appliquer commission\", React.createElement(\"span\", {\n        className: \"form-check-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"reset\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, \"Annuler\"), React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, \"Virer\")))));\n    }\n  }]);\n\n  return Forms;\n}(React.Component);\n\n;\n\nvar TransferIntraAgency =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TransferIntraAgency, _React$Component2);\n\n  function TransferIntraAgency() {\n    _classCallCheck(this, TransferIntraAgency);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TransferIntraAgency).apply(this, arguments));\n  }\n\n  _createClass(TransferIntraAgency, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \"Saisie du virement\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(Forms, {\n        notify: function notify(place, type, message) {\n          return _this4.props.notify(place, type, message);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return TransferIntraAgency;\n}(React.Component);\n\nexport default TransferIntraAgency;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransferIntraAgency.jsx"],"names":["React","getAccountCurrency","createTransfer","getCommissionData","ReactDatetime","Card","CardHeader","CardBody","InputGroupAddon","InputGroupText","InputGroup","Row","Col","FormGroup","Input","Label","Button","Swal","withReactContent","MySwal","Forms","props","loadAccountCurrency","event","number","target","value","id","length","idCurrency","promise","setState","isLoadingCurrency","Toast","mixin","toast","position","showConfirmButton","timer","then","response","state","currency","fire","type","title","catch","error","loadCommissionData","preventDefault","commissionData","accountN1","principalAccount","accountN2","beneficiaryAccount","amount","totalAmount","applyedRate","commissionAmount","commissionTVA","getTotalAmount","applyCommission","transactionAmount","focused","transactionType","principalCurrency","beneficiaryCurrency","transactionCurrency","transferReason","executionDate","Date","chargeType","transferNature","authorizationNumber","authorizationValidity","exchangeRate","tradingTicket","largeAmount","account","handleChange","bind","handleSubmit","handleChangeCheckbox","checked","transferData","history","push","status","message","getTransactionCurrency","className","placeholder","Component","TransferIntraAgency","place","notify"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  getAccountCurrency, createTransfer, getCommissionData\n} from '../../../util/APIUtils';\n// react plugin used to create datetimepicker\nimport ReactDatetime from \"react-datetime\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\";\n// Sweet alert components\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst MySwal = withReactContent(Swal);\n\n/** La page du virement\n * Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement\n * */\n\nclass Forms extends React.Component {\n  // Constructeur\n  constructor(props) {\n    super(props);\n    this.state = {\n      focused: \"\",\n      transactionType: \"agence\",        // Type de transaction\n      principalAccount: \"\",             // Compte donneur d’ordre\n      principalCurrency: \"NaN\",         // Devise Compte donneur ordre\n      beneficiaryAccount: \"\",           // Compte bénéficiaire\n      beneficiaryCurrency: \"NaN2\",      // Devise Compte bénéficiaire\n      transactionAmount: 0,             // Montant de l’opération\n      transactionCurrency: \"NaN\",       // Devise de l’opération: doit être égale à la devise du compte à débiter ou celle du compte à créditer\n      transferReason: \"\",               // Motif de virement\n      executionDate: new Date(),        // Date exécution : par défaut c'est la date courante\n      /*DBValueDate: \"\",                // Date valeur DB: Par défaut = J-1 (paramétrable par catégorie de cpt)\n      CRValueDate: \"\",*/                // Date valeur CR: Par défaut = J+1 (paramétrable par catégorie de cpt)\n      //commissionCode: 0,              // Code Commission appliquée: Non modifiable\n      applyedRate:0,                    // taux appliqué: Non modifiable\n      commissionAmount: 1,              // Montant commission: Non modifiable\n      applyCommission: true,            // Appliquer commission: OUI/NON\n      commissionTVA: 3,                 // TVA sur commission: Calculé automatiquement par un taux paramétrable\n      chargeType: \"\",                   // Type de charge : = ‘OUR’ par défaut La charge est à appliquer sur le compte à débiter\n      totalAmount:0,                    // Le montant total à débiter\n      /* Saisie uniquement pour les  transferts en devise */\n      transferNature: \"\",               // Nature de transfert : Saisie uniquement pour MAD to MAC ou MAD to Autre devise\n      authorizationNumber: \"\",          // Numéro d’autorisation: Saisie uniquement pour MAD to MAC ou MAD to Autre devise\n      authorizationValidity: \"\",        // Validité de l’autorisation: Saisie uniquement pour MAD to MAC ou MAD to Autre devise\n      exchangeRate: \"\",                 // Cours de change: Non modifiable\n      tradingTicket: \"\",                // La référence du ticket de négociation: Saisie uniquement pour les  clients de la salle de marché ou pour les transactions de très grand montant\n      largeAmount: 4000,                // *****************************************\n\n      account: [],\n      isLoadingCurrency: true\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //this.handleChangeCommission = this.handleChangeCommission.bind(this);\n    this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this);\n    this.loadCommissionData = this.loadCommissionData.bind(this);\n    this.loadAccountCurrency = this.loadAccountCurrency.bind(this);\n    this.getTotalAmount = this.getTotalAmount.bind(this);\n  }\n\n  // Cette fonction permet d'affecter les infos saisies à la variable convenable\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const id = target.id;\n\n    this.setState({\n      [id]: value\n    });\n  }\n\n  /*handleChangeCommission(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const id = target.id;\n\n    this.setState({\n      [id]: value\n    });\n\n    console.log(this.state.transactionAmount);\n\n    //this.getTotalAmount();\n    if(this.state.applyCommission){\n      this.setState({\n        totalAmount: /*parseFloat(this.state.transactionAmount)+*this.state.commissionAmount+this.state.commissionTVA\n      });\n      //return /*this.totalAmount;//=*parseFloat(this.state.transactionAmount)+this.state.commissionAmount+this.state.commissionTVA;\n    }\n    else{\n      this.setState({\n        totalAmount: this.state.transactionAmount\n      });\n      //return this.state.transactionAmount;\n    }\n  }*/\n\n  // Cette fonction se déclenche lorsque l'utilisateur clique sur le checkbox \"appliquer commission\"\n  // Elle permet d'affecter une valeur à la variable \"applyCommission\" avec la mise à jour du montant total\n  // - true : pour appliquer la commission\n  // - false: sinon\n  handleChangeCheckbox(event) {\n    const target = event.target;\n    const value = target.checked;\n    const id = target.id;\n\n    this.setState({\n      [id]: value\n    });\n\n    // Appler a la fonction getTotalAmount pour la mise à jour du montant total\n    //this.getTotalAmount();\n    if(value){\n      this.setState({\n        totalAmount: /*parseFloat(this.state.transactionAmount)+*/this.state.commissionAmount+this.state.commissionTVA\n      });\n      //return /*this.totalAmount;//=*/parseFloat(this.state.transactionAmount)+this.state.commissionAmount+this.state.commissionTVA;\n    }\n    else{\n      this.setState({\n        totalAmount: this.state.transactionAmount\n      });\n      //return this.state.transactionAmount;\n    }\n  }\n\n  // Cette fonction se déclenche lorsque l'utilisateur clique sur \"virer\"\n  // Elle permet d'envoyer les données de l'opération au serveur\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Récupérer les données du virement\n    const transferData = {\n        transactionType: this.state.transactionType,\n        principalAccount: this.state.principalAccount,\n        principalCurrency: this.state.principalCurrency,\n        beneficiaryAccount: this.state.beneficiaryAccount,\n        beneficiaryCurrency: this.state.beneficiaryCurrency,\n        transactionAmount: this.state.transactionAmount,\n        transactionCurrency: this.state.transactionCurrency,\n        transferReason: this.state.transferReason,\n        executionDate: this.state.executionDate,\n        transferNature: this.state.transferNature,\n        authorizationNumber: this.state.authorizationNumber,\n        authorizationValidity: this.state.authorizationValidity,\n        //commissionCode: this.state.commissionCode,\n        applyedRate: this.state.applyedRate,\n        commissionAmount: this.state.commissionAmount,\n        applyCommission: this.state.applyCommission,\n        commissionTVA: this.state.commissionTVA,\n        chargeType: this.state.chargeType,\n        exchangeRate: this.state.exchangeRate,\n        tradingTicket: this.state.tradingTicket,\n        totalAmount: this.state.totalAmount\n    };\n\n    // Envoyer les données de l'opération au serveur\n    createTransfer(transferData)\n        .then(response => {\n          // affichee un message de succès\n          /*return */MySwal.fire({\n            type: 'success',\n            title: 'Virement effectué avec succès',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          // redirection vers un tableau de transactions.\n          this.props.history.push(\"/user/lsttransfers\");\n        }).catch(error => {\n      if(error.status === 401) {\n        // affichee un message d’erreur\n        MySwal.fire({\n          type: 'error',\n          title: 'Vous avez été déconnecté. Veuillez vous connecter pour éffectuer cette opération.',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        // redirection vers la page d'authentification.\n        this.props.history.push('/login');\n      } else {\n        // affichee un message d’erreur\n        MySwal.fire({\n          type: 'warning',\n          title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n          showConfirmButton: false,\n          timer: 1500\n        })\n      }\n    });\n  }\n\n  // Cette fonction se déclenche lorsque l'utilisateur saisit le numero d'un compte\n  // Elle permet de récupérer le devise du compte sinon elle retourne un message d'erreur au cas \n  loadAccountCurrency = (event) => {\n    const number = event.target.value;\n    const id = event.target.id;\n\n    if(number.length===8){\n      let idCurrency = (id===\"principalAccount\")?(\"principalCurrency\"):(\"beneficiaryCurrency\");\n      let promise;\n\n      promise = getAccountCurrency(number);\n\n      if(!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingCurrency: true\n      });\n\n      // Initialisation de l'alert\n      const Toast = MySwal.mixin({\n        toast: true,\n        position: 'center',\n        showConfirmButton: false,\n        timer: 2000\n      });\n      promise\n          .then(response => {\n            if(response.state===\"active\"){\n              this.setState({\n                [idCurrency]: response.currency,\n                isLoadingCurrency: false\n              })\n            }\n            else{\n              // afficher un message d’erreur\n              Toast.fire({\n                type: 'error',\n                title: 'Compte en opposition. Vous pouvez pas  effectuer cette opération!'\n              });\n            }\n          }).catch(error => {\n        this.setState({\n          isLoadingCurrency: false\n        })\n      });\n    }\n  };\n\n  // Récupérer la commission du virement\n  loadCommissionData = (event) => {\n    event.preventDefault();\n\n    let commissionData = {\n      accountN1 : this.state.principalAccount,\n      accountN2 : this.state.beneficiaryAccount,\n      amount : this.state.totalAmount\n    };\n\n    let promise;\n\n    promise = getCommissionData(commissionData);\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoadingCurrency: true\n    });\n\n    promise\n        .then(response => {\n          this.setState({\n            applyedRate: response.applyedRate,\n            commissionAmount: response.commissionAmount,\n            commissionTVA: response.commissionTVA,\n            isLoadingCurrency: false\n          });\n          this.getTotalAmount();\n        }).catch(error => {\n      this.setState({\n        isLoadingCurrency: false\n      })\n    });\n  };\n\n  getTotalAmount = () =>{\n    if(this.state.applyCommission){\n      this.setState({\n        totalAmount: /*parseFloat(this.state.transactionAmount)+*/this.state.commissionAmount+this.state.commissionTVA\n      });\n      //return /*this.totalAmount;//=*/parseFloat(this.state.transactionAmount)+this.state.commissionAmount+this.state.commissionTVA;\n    }\n    else{\n      this.setState({\n        totalAmount: this.state.transactionAmount\n      });\n      //return this.state.transactionAmount;\n    }\n  };\n\n  getTransactionCurrency(){\n    if(this.state.principalCurrency===this.state.beneficiaryCurrency){\n      this.setState({\n        transactionCurrency: this.state.principalCurrency\n      })\n    }\n  }\n\n  render() {\n    return (\n        <>\n          <Card>\n            <CardBody>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"principalAccount\">N° compte débiteur</Label>\n                    <InputGroup>\n                      <Input\n                          type=\"number\"\n                          id=\"principalAccount\"\n                          placeholder=\"Débiteur\"\n                          value={this.state.principalAccount}\n                          onChange={(event)=>{this.handleChange(event);this.loadAccountCurrency(event)}}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          <p>{this.state.principalCurrency}</p>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-6\">\n                    <Label for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                    <InputGroup>\n                      <Input\n                          type=\"number\"\n                          id=\"beneficiaryAccount\"\n                          placeholder=\"Bénéficiaire\"\n                          value={this.state.beneficiaryAccount}\n                          onChange={(event)=>{this.handleChange(event);this.loadAccountCurrency(event)}}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          <p>{this.state.beneficiaryCurrency}</p>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                </div>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transactionAmount\">Montant</Label>\n                    <InputGroup>\n                      <Input\n                          type=\"number\"\n                          id=\"transactionAmount\"\n                          placeholder=\"Montant ...\"\n                          value={this.state.transactionAmount}\n                          onChange={(event)=>{this.handleChange(event);this.getTransactionCurrency();this.loadCommissionData(event)/*;this.getTotalAmount()*/}}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          {this.state.principalCurrency===this.state.beneficiaryCurrency?\n                              (<p>{this.state.transactionCurrency}</p>):\n                              (<select\n                                  name=\"select\"\n                                  className=\"form-control1\"\n                                  id=\"transactionCurrency\"\n                                  value={this.state.transactionCurrency}\n                                  onChange={this.handleChange}\n                              >\n                                <option>{this.state.principalCurrency}</option>\n                                <option>{this.state.beneficiaryCurrency}</option>\n                              </select>)\n                          }\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"transferReason\">Motif</Label>\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Motif ...\"\n                        id=\"transferReason\"\n                        value={this.state.transferReason}\n                        onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"executionDate\">Date d'execution</Label>\n                    <ReactDatetime\n                        id=\"executionDate\"\n                        inputProps={{\n                          className: \"form-control\",\n                          placeholder: \"Date Picker Here\"\n                        }}\n                        value={this.state.executionDate}\n                        defaultValue={new Date()}\n                    />\n                  </FormGroup>\n                </div>\n                {/********************* Echange **************/\n                  (this.state.principalCurrency===\"MAD\" && this.state.beneficiaryCurrency!==\"MAD\") ?(\n                 <>\n                   {\n                     (this.state.transactionAmount>this.state.largeAmount)?(\n                         <FormGroup>\n                           <Label for=\"tradingTicket\">Ticket de négociation</Label>\n                           <Input\n                               type=\"number\"\n                               id=\"tradingTicket\"\n                               placeholder=\"ticket ...\"\n                               className=\"tim-icons\"\n                               value={this.state.tradingTicket}\n                               onChange={this.handleChange}\n                           />\n                         </FormGroup>\n                     ):null\n                   }\n                   <FormGroup>\n                    <Label for=\"transferNature\">Nature de transfert</Label>\n                    <Input\n                        type=\"select\"\n                        name=\"select\"\n                        id=\"transferNature\"\n                        value={this.state.transferNature}\n                        onChange={this.handleChange}\n                    >\n                      <option>1</option>\n                      <option>2</option>\n                    </Input>\n                  </FormGroup>\n\n                  <div className=\"form-row\">\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"authorizationNumber\">N° d'autorisation</Label>\n                      <Input\n                          type=\"number\"\n                          id=\"authorizationNumber\"\n                          placeholder=\"Code ...\"\n                          value={this.state.authorizationNumber}\n                          onChange={this.handleChange}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-6\">\n                      <Label for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                      <Input\n                          type=\"number\"\n                          id=\"authorizationValidity\"\n                          placeholder=\"???\"\n                          value={this.state.authorizationValidity}\n                          onChange={this.handleChange}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-3\">\n                      <Label for=\"exchangeRate\">Cours de change</Label>\n                      <Input\n                          type=\"number\"\n                          id=\"exchangeRate\"\n                          placeholder=\"...\"\n                          value={this.state.exchangeRate}\n                          disabled\n                      />\n                    </FormGroup>\n                   </div>\n                 </>):null\n                  /********************* Commission **************/}\n                <FormGroup>\n                  <Label for=\"chargeType\">Type de charge</Label>\n                  <Input\n                      type=\"select\"\n                      id=\"chargeType\"\n                      name=\"select\"\n                      value={this.state.chargeType}\n                      onChange={this.handleChange}\n                  >\n                    <option>OUR</option>\n                    <option>2</option>\n                  </Input>\n                </FormGroup>\n\n                <div className=\"form-row\">\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionCode\">{/*Code Commission/*/}Taux applique</Label>\n                    <h3 className=\"card-title\">\n                      {this.state.applyedRate+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionAmount\">Montant commission</Label>\n                    <h3 className=\"card-title\">\n                      {this.state.commissionAmount+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-4\">\n                    <Label for=\"commissionTVA\">TVA sur commission</Label>\n                    <h3 className=\"card-title\">\n                      {this.state.commissionTVA+\" \"}<span></span>\n                    </h3>\n                  </FormGroup>\n                </div>\n\n                <FormGroup check>\n                  <Label for=\"totalAmount\">Montant total</Label>\n                  <h3 className=\"card-title\">\n                    {this.state.totalAmount+\" \"}<span>{this.state.transactionCurrency}</span>\n                  </h3>\n                </FormGroup>\n                <FormGroup check>\n                  <Label className=\"form-check-label\">\n                    <Input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        id=\"applyCommission\"\n                        onChange={this.handleChangeCheckbox}\n                        checked={this.state.applyCommission}\n                    />\n                    Appliquer commission\n                    <span className=\"form-check-sign\">\n                      <span className=\"check\"></span>\n                    </span>\n                  </Label>\n                </FormGroup>\n\n                <br />\n                <Button  type=\"reset\" color=\"primary\">Annuler</Button>\n                <Button type=\"submit\" color=\"primary\">Virer</Button>\n              </form>\n            </CardBody>\n          </Card>\n        </>\n    );\n  }\n};\n\nclass TransferIntraAgency extends React.Component {\n\n  render() {\n    return (\n        <>\n          <div className=\"content\">\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <h4 className=\"title\">Saisie du virement</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col md=\"2\"></Col>\n                      <Col md=\"8\">\n                        {/* Virement INTRA en agence*/}\n                        <Forms notify={(place,type,message) => this.props.notify(place,type,message)} />\n                      </Col>\n                      <Col md=\"2\"></Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\n\nexport default TransferIntraAgency;\n\n"]},"metadata":{},"sourceType":"module"}