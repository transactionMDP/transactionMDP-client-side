{"ast":null,"code":"import _regeneratorRuntime from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watcherSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerSaga);\n\nimport { takeEvery, call, put } from \"redux-saga/effects\";\nimport { DATA_REQUESTED, USER_DATA_LOADED, API_ERRORED } from \"../constants/action-types\";\nimport { getCurrentUser } from \"../../util/APIUtils\";\nexport default function watcherSaga() {\n  return _regeneratorRuntime.wrap(function watcherSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(DATA_REQUESTED, workerSaga);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction workerSaga() {\n  var payload;\n  return _regeneratorRuntime.wrap(function workerSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(getData);\n\n        case 3:\n          payload = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: USER_DATA_LOADED,\n            payload: payload\n          });\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: API_ERRORED,\n            payload: _context2.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction getData() {\n  return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(function (response) {\n    return response.json();\n  });\n}","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/redux/sagas/api-saga.js"],"names":["watcherSaga","workerSaga","takeEvery","call","put","DATA_REQUESTED","USER_DATA_LOADED","API_ERRORED","getCurrentUser","getData","payload","type","fetch","then","response","json"],"mappings":";;;;yBAIyBA,W;;;yBAIfC,U;;AARV,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,WAA3C,QAA8D,2BAA9D;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AAEA,eAAe,SAAUR,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAME,SAAS,CAAEG,cAAF,EAAkBJ,UAAlB,CAAf;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIf,SAAUA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEwB,iBAAME,IAAI,CAACM,OAAD,CAAV;;AAFxB;AAEcC,UAAAA,OAFd;AAAA;AAGQ,iBAAMN,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAEL,gBAAR;AAA0BI,YAAAA,OAAO,EAAPA;AAA1B,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMN,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAEJ,WAAR;AAAqBG,YAAAA,OAAO;AAA5B,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAASD,OAAT,GAAmB;AACf,SAAOG,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAAyD,UAAAC,QAAQ;AAAA,WACpEA,QAAQ,CAACC,IAAT,EADoE;AAAA,GAAjE,CAAP;AAGH","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { DATA_REQUESTED, USER_DATA_LOADED, API_ERRORED } from \"../constants/action-types\";\nimport {getCurrentUser} from \"../../util/APIUtils\";\n\nexport default function* watcherSaga() {\n    yield takeEvery( DATA_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga() {\n    try {\n        const payload = yield call(getData);/*getCurrentUser*/\n        yield put({ type: USER_DATA_LOADED, payload });\n    } catch (e) {\n        yield put({ type: API_ERRORED, payload: e });\n    }\n}\n\nfunction getData() {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response =>\n        response.json()\n    );\n}\n"]},"metadata":{},"sourceType":"module"}