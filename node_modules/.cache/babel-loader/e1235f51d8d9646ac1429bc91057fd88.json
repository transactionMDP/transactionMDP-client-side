{"ast":null,"code":"import _defineProperty from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTable2.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardTitle, Table, Row, Col, Button, FormGroup, Modal, Form, Label } from \"reactstrap\"; // Sweet alert\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { TRANSFER_LIST_SIZE } from \"../../../variables/constants\";\nimport { getUserCreatedTransfers, getAllTransfers, cancelTransfer, acceptTransfer, sendTransfer } from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\nimport { formatDateTime } from \"../../../util/Helpers\";\nvar MySwal = withReactContent(Swal);\n\nvar TransfersTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransfersTable, _React$Component);\n\n  function TransfersTable(props) {\n    var _this;\n\n    _classCallCheck(this, TransfersTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransfersTable).call(this, props));\n\n    _this.toggleModal = function (modalState) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, modalState, !_this.state[modalState]), _defineProperty(_this$setState, \"idModal\", 1), _this$setState));\n    };\n\n    _this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true,\n      formModal: false,\n      transfer: null,\n      isLoadingTransfer: true,\n      idModal: 0\n    };\n    _this.loadTransfersList = _this.loadTransfersList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLoadMore = _this.handleLoadMore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancelTransfer = _this.handleCancelTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAcceptTransfer = _this.handleAcceptTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSendTransfer = _this.handleSendTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TransfersTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /*************************************************/\n      //const username = this.props.match.params.username;\n      this.loadTransfersList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.props.isAuthenticated !== nextProps.isAuthenticated) {\n        // Reset State\n        this.setState({\n          transfers: [],\n          page: 0,\n          size: 10,\n          totalElements: 0,\n          totalPages: 0,\n          last: true,\n          isLoadingTransfers: false\n        });\n        this.loadTransfersList();\n      }\n    }\n  }, {\n    key: \"handleLoadMore\",\n    value: function handleLoadMore() {\n      this.loadTransfersList(this.state.page + 1);\n    }\n  }, {\n    key: \"loadTransfersList\",\n    value: function loadTransfersList() {\n      var _this2 = this;\n\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TRANSFER_LIST_SIZE;\n      var promise;\n      promise = getAllTransfers(); //getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n      if (!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingTransfers: true\n      });\n      promise.then(function (response) {\n        _this2.setState({\n          transfers: response,\n\n          /*response.content\n          page: response.page,\n          size: response.size,\n          totalElements: response.totalElements,\n          totalPages: response.totalPages,\n          last: response.last,*/\n          isLoadingTransfers: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoadingTransfers: false\n        });\n      });\n    }\n  }, {\n    key: \"handleCancelTransfer\",\n    value: function handleCancelTransfer(id) {\n      var _this3 = this;\n\n      MySwal.fire({\n        buttonsStyling: false,\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        title: 'Enter your motif',\n        input: 'textarea',\n        inputPlaceholder: 'Votre motif ...',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          var reason = result.value;\n          cancelTransfer(id, reason).then(function (response) {\n            /*return */\n            MySwal.fire({\n              type: 'success',\n              title: 'Votre operation a été enregistrée',\n              showConfirmButton: false,\n              timer: 1500\n            });\n\n            _this3.loadTransfersList();\n          }).catch(function (error) {\n            if (error.status === 401) {\n              _this3.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n              /*MySwal.fire({\n                type: 'error',\n                title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                showConfirmButton: false,\n                timer: 1500\n              })*/\n\n            } else {\n              _this3.props.notify('tr', 'warning', error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n              /*return MySwal.fire({\n                type: 'error',\n                title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                showConfirmButton: false,\n                timer: 1500\n              })*/\n\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleAcceptTransfer\",\n    value: function handleAcceptTransfer(id) {\n      var _this4 = this;\n\n      acceptTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this4.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          _this4.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n        } else {\n          _this4.props.notify('tr', 'warning', error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n        }\n      });\n    }\n  }, {\n    key: \"handleSendTransfer\",\n    value: function handleSendTransfer(id) {\n      var _this5 = this;\n\n      sendTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this5.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          _this5.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n        } else {\n          _this5.props.notify('tr', 'warning', error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n        }\n      });\n    }\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(state, link) {\n      switch (state) {\n        case 'accepted':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, \"Valid\\xE9e\");\n\n        case 'in_progress':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          }, \"Encours\");\n\n        case 'cancelled':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, \"Annul\\xE9e\");\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"renderBtnCTN\",\n    value: function renderBtnCTN(link, id) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleAcceptTransfer,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleCancelTransfer,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.toggleModal(\"formModal\", 1),\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderBtnCTRL\",\n    value: function renderBtnCTRL(link) {\n      return React.createElement(React.Fragment, null, this.renderBtnCTN(link), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleSendTransfer,\n        style: {\n          border: 0\n        },\n        color: \"warning\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-paper-plane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderModal\",\n    value: function renderModal(idModal) {\n      var _this6 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Modal, {\n        modalClassName: \"modal-black\",\n        isOpen: this.state.formModal,\n        toggle: function toggle() {\n          return _this6.toggleModal(\"formModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return _this6.toggleModal(\"formModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-muted text-center ml-auto mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Virement N\\xB0\", this.state.transfers[idModal].ref))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Form, {\n        role: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-5 col-form-label\",\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(FormGroup, {\n        className: \"col-md-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, this.state.transfers[idModal].principalAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-5 col-form-label\",\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(FormGroup, {\n        className: \"col-md-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, this.state.transfers[idModal].beneficiaryAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, this.renderBtnCTRL(\"/user/transfers/\" + 1))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$state = this.state,\n          isLoadingTransfers = _this$state.isLoadingTransfers,\n          transfers = _this$state.transfers;\n\n      if (isLoadingTransfers) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, \"Waiting\");\n      }\n\n      if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        });\n      }\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Mes virements\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"R\\xE9f\\xE9rence\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"Date d'op\\xE9ration\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Donneur d\\u2019ordre\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"B\\xE9n\\xE9ficiaire\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"\\xE9tat/Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, transfers.map(function (transfer, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, transfer.ref), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, formatDateTime(transfer.executionDate)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, transfer.principalAccount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, transfer.beneficiaryAccount), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, transfer.transactionAmount), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, _this7.renderBtnCTN(\"/user/transfers/\" + transfer.id, transfer.id)));\n      })))))), this.renderModal(this.state.idModal))));\n    }\n  }]);\n\n  return TransfersTable;\n}(React.Component);\n\nexport default TransfersTable;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTable2.jsx"],"names":["React","classnames","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","Button","FormGroup","Modal","Form","Label","Swal","withReactContent","TRANSFER_LIST_SIZE","getUserCreatedTransfers","getAllTransfers","cancelTransfer","acceptTransfer","sendTransfer","NotFound","formatDateTime","MySwal","TransfersTable","props","toggleModal","modalState","setState","state","transfers","page","size","totalElements","totalPages","last","isLoadingTransfers","formModal","transfer","isLoadingTransfer","idModal","loadTransfersList","bind","handleLoadMore","handleCancelTransfer","handleAcceptTransfer","handleSendTransfer","nextProps","isAuthenticated","promise","then","response","catch","error","id","fire","buttonsStyling","customClass","confirmButton","cancelButton","title","input","inputPlaceholder","showCancelButton","confirmButtonText","result","value","reason","type","showConfirmButton","timer","status","handleLogout","notify","message","link","border","renderBtnCTN","ref","principalAccount","beneficiaryAccount","renderBtnCTRL","notFound","map","key","executionDate","transactionAmount","renderModal","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  Button,\n    FormGroup,\n    Modal,\n    Form,\n    Label\n} from \"reactstrap\";\n// Sweet alert\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nimport {TRANSFER_LIST_SIZE} from \"../../../variables/constants\";\nimport {getUserCreatedTransfers,  getAllTransfers, cancelTransfer, acceptTransfer, sendTransfer} from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\nimport {formatDateTime} from \"../../../util/Helpers\";\n\n\nconst MySwal = withReactContent(Swal);\n\nclass TransfersTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true,\n      formModal: false,\n      transfer: null,\n      isLoadingTransfer: true,\n        idModal: 0\n    };\n    this.loadTransfersList = this.loadTransfersList.bind(this);\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n    this.handleCancelTransfer = this.handleCancelTransfer.bind(this);\n    this.handleAcceptTransfer = this.handleAcceptTransfer.bind(this);\n    this.handleSendTransfer = this.handleSendTransfer.bind(this);\n  }\n\n  componentDidMount() {\n    /*************************************************/\n    //const username = this.props.match.params.username;\n    this.loadTransfersList();\n  }\n\n  componentDidUpdate(nextProps) {\n    if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n      // Reset State\n      this.setState({\n        transfers: [],\n        page: 0,\n        size: 10,\n        totalElements: 0,\n        totalPages: 0,\n        last: true,\n        isLoadingTransfers: false\n      });\n      this.loadTransfersList();\n    }\n  }\n\n  handleLoadMore() {\n    this.loadTransfersList(this.state.page + 1);\n  }\n\n  loadTransfersList(page = 0, size = TRANSFER_LIST_SIZE) {\n    let promise;\n\n    promise = getAllTransfers();//getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoadingTransfers: true\n    });\n\n    promise\n        .then(response => {\n          this.setState({\n            transfers: response,/*response.content\n            page: response.page,\n            size: response.size,\n            totalElements: response.totalElements,\n            totalPages: response.totalPages,\n            last: response.last,*/\n            isLoadingTransfers: false\n          })\n        }).catch(error => {\n      this.setState({\n        isLoadingTransfers: false\n      })\n    });\n\n  }\n\n  handleCancelTransfer(id) {\n    MySwal.fire({\n      buttonsStyling:false,\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger',\n      },\n      title: 'Enter your motif',\n      input: 'textarea',\n      inputPlaceholder: 'Votre motif ...',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n        let reason = result.value;\n        cancelTransfer(id, reason)\n            .then(response => {\n\n              /*return */MySwal.fire({\n                type: 'success',\n                title: 'Votre operation a été enregistrée',\n                showConfirmButton: false,\n                timer: 1500\n              });\n              this.loadTransfersList();\n            }).catch(error => {\n          if(error.status === 401) {\n            this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n            /*MySwal.fire({\n              type: 'error',\n              title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n              showConfirmButton: false,\n              timer: 1500\n            })*/\n          } else {\n            this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n            /*return MySwal.fire({\n              type: 'error',\n              title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n              showConfirmButton: false,\n              timer: 1500\n            })*/\n          }\n        });\n      }\n    })\n  }\n\n  handleAcceptTransfer(id) {\n    acceptTransfer(id)\n        .then(response => {\n\n          /*return */MySwal.fire({\n            type: 'success',\n            title: 'Votre operation a été enregistrée',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.loadTransfersList();\n        }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n      } else {\n        this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n      }\n    });\n  }\n\n  handleSendTransfer(id) {\n    sendTransfer(id)\n        .then(response => {\n\n          /*return */MySwal.fire({\n            type: 'success',\n            title: 'Votre operation a été enregistrée',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.loadTransfersList();\n        }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.');\n      } else {\n        this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n      }\n    });\n  }\n\n  renderSwitch(state, link) {\n    switch(state) {\n      case 'accepted':\n        return <Button className=\"btn-link\" href={link} color=\"success\">Validée</Button>;\n      case 'in_progress':\n        return <Button className=\"btn-link\" href={link} color=\"warning\">Encours</Button>;\n      case 'cancelled':\n        return <Button className=\"btn-link\" href={link} color=\"danger\">Annulée</Button>;\n      default:\n        return null;\n    }\n  }\n\n  renderBtnCTN(link,id) {\n    return(\n        <>\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleAcceptTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n            <i className=\"fa fa-check\"></i>\n          </Button>{` `}\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n            <i className=\"fa fa-times\" />\n          </Button>{` `}\n          <Button className=\"btn-icon btn-simple\" onClick={this.toggleModal(\"formModal\",1)} style={{border:0}} color=\"primary\" size=\"sm\">\n            <i className=\"fa fa-eye\"></i>\n          </Button>\n        </>\n    );\n  }\n\n  renderBtnCTRL(link) {\n    return(\n        <>\n          {this.renderBtnCTN(link)}\n          {` `}\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleSendTransfer} style={{border:0}} color=\"warning\" size=\"sm\">\n            <i className=\"fa fa-paper-plane\"></i>\n          </Button>\n        </>\n    );\n  }\n\n  renderModal(idModal){\n    return(\n      <>\n          {/* Start Form Modal */}\n          <Modal\n              modalClassName=\"modal-black\"\n              isOpen={this.state.formModal}\n              toggle={() => this.toggleModal(\"formModal\")}\n          >\n              <div className=\"modal-header justify-content-center\">\n                  <button\n                      className=\"close\"\n                      onClick={() => this.toggleModal(\"formModal\")}\n                  >\n                      <i className=\"tim-icons icon-simple-remove text-white\" />\n                  </button>\n                  <div className=\"text-muted text-center ml-auto mr-auto\">\n                      <h3 className=\"mb-0\">Virement N°{this.state.transfers[idModal].ref}</h3>\n                  </div>\n              </div>\n              <div className=\"modal-body\">\n                  <Form role=\"form\">\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-5 col-form-label\"} for=\"principalAccount\">N° compte débiteur</Label>\n                          <FormGroup className=\"col-md-7\">\n                              <p className=\"form-control-static\">\n                                  {this.state.transfers[idModal].principalAccount+\" \"}<span>{/*transfer.principalCurrency*/}</span>\n                              </p>\n                          </FormGroup>\n                      </div>\n                      <div className=\"form-row\">\n                          <Label className={\"col-md-5 col-form-label\"} for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                          <FormGroup className=\"col-md-7\">\n                              <p className=\"form-control-static\">\n                                  {this.state.transfers[idModal].beneficiaryAccount+\" \"}<span>{/*transfer.beneficiaryCurrency*/}</span>\n                              </p>\n                          </FormGroup>\n                      </div>\n                      <div className=\"text-center\">\n                          {this.renderBtnCTRL(\"/user/transfers/\"+1)}\n                      </div>\n                  </Form>\n              </div>\n          </Modal>\n          {/* End Form Modal */}\n      </>\n    );\n  }\n\n    toggleModal = (modalState) => {\n        this.setState({\n            [modalState]: !this.state[modalState],\n            idModal: 1\n        });\n    };\n  render() {\n    const { isLoadingTransfers, transfers } = this.state;\n    if(isLoadingTransfers) {\n      return <h1>Waiting</h1>;\n    }\n\n    if(this.state.notFound ) {\n      return <NotFound />;\n    }\n\n    /*if(this.state.serverError) {\n      return <ServerError />;\n    }*/\n    return (\n        <>\n          <div className=\"content\">\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle tag=\"h4\">Mes virements</CardTitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Table className=\"tablesorter\" responsive>\n                      <thead className=\"text-primary\">\n                      <tr>\n                        <th>Référence</th>\n                        <th>Date d'opération</th>\n                        <th>Donneur d’ordre</th>\n                        <th>Bénéficiaire</th>\n                        <th className=\"text-center\">Montant</th>\n                        <th className=\"text-center\">état/Action</th>\n                      </tr>\n                      </thead>\n                      <tbody>\n                      {transfers.map((transfer, key) => {\n                        return (\n                            <tr key={key}>\n                              <td>{transfer.ref}</td>\n                              <td>{formatDateTime(transfer.executionDate)}</td>\n                              <td>{transfer.principalAccount}</td>\n                              <td>{transfer.beneficiaryAccount}</td>\n                              <td className=\"text-center\">{transfer.transactionAmount}</td>\n                              <td className=\"text-center\">\n                                {/*this.renderSwitch(transfer.state,\"/user/transfers/\"+transfer.id)*/}\n                                {this.renderBtnCTN(\"/user/transfers/\"+transfer.id,transfer.id)}\n                                {/*this.renderBtnCTRL(\"/user/transfers/\"+transfer.id)*/}\n                              </td>\n                            </tr>\n                        );\n                      })}\n                      </tbody>\n                    </Table>\n                  </CardBody>\n                </Card>\n              </Col>\n                {this.renderModal(this.state.idModal)}\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\n\nexport default TransfersTable;\n"]},"metadata":{},"sourceType":"module"}