{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTableCTN.jsx\";\nimport React from \"react\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardTitle, Table, Row, Col, Button } from \"reactstrap\"; // Sweet alert\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { TRANSFER_LIST_SIZE } from \"../../../variables/constants\";\nimport { getUserCreatedTransfers, getAllTransfers, cancelledTransfer } from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\nvar MySwal = withReactContent(Swal);\n\nvar Tables =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tables, _React$Component);\n\n  function Tables(props) {\n    var _this;\n\n    _classCallCheck(this, Tables);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tables).call(this, props));\n    _this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true\n    };\n    _this.loadTransfersList = _this.loadTransfersList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLoadMore = _this.handleLoadMore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancelledTransfer = _this.handleCancelledTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Tables, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /*************************************************/\n      //const username = this.props.match.params.username;\n      this.loadTransfersList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.props.isAuthenticated !== nextProps.isAuthenticated) {\n        // Reset State\n        this.setState({\n          transfers: [],\n          page: 0,\n          size: 10,\n          totalElements: 0,\n          totalPages: 0,\n          last: true,\n          isLoadingTransfers: false\n        });\n        this.loadTransfersList();\n      }\n    }\n  }, {\n    key: \"handleLoadMore\",\n    value: function handleLoadMore() {\n      this.loadTransfersList(this.state.page + 1);\n    }\n  }, {\n    key: \"loadTransfersList\",\n    value: function loadTransfersList() {\n      var _this2 = this;\n\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TRANSFER_LIST_SIZE;\n      var promise;\n      promise = getAllTransfers(); //getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n      if (!promise) {\n        return;\n      }\n\n      this.setState({\n        isLoadingTransfers: true\n      });\n      promise.then(function (response) {\n        _this2.setState({\n          transfers: response,\n\n          /*response.content\n          page: response.page,\n          size: response.size,\n          totalElements: response.totalElements,\n          totalPages: response.totalPages,\n          last: response.last,*/\n          isLoadingTransfers: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoadingTransfers: false\n        });\n      });\n    }\n  }, {\n    key: \"handleCancelledTransfer\",\n    value: function handleCancelledTransfer(id) {\n      MySwal.fire({\n        inputPlaceholder: 'Type your message here...',\n        showCancelButton: true,\n        onOpen: function onOpen() {\n          // `MySwal` is a subclass of `Swal`\n          //   with all the same instance & static methods\n          MySwal.clickConfirm();\n        }\n      }).then(function () {\n        return MySwal.fire(React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Shorthand works too\"));\n      });\n      /*cancelledTransfer(id)\n          .then(response => {\n            this.props.notify('tr','success','Annulation effectuée avec succès');\n            //this.props.history.push(\"/dash/myevents\");\n            this.loadTransfersList();\n          }).catch(error => {\n        if(error.status === 401) {\n          this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer l\\'événement.');\n        } else {\n          this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n        }\n      });*/\n    }\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(state, link) {\n      switch (state) {\n        case 'accepted':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"Valid\\xE9e\");\n\n        case 'in_progress':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"Encours\");\n\n        case 'cancelled':\n          return React.createElement(Button, {\n            className: \"btn-link\",\n            href: link,\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"Annul\\xE9e\");\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"renderBtn\",\n    value: function renderBtn(link) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        color: \"success\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleCancelledTransfer,\n        color: \"danger\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        href: link,\n        color: \"info\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          isLoadingTransfers = _this$state.isLoadingTransfers,\n          transfers = _this$state.transfers;\n\n      if (isLoadingTransfers) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"Waiting\");\n      }\n\n      if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        });\n      }\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Mes virements\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"R\\xE9f\\xE9rence\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Date d'op\\xE9ration\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Donneur d\\u2019ordre\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"B\\xE9n\\xE9ficiaire\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, transfers.map(function (transfer, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, transfer.ref), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, transfer.date), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, transfer.principalAccount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, transfer.beneficiaryAccount), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, transfer.transactionAmount), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, _this3.renderBtn(\"/user/transfers/\" + transfer.id)));\n      })))))))));\n    }\n  }]);\n\n  return Tables;\n}(React.Component);\n\nexport default Tables;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/views/User/Transfer/TransfersTableCTN.jsx"],"names":["React","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","Button","Swal","withReactContent","TRANSFER_LIST_SIZE","getUserCreatedTransfers","getAllTransfers","cancelledTransfer","NotFound","MySwal","Tables","props","state","transfers","page","size","totalElements","totalPages","last","isLoadingTransfers","loadTransfersList","bind","handleLoadMore","handleCancelledTransfer","nextProps","isAuthenticated","setState","promise","then","response","catch","error","id","fire","inputPlaceholder","showCancelButton","onOpen","clickConfirm","link","notFound","map","transfer","key","ref","date","principalAccount","beneficiaryAccount","transactionAmount","renderBtn","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n    Button\n} from \"reactstrap\";\n// Sweet alert\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nimport {TRANSFER_LIST_SIZE} from \"../../../variables/constants\";\nimport {getUserCreatedTransfers,  getAllTransfers, cancelledTransfer} from \"../../../util/APIUtils\";\nimport NotFound from \"./TransferPage\";\n\n\nconst MySwal = withReactContent(Swal);\n\nclass Tables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transfers: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      isLoadingTransfers: true\n    };\n    this.loadTransfersList = this.loadTransfersList.bind(this);\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n    this.handleCancelledTransfer = this.handleCancelledTransfer.bind(this);\n  }\n\n  componentDidMount() {\n    /*************************************************/\n    //const username = this.props.match.params.username;\n    this.loadTransfersList();\n  }\n\n  componentDidUpdate(nextProps) {\n    if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n      // Reset State\n      this.setState({\n        transfers: [],\n        page: 0,\n        size: 10,\n        totalElements: 0,\n        totalPages: 0,\n        last: true,\n        isLoadingTransfers: false\n      });\n      this.loadTransfersList();\n    }\n  }\n\n  handleLoadMore() {\n    this.loadTransfersList(this.state.page + 1);\n  }\n\n  loadTransfersList(page = 0, size = TRANSFER_LIST_SIZE) {\n    let promise;\n\n    promise = getAllTransfers();//getUserCreatedTransfers(this.props.currentUser.username, page, size);\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoadingTransfers: true\n    });\n\n    promise\n        .then(response => {\n          this.setState({\n            transfers: response,/*response.content\n            page: response.page,\n            size: response.size,\n            totalElements: response.totalElements,\n            totalPages: response.totalPages,\n            last: response.last,*/\n            isLoadingTransfers: false\n          })\n        }).catch(error => {\n      this.setState({\n        isLoadingTransfers: false\n      })\n    });\n\n  }\n\n  handleCancelledTransfer(id) {\n    MySwal.fire({\n      inputPlaceholder: 'Type your message here...',\n      showCancelButton: true,\n      onOpen: () => {\n        // `MySwal` is a subclass of `Swal`\n        //   with all the same instance & static methods\n        MySwal.clickConfirm()\n      }\n    }).then(() => {\n      return MySwal.fire(<p>Shorthand works too</p>)\n    })\n\n    /*cancelledTransfer(id)\n        .then(response => {\n          this.props.notify('tr','success','Annulation effectuée avec succès');\n          //this.props.history.push(\"/dash/myevents\");\n          this.loadTransfersList();\n        }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer l\\'événement.');\n      } else {\n        this.props.notify('tr','warning',error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!');\n      }\n    });*/\n  }\n\n  renderSwitch(state, link) {\n    switch(state) {\n      case 'accepted':\n        return <Button className=\"btn-link\" href={link} color=\"success\">Validée</Button>;\n      case 'in_progress':\n        return <Button className=\"btn-link\" href={link} color=\"warning\">Encours</Button>;\n      case 'cancelled':\n        return <Button className=\"btn-link\" href={link} color=\"danger\">Annulée</Button>;\n      default:\n        return null;\n    }\n  }\n\n  renderBtn(link) {\n    return(\n        <>\n          <Button className=\"btn-icon btn-simple\" color=\"success\" size=\"sm\">\n            <i className=\"fa fa-check\"></i>\n          </Button>{` `}\n          <Button className=\"btn-icon btn-simple\" onClick={this.handleCancelledTransfer} color=\"danger\" size=\"sm\">\n            <i className=\"fa fa-times\" />\n          </Button>{` `}\n          <Button className=\"btn-icon btn-simple\" href={link} color=\"info\" size=\"sm\">\n            <i className=\"fa fa-edit\"></i>\n          </Button>\n        </>\n    );\n  }\n\n  render() {\n    const { isLoadingTransfers, transfers } = this.state;\n    if(isLoadingTransfers) {\n      return <h1>Waiting</h1>;\n    }\n\n    if(this.state.notFound ) {\n      return <NotFound />;\n    }\n\n    /*if(this.state.serverError) {\n      return <ServerError />;\n    }*/\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Mes virements</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Référence</th>\n                        <th>Date d'opération</th>\n                        <th>Donneur d’ordre</th>\n                        <th>Bénéficiaire</th>\n                        <th className=\"text-center\">Montant</th>\n                        <th className=\"text-center\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {transfers.map((transfer, key) => {\n                        return (\n                            <tr key={key}>\n                              <td>{transfer.ref}</td>\n                              <td>{transfer.date}</td>\n                              <td>{transfer.principalAccount}</td>\n                              <td>{transfer.beneficiaryAccount}</td>\n                              <td className=\"text-center\">{transfer.transactionAmount}</td>\n                              <td className=\"text-center\">\n                                {/*this.renderSwitch(transfer.state,\"/user/transfers/\"+transfer.id)*/}\n                                {this.renderBtn(\"/user/transfers/\"+transfer.id)}\n                              </td>\n                            </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n"]},"metadata":{},"sourceType":"module"}