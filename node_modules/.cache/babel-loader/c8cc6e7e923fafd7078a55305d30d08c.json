{"ast":null,"code":"import { API_BASE_URL, TRANSFER_LIST_SIZE, ACCESS_TOKEN } from '../variables/constants';\n\nvar request = function request(options) {\n  var headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  var defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(function (response) {\n    return response.json().then(function (json) {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n};\n\nexport function getAllTransfers(page, size) {\n  page = page || 0;\n  size = size || TRANSFER_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/transfers?page=\" + page + \"&size=\" + size,\n    method: 'GET'\n  });\n}\nexport function createTransfer(transferData) {\n  return request({\n    url: API_BASE_URL + \"/transfers\",\n    method: 'POST',\n    body: JSON.stringify(transferData)\n  });\n}\nexport function updateTransfer(id, transferRequest) {\n  return request({\n    url: API_BASE_URL + \"/transfers/\" + id,\n    method: 'PUT',\n    body: JSON.stringify(transferRequest)\n  });\n}\nexport function deleteTransfer(id) {\n  return request({\n    url: API_BASE_URL + \"/transfers/\" + id,\n    method: 'DELETE'\n  });\n}\nexport function getAccountData(id) {\n  return request({\n    url: API_BASE_URL + \"/account/\" + id,\n    method: 'GET'\n  });\n}\nexport function login(loginRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signin\",\n    method: 'POST',\n    body:\n    /*JSON.stringify(*/\n    loginRequest.data\n    /*)*/\n\n  });\n}\nexport function signup(signupRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signup\",\n    method: 'POST',\n    body: JSON.stringify(signupRequest)\n  });\n}\nexport function checkEmailAvailability(email) {\n  return request({\n    url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n    method: 'GET'\n  });\n}\nexport function getCurrentUser() {\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: API_BASE_URL + \"/user/me\",\n    method: 'GET'\n  });\n}\nexport function getUserProfile(username) {\n  return request({\n    url: API_BASE_URL + \"/users/\" + username,\n    method: 'GET'\n  });\n}\nexport function updateUserProfile(username, userRequest) {\n  return request({\n    url: API_BASE_URL + \"/users/\" + username,\n    method: 'PUT',\n    body: JSON.stringify(userRequest)\n  });\n}\nexport function getUserCreatedTransfer(username, page, size) {\n  page = page || 0;\n  size = size || TRANSFER_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/users/\" + username + \"/transfers?page=\" + page + \"&size=\" + size,\n    method: 'GET'\n  });\n}\nexport function getStatistics() {\n  return request({\n    url: API_BASE_URL + \"/dashboard\",\n    method: 'GET'\n  });\n}","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/util/APIUtils.js"],"names":["API_BASE_URL","TRANSFER_LIST_SIZE","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","getAllTransfers","page","size","method","createTransfer","transferData","body","JSON","stringify","updateTransfer","id","transferRequest","deleteTransfer","getAccountData","login","loginRequest","data","signup","signupRequest","checkEmailAvailability","email","getCurrentUser","getUserProfile","username","updateUserProfile","userRequest","getUserCreatedTransfer","getStatistics"],"mappings":"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","sourcesContent":["import { API_BASE_URL, TRANSFER_LIST_SIZE, ACCESS_TOKEN } from '../variables/constants';\n\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n    \n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response => \n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\nexport function getAllTransfers(page, size) {\n    page = page || 0;\n    size = size || TRANSFER_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/transfers?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function createTransfer(transferData) {\n    return request({\n        url: API_BASE_URL + \"/transfers\",\n        method: 'POST',\n        body: JSON.stringify(transferData)\n    });\n}\n\nexport function updateTransfer(id, transferRequest) {\n    return request({\n        url: API_BASE_URL + \"/transfers/\" + id,\n        method: 'PUT',\n        body: JSON.stringify(transferRequest)\n    });\n}\n\nexport function deleteTransfer(id) {\n    return request({\n        url: API_BASE_URL + \"/transfers/\" + id,\n        method: 'DELETE'\n    });\n}\n\n\nexport function getAccountData(id) {\n    return request({\n        url: API_BASE_URL + \"/account/\" + id,\n        method: 'GET'\n    });\n}\n\n\nexport function login(loginRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signin\",\n        method: 'POST',\n        body: /*JSON.stringify(*/loginRequest.data/*)*/\n    });\n}\n\nexport function signup(signupRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signup\",\n        method: 'POST',\n        body: JSON.stringify(signupRequest)\n    });\n}\n\nexport function checkEmailAvailability(email) {\n    return request({\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n        method: 'GET'\n    });\n}\n\nexport function getCurrentUser() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/user/me\",\n        method: 'GET'\n    });\n}\n\nexport function getUserProfile(username) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + username,\n        method: 'GET'\n    });\n}\n\nexport function updateUserProfile(username, userRequest) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + username,\n        method: 'PUT',\n        body: JSON.stringify(userRequest)\n    });\n}\n\nexport function getUserCreatedTransfer(username, page, size) {\n    page = page || 0;\n    size = size || TRANSFER_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/users/\" + username + \"/transfers?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function getStatistics() {\n\n    return request({\n        url: API_BASE_URL + \"/dashboard\",\n        method: 'GET'\n    });\n}\n"]},"metadata":{},"sourceType":"module"}