{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/components/Sidebar/Sidebar.jsx\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\"; // nodejs library to set properties for components\n\nimport { PropTypes } from \"prop-types\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\"; // reactstrap components\n\nimport { Nav, NavItem, Collapse, Button, CardBody, Card, UncontrolledDropdown, DropdownToggle } from 'reactstrap';\nvar ps;\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n\n    _this.linkOnClick = function () {\n      document.documentElement.classList.remove(\"nav-open\");\n    };\n\n    _this.activeRoute.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      collapse: false\n    };\n    return _this;\n  } // verifies if routeName is the one active (in browser input)\n\n\n  _createClass(Sidebar, [{\n    key: \"activeRoute\",\n    value: function activeRoute(routeName) {\n      return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.sidebar, {\n          suppressScrollX: true,\n          suppressScrollY: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (state) {\n        return {\n          collapse: !state.collapse\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          bgColor = _this$props.bgColor,\n          routes = _this$props.routes,\n          rtlActive = _this$props.rtlActive,\n          logo = _this$props.logo;\n      var logoImg = null;\n      var logoText = null;\n\n      if (logo !== undefined) {\n        if (logo.outterLink !== undefined) {\n          logoImg = React.createElement(\"a\", {\n            href: logo.outterLink,\n            className: \"simple-text logo-mini\",\n            target: \"_blank\",\n            onClick: this.props.toggleSidebar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"logo-img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          })));\n          logoText = React.createElement(\"a\", {\n            href: logo.outterLink,\n            className: \"simple-text logo-normal\",\n            target: \"_blank\",\n            onClick: this.props.toggleSidebar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, logo.text);\n        } else {\n          logoImg = React.createElement(Link, {\n            to: logo.innerLink,\n            className: \"simple-text logo-mini\",\n            onClick: this.props.toggleSidebar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"logo-img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          })));\n          logoText = React.createElement(Link, {\n            to: logo.innerLink,\n            className: \"simple-text logo-normal\",\n            onClick: this.props.toggleSidebar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, logo.text);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"sidebar\",\n        data: bgColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-wrapper\",\n        ref: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, logoImg !== null || logoText !== null ? React.createElement(\"div\", {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, logoImg, logoText) : null, React.createElement(Nav, {\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: '/',\n        className: \"nav-link\",\n        activeClassName: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"HOME\"))), React.createElement(UncontrolledDropdown, {\n        nav: true,\n        inNavbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        nav: true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"DROPDOWN LINK\")), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"DROPDOWN ITEM\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 2\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 3\"))), React.createElement(UncontrolledDropdown, {\n        nav: true,\n        inNavbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        nav: true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"DROPDOWN 2\")), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"DROPDOWN ITEM\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 2\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 3\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 4\"))), React.createElement(UncontrolledDropdown, {\n        nav: true,\n        inNavbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        nav: true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"DROPDOWN 3\")), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"DROPDOWN ITEM\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 2\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 3\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 4\"))), React.createElement(UncontrolledDropdown, {\n        nav: true,\n        inNavbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        nav: true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"DROPDOWN 4\")), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"DROPDOWN ITEM\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 2\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 3\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"DROPDOWN ITEM 4\"))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: '/counter',\n        className: \"nav-link\",\n        activeClassName: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"NAV ITEM\"))))));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].   e, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\nexport default Sidebar;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","NavLink","PropTypes","PerfectScrollbar","Nav","NavItem","Collapse","Button","CardBody","Card","UncontrolledDropdown","DropdownToggle","ps","Sidebar","props","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","toggle","state","collapse","routeName","location","pathname","indexOf","navigator","platform","refs","sidebar","suppressScrollX","suppressScrollY","destroy","setState","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","toggleSidebar","imgSrc","text","innerLink","Component","defaultProps","propTypes","bool","oneOf","arrayOf","object","shape","string","node"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavItem, Collapse, Button, CardBody, Card, UncontrolledDropdown, DropdownToggle } from 'reactstrap';\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.state = { collapse: false };\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  toggle() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav navbar>\n            {/*routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                  <li\n                      className={\n                        this.activeRoute(prop.path) +\n                        (prop.pro ? \" active-pro\" : \"\")\n                      }\n                      key={key}\n                  >\n                    <NavLink\n                        to={prop.layout + prop.path}\n                        className=\"nav-link\"\n                        activeClassName=\"active\"\n                        onClick={this.props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n              );\n            })*/}\n            {/*<NavItem className={this.activeRoute(\"/user/notifications\") + (this.props.pro ? \" active-pro\" : \"\")}>\n              <NavLink\n                  to={\"/user/notifications\"}\n                  className=\"nav-link\"\n                  activeClassName=\"active\"\n                  onClick={this.props.toggleSidebar}\n              >\n                <i className={\"tim-icons icon-bell-55\"} />\n                <p>Dashboard</p>\n              </NavLink>\n            </NavItem>*/}\n            {/*<NavItem>\n              <NavLink\n                  to={\"#transfer\"}\n                  className=\"nav-link\"\n                  activeClassName=\"active\"\n                  onClick={()=>{this.props.toggleSidebar();this.toggle()}}\n              >\n                <i className={\"fa fa-retweet\"} />\n                <p>Virement<b className={\"caret\"}></b></p>\n              </NavLink>\n              <Collapse isOpen={this.state.collapse}>\n                <Nav>\n                  {routes.map((prop, key) => {\n                    if (prop.redirect) return null;\n                    return (\n                        <NavItem\n                            className={\n                              this.activeRoute(prop.path) +\n                              (prop.pro ? \" active-pro\" : \"\")\n                            }\n                            key={key}\n                        >\n                          <NavLink\n                              to={prop.layout + prop.path}\n                              className=\"nav-link\"\n                              activeClassName=\"active\"\n                              onClick={this.props.toggleSidebar}\n                          >\n                            <span className={\"sidebar-mini-icon\"}>PP</span>\n                            <span className={\"sidebar-normal\"} >{rtlActive ? prop.rtlName : prop.name}</span>\n                          </NavLink>\n                        </NavItem>\n                    );\n                  })}\n                </Nav>\n              </Collapse>\n            </NavItem>*/}\n            <NavItem>\n              <NavLink exact to={'/'} className='nav-link' activeClassName='active'>\n                <span>HOME</span>\n              </NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                <span>DROPDOWN LINK</span>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  DROPDOWN ITEM\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 2\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                <span>DROPDOWN 2</span>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  DROPDOWN ITEM\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 2\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 3\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 4\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                <span>DROPDOWN 3</span>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  DROPDOWN ITEM\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 2\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 3\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 4\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                <span>DROPDOWN 4</span>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  DROPDOWN ITEM\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 2\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 3\n                </DropdownItem>\n                <DropdownItem>\n                  DROPDOWN ITEM 4\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <NavItem>\n              <NavLink to={'/counter'} className='nav-link' activeClassName='active'>\n                <span>NAV ITEM</span>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].   e, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}