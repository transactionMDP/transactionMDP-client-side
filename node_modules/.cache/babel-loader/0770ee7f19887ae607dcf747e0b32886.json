{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { getCurrentUser } from \"../../util/APIUtils\"; // core components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport dashboardRoutesAdmin from \"routes/dashboardAdmin.jsx\";\nimport dashboardRoutesUser from \"routes/dashboardUser.jsx\";\nimport logo from \"assets/img/react-logo.png\";\nimport NotFound from \"../../views/NotFound\";\nvar ps;\n/*const MyRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => <Component {...rest} {...props}/>}/>\n);*/\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    /*this.state = {\n      user: null,\n      currentUser: this.props.currentUser,\n      isLoading: true,\n      backgroundColor: \"primary\",\n      sidebarOpened:\n          document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);*/\n\n    _this.getRoutes = function (routes) {\n      return routes.map(function (prop, key) {\n        /*\n        if (prop.layout === \"/user\" || prop.layout === \"/admin\") {\n        return (\n        <MyRoute path={prop.layout + prop.path} component={prop.component} handleLogout={this.props.handleLogout} notify={(place,type,message)=>this.props.notify(place,type,message)}  key={key} />\n        );\n        } else {\n        return <Route component={NotFound} key={key} />;\n        }\n        */\n      });\n    };\n\n    return _this;\n  }\n  /*loadUserProfile() {\n    this.setState({\n      isLoading: true\n    });\n     getCurrentUser()\n        .then(response => {\n          this.setState({\n            user: response,\n            isLoading: false\n          });\n        }).catch(error => {\n      if(error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n  }*/\n\n  /*componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    this.loadUserProfile();\n  }*/\n\n  /*componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }*/\n\n  /*componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n    //this.loadUserProfile();\n  }*/\n  // this function opens and closes the sidebar on small devices\n\n  /*handleToggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };*/\n\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n\n    /*handleBgClick = color => {\n      this.setState({ backgroundColor: color });\n    };*/\n    value: function render() {\n      var dashboardRoutes =\n      /*this.props.currentUser.role===\"ROLE_USER\"*/\n      true ? dashboardRoutesUser : dashboardRoutesAdmin;\n      return React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/bcp-transactionMDP-client/src/layouts/Admin/Dashboard.jsx"],"names":["React","Route","Switch","PerfectScrollbar","getCurrentUser","AdminNavbar","Footer","Sidebar","dashboardRoutesAdmin","dashboardRoutesUser","logo","NotFound","ps","Dashboard","props","getRoutes","routes","map","prop","key","dashboardRoutes","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,kBAA7B,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AAEA,SAAQC,cAAR,QAA6B,qBAA7B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AAEA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,IAAIC,EAAJ;AAEA;;;;IAIMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA;;;;;;;;;;AAFiB,UA4EnBC,SA5EmB,GA4EP,UAAAC,MAAM,EAAI;AACpB,aAAOA,MAAM,CAACC,GAAP,CAAW,UAACC,IAAD,EAAOC,GAAP,EAAe;AAAC;;;;;;;;;AAQ/B,OARI,CAAP;AASD,KAtFkB;;AAAA;AAWlB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;;AAYA;;;;;;;;AAOA;;;;;;;;;;;;;;AAcA;;AACA;;;;;;;;;AAiBA;;;6BAIS;AACP,UAAIC,eAAe;AAAG;AAA6C,aAAMX,mBAAN,GAA4BD,oBAA/F;AAEA,aACI,yCADJ;AAoCD;;;;EApIqBR,KAAK,CAACqB,S;;AAuI9B,eAAeR,SAAf","sourcesContent":["import React from \"react\";\nimport { Route, Switch} from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport {getCurrentUser} from \"../../util/APIUtils\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n\nimport dashboardRoutesAdmin from \"routes/dashboardAdmin.jsx\";\nimport dashboardRoutesUser from \"routes/dashboardUser.jsx\";\n\nimport logo from \"assets/img/react-logo.png\";\nimport NotFound from \"../../views/NotFound\";\n\nlet ps;\n\n/*const MyRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => <Component {...rest} {...props}/>}/>\n);*/\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    /*this.state = {\n      user: null,\n      currentUser: this.props.currentUser,\n      isLoading: true,\n      backgroundColor: \"primary\",\n      sidebarOpened:\n          document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);*/\n  }\n  /*loadUserProfile() {\n    this.setState({\n      isLoading: true\n    });\n\n    getCurrentUser()\n        .then(response => {\n          this.setState({\n            user: response,\n            isLoading: false\n          });\n        }).catch(error => {\n      if(error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n  }*/\n  /*componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    this.loadUserProfile();\n  }*/\n  /*componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }*/\n  /*componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n    //this.loadUserProfile();\n  }*/\n  // this function opens and closes the sidebar on small devices\n  /*handleToggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };*/\n\n  getRoutes = routes => {\n    return routes.map((prop, key) => {/*\n      if (prop.layout === \"/user\" || prop.layout === \"/admin\") {\n        return (\n            <MyRoute path={prop.layout + prop.path} component={prop.component} handleLogout={this.props.handleLogout} notify={(place,type,message)=>this.props.notify(place,type,message)}  key={key} />\n      );\n      } else {\n        return <Route component={NotFound} key={key} />;\n      }\n    */});\n  };\n\n  /*handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };*/\n\n  render() {\n    let dashboardRoutes = /*this.props.currentUser.role===\"ROLE_USER\"*/true?(dashboardRoutesUser):(dashboardRoutesAdmin);\n\n    return (\n        <>\n          {/*   <div className=\"wrapper\">\n            <Sidebar\n                {...this.props}\n                routes={dashboardRoutes}\n                bgColor={this.state.backgroundColor}\n                logo={{\n                  outterLink: \"https://www.bcp.com/\",\n                  text: \"Banque Populaire\",\n                  imgSrc: logo\n                }}\n                toggleSidebar={this.handleToggleSidebar}\n            />\n            <div\n                className=\"main-panel\"\n                ref=\"mainPanel\"\n                data={this.state.backgroundColor}\n            >\n              <AdminNavbar\n                  {...this.props}\n                  routes={dashboardRoutes}\n                  toggleSidebar={this.handleToggleSidebar}\n                  sidebarOpened={this.state.sidebarOpened}\n                  handleLogout={this.props.handleLogout}\n                  history={this.props.history}\n              />\n              <Switch>{this.getRoutes(dashboardRoutes)}</Switch>\n              {// we don't want the Footer to be rendered on map page\n                this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n                    <Footer fluid />\n                )}\n            </div>\n          </div>*/}\n        </>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}