{"ast":null,"code":"import _classCallCheck from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/views/User/Transfer/TransferPage.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { acceptTransfer, cancelTransfer, getTransfer, sendTransfer } from '../../../util/APIUtils'; // react plugin used to create datetime\n\nimport { formatDateTime } from \"../../../util/Helpers\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, Row, Col, FormGroup, Label, Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../../../redux/actions\"; // Sweet alert\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nvar MySwal = withReactContent(Swal);\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\n/*class TransferPage2 extends React.Component {\n    // Constructeur\n    constructor(props) {\n        super(props);\n        this.state = {\n            transfer: null,\n            isLoading: true,\n        };\n        this.loadTransferDetails = this.loadTransferDetails.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getCurrentUser();\n        const id = this.props.match.params.id;\n        this.loadTransferDetails(id);\n    }\n\n    loadTransferDetails(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        getTransfer(id)\n            .then(response => {\n                this.setState({\n                    transfer: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n\n    renderSwitch(state) {\n        switch(state) {\n            case 'accepted':\n                return <p className=\"form-control-static\" style={{color:\"#24ff47\"}}>Validée</p>;\n            case 'in_progress':\n                return <p className=\"form-control-static\" style={{color:\"#ffaa23\"}} color=\"warning\">Encours</p>;\n            case 'canceled':\n                return <p className=\"form-control-static\" style={{color:\"#FF0000\"}}>Rejetée</p>;\n            default:\n                return null;\n        }\n    }\n\n  render() {\n      const { isLoading, transfer } = this.state;\n      if(isLoading) {\n          return <LoadingIndicator/>;\n      }\n\n      if(this.state.notFound ) {\n          return <NotFound />;\n      }\n\n    /*if(this.state.serverError) {\n      return <ServerError />;\n    }*\n    return (\n        <>\n            <div className=\"content\">\n                <Breadcrumb>\n                    <BreadcrumbItem><a href=\"/user/lsttransfers\">Mes virements</a></BreadcrumbItem>\n                    <BreadcrumbItem active>Virement</BreadcrumbItem>\n                </Breadcrumb>\n                <Row>\n                    <Col md=\"12\">\n                      <Card>\n                        <CardBody>\n                            <Row>\n                                <Col md=\"2\"/>\n                                <Col md=\"8\">\n                          <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-row\">\n                              <FormGroup className=\"col-md-6\">\n                                <Label for=\"principalAccount\">N° compte débiteur</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.principalAccount+\" \"}<span>{transfer.principalCurrency}</span>\n                                </h4>\n                              </FormGroup>\n\n                              <FormGroup className=\"col-md-6\">\n                                <Label for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.beneficiaryAccount+\" \"}<span>{transfer.beneficiaryCurrency}</span>\n                                </h4>\n                              </FormGroup>\n                            </div>\n\n                            <div className=\"form-row\">\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"transactionAmount\">Montant</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.transactionAmount+\" \"}<span>{transfer.transactionCurrency}</span>\n                                </h4>\n                              </FormGroup>\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"transferReason\">Motif</Label>\n                                <h4 className=\"card-title\">{transfer.transferReason}</h4>\n                              </FormGroup>\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"executionDate\">Date d'execution</Label>\n                                <h4 className=\"card-title\">{formatDateTime(transfer.executionDate)}</h4>\n                              </FormGroup>\n                            </div>\n                            {/********************* Echange **************\n                              (transfer.principalCurrency===\"MAD\" && transfer.beneficiaryCurrency!==\"MAD\") ?(\n                             <>\n                               {\n                                 (transfer.transactionAmount>transfer.largeAmount)?(\n                                     <FormGroup>\n                                       <Label for=\"tradingTicket\">Ticket de négociation</Label>\n                                       <h4 className=\"card-title\">{transfer.tradingTicket}</h4>\n                                     </FormGroup>\n                                 ):null\n                               }\n                               <FormGroup>\n                                <Label for=\"transferNature\">Nature de transfert</Label>\n                                 <h4 className=\"card-title\">{transfer.transferNature}</h4>\n                              </FormGroup>\n\n                              <div className=\"form-row\">\n                                <FormGroup className=\"col-md-3\">\n                                  <Label for=\"authorizationNumber\">N° d'autorisation</Label>\n                                  <h4 className=\"card-title\">{transfer.authorizationNumber}</h4>\n                                </FormGroup>\n                                <FormGroup className=\"col-md-6\">\n                                  <Label for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                                  <h4 className=\"card-title\">{transfer.authorizationValidity}</h4>\n                                </FormGroup>\n                                <FormGroup className=\"col-md-3\">\n                                  <Label for=\"exchangeRate\">Cours de change</Label>\n                                  <h4 className=\"card-title\">{transfer.exchangeRate}</h4>\n                                </FormGroup>\n                               </div>\n                             </>):null\n                              /********************* Commission **************}\n                            <FormGroup>\n                              <Label for=\"chargeType\">Type de charge</Label>\n                              <h4 className=\"card-title\">{transfer.chargeType}</h4>\n                            </FormGroup>\n\n                            <div className=\"form-row\">\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"commissionCode\">Taux applique</Label>\n                                <h4 className=\"card-title\">{transfer.applyedRate+\" \"}<span></span></h4>\n                              </FormGroup>\n\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"commissionAmount\">Montant commission</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.commissionAmount+\" \"}<span></span>\n                                </h4>\n                              </FormGroup>\n\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"commissionTVA\">TVA sur commission</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.commissionTVA+\" \"}<span></span>\n                                </h4>\n                              </FormGroup>\n                            </div>\n\n                            <FormGroup check>\n                              <Label for=\"totalAmount\">Montant total</Label>\n                              <h4 className=\"card-title\">\n                                {transfer.totalAmount+\" \"}<span>{transfer.transactionCurrency}</span>\n                              </h4>\n                            </FormGroup>\n                            <FormGroup check>\n                              <Label>Appliquer commission</Label>\n                              <h4 className=\"card-title\">\n                                {transfer.applyCommission?(\"Oui\"):\"Non\"}\n                              </h4>\n                            </FormGroup>\n                          </form>\n                                </Col>\n                                <Col md=\"2\"/>\n                            </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    );\n  }\n};*/\n\nvar TransferPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransferPage, _React$Component);\n\n  // Constructeur\n  function TransferPage(props) {\n    var _this;\n\n    _classCallCheck(this, TransferPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransferPage).call(this, props));\n    _this.state = {\n      transfer: null,\n      isLoading: true\n    };\n    _this.loadTransferDetails = _this.loadTransferDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TransferPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentUser();\n      var id = this.props.match.params.id;\n      this.loadTransferDetails(id);\n    }\n  }, {\n    key: \"loadTransferDetails\",\n    value: function loadTransferDetails(id) {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getTransfer(id).then(function (response) {\n        _this2.setState({\n          transfer: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this2.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleCancelTransfer\",\n    value: function handleCancelTransfer(id) {\n      var _this3 = this;\n\n      MySwal.fire({\n        buttonsStyling: false,\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        title: 'Entrer votre motif',\n        input: 'textarea',\n        inputPlaceholder: 'Votre motif ...',\n        showCancelButton: true,\n        confirmButtonText: 'Confirmer',\n        cancelButtonText: 'Annuler'\n      }).then(function (result) {\n        if (result.value) {\n          var reason = result.value;\n          cancelTransfer(id, reason).then(function (response) {\n            /*return */\n            MySwal.fire({\n              type: 'success',\n              title: 'Votre operation a été enregistrée',\n              showConfirmButton: false,\n              timer: 1500\n            });\n\n            _this3.loadTransfersList();\n          }).catch(function (error) {\n            if (error.status === 401) {\n              MySwal.fire({\n                type: 'error',\n                title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                showConfirmButton: false,\n                timer: 1500\n              });\n            } else {\n              MySwal.fire({\n                type: 'warning',\n                title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                showConfirmButton: false,\n                timer: 1500\n              });\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleAcceptTransfer\",\n    value: function handleAcceptTransfer(id) {\n      var _this4 = this;\n\n      acceptTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this4.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          MySwal.fire({\n            type: 'error',\n            title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n            showConfirmButton: false,\n            timer: 1500\n          }); //this.props.history.push('/login');\n        } else {\n          MySwal.fire({\n            type: 'warning',\n            title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n            showConfirmButton: false,\n            timer: 1500\n          });\n\n          _this4.props.history.push('/login');\n        }\n      });\n    }\n  }, {\n    key: \"handleSendTransfer\",\n    value: function handleSendTransfer(id) {\n      var _this5 = this;\n\n      sendTransfer(id).then(function (response) {\n        /*return */\n        MySwal.fire({\n          type: 'success',\n          title: 'Votre operation a été enregistrée',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n        _this5.loadTransfersList();\n      }).catch(function (error) {\n        if (error.status === 401) {\n          MySwal.fire({\n            type: 'error',\n            title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n            showConfirmButton: false,\n            timer: 1500\n          });\n\n          _this5.props.history.push('/login');\n        } else {\n          MySwal.fire({\n            type: 'warning',\n            title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(state) {\n      switch (state) {\n        case 'accepted':\n          return React.createElement(React.Fragment, null, React.createElement(Button, {\n            className: \"btn-link\",\n            color: \"success\",\n            style: {\n              pointerEvents: 'none'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 389\n            },\n            __self: this\n          }, \"Valid\\xE9e\"), \" \", React.createElement(Button, {\n            className: \"btn-icon btn-simple\",\n            onClick: this.handleCancelTransfer,\n            style: {\n              border: 0\n            },\n            color: \"primary\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 390\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391\n            },\n            __self: this\n          })));\n\n        case 'in_progress':\n          return React.createElement(React.Fragment, null, React.createElement(Button, {\n            className: \"btn-link\",\n            color: \"warning\",\n            style: {\n              pointerEvents: 'none'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395\n            },\n            __self: this\n          }, \"Encours\"), \" \", React.createElement(Button, {\n            className: \"btn-icon btn-simple\",\n            onClick: this.handleCancelTransfer,\n            style: {\n              border: 0\n            },\n            color: \"primary\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 396\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397\n            },\n            __self: this\n          })));\n\n        case 'cancelled':\n          return React.createElement(React.Fragment, null, React.createElement(Button, {\n            className: \"btn-link\",\n            color: \"danger\",\n            style: {\n              pointerEvents: 'none'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 401\n            },\n            __self: this\n          }, \"Rejet\\xE9e\"), \" \", React.createElement(Button, {\n            className: \"btn-icon btn-simple\",\n            onClick: this.handleCancelTransfer,\n            style: {\n              border: 0\n            },\n            color: \"primary\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 403\n            },\n            __self: this\n          })));\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"renderBtnCTN\",\n    value: function renderBtnCTN(link) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleAcceptTransfer,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleCancelTransfer,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      })), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        href: link,\n        style: {\n          border: 0\n        },\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderBtnCTRL\",\n    value: function renderBtnCTRL(link) {\n      return React.createElement(React.Fragment, null, this.renderBtnCTN(link), \" \", React.createElement(Button, {\n        className: \"btn-icon btn-simple\",\n        onClick: this.handleSendTransfer,\n        style: {\n          border: 0\n        },\n        color: \"warning\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-paper-plane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          transfer = _this$state.transfer;\n\n      if (isLoading) {\n        return React.createElement(LoadingIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.notFound || !this.props.currentUser) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          },\n          __self: this\n        });\n      }\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(BreadcrumbItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/user/lsttransfers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"Mes virements\")), React.createElement(BreadcrumbItem, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, \"Virement\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"Virement\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"principalAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, \"N\\xB0 compte d\\xE9biteur\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, transfer.principalAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"beneficiaryAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \"N\\xB0 compte b\\xE9n\\xE9ficiaire\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, transfer.beneficiaryAccount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transactionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, transfer.transactionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transferReason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, \"Motif\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, transfer.transferReason))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"executionDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, \"Date d'execution\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, formatDateTime(transfer.executionDate)))),\n      /********************* Echange **************/\n      transfer.principalCurrency === \"MAD\" && transfer.beneficiaryCurrency !== \"MAD\" ? React.createElement(React.Fragment, null, transfer.transactionAmount > transfer.largeAmount ? React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"tradingTicket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, \"Ticket de n\\xE9gociation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, transfer.tradingTicket))) : null, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"transferNature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, \"Nature de transfert\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, transfer.transferNature))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"authorizationNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \"N\\xB0 d'autorisation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, transfer.authorizationNumber))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"authorizationValidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, \"Validit\\xE9 de l'autorisation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, transfer.authorizationValidity))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"exchangeRate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, \"Cours de change\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, transfer.exchangeRate)))) : null\n      /********************* Commission ****************/\n      , React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"chargeType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, \"Type de charge\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, transfer.chargeType))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"commissionCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \"Taux applique\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, transfer.applyedRate + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"commissionAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Montant commission\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, transfer.commissionAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"commissionTVA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, \"TVA sur commission\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, \" \", transfer.commissionTVA + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"totalAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \"Montant total\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, transfer.totalAmount + \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, transfer.transactionCurrency)))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"applyCommission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, \"Appliquer commission\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, transfer.applyCommission ? \"Oui\" : \"Non\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"applyCommission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \"Etat/Action\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, this.props.currentUser.role === \"ROLE_AGENT\" ? this.renderSwitch(transfer.state) : null, this.props.currentUser.role === \"ROLE_CTN\" ? this.renderBtnCTN(\"/user/transfers/\" + transfer.id) : null, this.props.currentUser.role === \"ROLE_CTRL\" ? this.renderBtnCTRL(\"/user/transfers/\" + transfer.id) : null)), transfer.state === 'cancelled' && this.props.currentUser.role === \"ROLE_AGENT\" ? React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"col-md-4 col-form-label\",\n        for: \"applyCommissio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, \"Motif de l'annulation\"), React.createElement(FormGroup, {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, transfer.cancelledMotif))) : null)), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return TransferPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentUser: getCurrentUser\n})(TransferPage);","map":{"version":3,"sources":["/Users/geekh04/workspace/BCP/transactionMDP-client-side/src/views/User/Transfer/TransferPage.jsx"],"names":["React","Link","acceptTransfer","cancelTransfer","getTransfer","sendTransfer","formatDateTime","Card","CardHeader","CardBody","Row","Col","FormGroup","Label","Button","Breadcrumb","BreadcrumbItem","NotFound","LoadingIndicator","connect","getCurrentUser","Swal","withReactContent","MySwal","TransferPage","props","state","transfer","isLoading","loadTransferDetails","bind","id","match","params","setState","then","response","catch","error","status","notFound","serverError","fire","buttonsStyling","customClass","confirmButton","cancelButton","title","input","inputPlaceholder","showCancelButton","confirmButtonText","cancelButtonText","result","value","reason","type","showConfirmButton","timer","loadTransfersList","message","history","push","pointerEvents","handleCancelTransfer","border","link","handleAcceptTransfer","renderBtnCTN","handleSendTransfer","currentUser","handleSubmit","principalAccount","beneficiaryAccount","transactionAmount","transferReason","executionDate","principalCurrency","beneficiaryCurrency","largeAmount","tradingTicket","transferNature","authorizationNumber","authorizationValidity","exchangeRate","chargeType","applyedRate","commissionAmount","commissionTVA","totalAmount","transactionCurrency","applyCommission","role","renderSwitch","renderBtnCTRL","cancelledMotif","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {acceptTransfer, cancelTransfer, getTransfer, sendTransfer} from '../../../util/APIUtils';\n// react plugin used to create datetime\nimport { formatDateTime } from \"../../../util/Helpers\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Button,\n  Breadcrumb,\n  BreadcrumbItem\n} from \"reactstrap\";\nimport NotFound from \"../../NotFound\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\n\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../../../redux/actions\";\n\n// Sweet alert\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nconst MySwal = withReactContent(Swal);\n\n/* Cette page présente un formulaire qui contient l'ensemble des informations demandées pour effectuer un virement */\n\n/*class TransferPage2 extends React.Component {\n    // Constructeur\n    constructor(props) {\n        super(props);\n        this.state = {\n            transfer: null,\n            isLoading: true,\n        };\n        this.loadTransferDetails = this.loadTransferDetails.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getCurrentUser();\n        const id = this.props.match.params.id;\n        this.loadTransferDetails(id);\n    }\n\n    loadTransferDetails(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        getTransfer(id)\n            .then(response => {\n                this.setState({\n                    transfer: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n\n    renderSwitch(state) {\n        switch(state) {\n            case 'accepted':\n                return <p className=\"form-control-static\" style={{color:\"#24ff47\"}}>Validée</p>;\n            case 'in_progress':\n                return <p className=\"form-control-static\" style={{color:\"#ffaa23\"}} color=\"warning\">Encours</p>;\n            case 'canceled':\n                return <p className=\"form-control-static\" style={{color:\"#FF0000\"}}>Rejetée</p>;\n            default:\n                return null;\n        }\n    }\n\n  render() {\n      const { isLoading, transfer } = this.state;\n      if(isLoading) {\n          return <LoadingIndicator/>;\n      }\n\n      if(this.state.notFound ) {\n          return <NotFound />;\n      }\n\n    /*if(this.state.serverError) {\n      return <ServerError />;\n    }*\n    return (\n        <>\n            <div className=\"content\">\n                <Breadcrumb>\n                    <BreadcrumbItem><a href=\"/user/lsttransfers\">Mes virements</a></BreadcrumbItem>\n                    <BreadcrumbItem active>Virement</BreadcrumbItem>\n                </Breadcrumb>\n                <Row>\n                    <Col md=\"12\">\n                      <Card>\n                        <CardBody>\n                            <Row>\n                                <Col md=\"2\"/>\n                                <Col md=\"8\">\n                          <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-row\">\n                              <FormGroup className=\"col-md-6\">\n                                <Label for=\"principalAccount\">N° compte débiteur</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.principalAccount+\" \"}<span>{transfer.principalCurrency}</span>\n                                </h4>\n                              </FormGroup>\n\n                              <FormGroup className=\"col-md-6\">\n                                <Label for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.beneficiaryAccount+\" \"}<span>{transfer.beneficiaryCurrency}</span>\n                                </h4>\n                              </FormGroup>\n                            </div>\n\n                            <div className=\"form-row\">\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"transactionAmount\">Montant</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.transactionAmount+\" \"}<span>{transfer.transactionCurrency}</span>\n                                </h4>\n                              </FormGroup>\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"transferReason\">Motif</Label>\n                                <h4 className=\"card-title\">{transfer.transferReason}</h4>\n                              </FormGroup>\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"executionDate\">Date d'execution</Label>\n                                <h4 className=\"card-title\">{formatDateTime(transfer.executionDate)}</h4>\n                              </FormGroup>\n                            </div>\n                            {/********************* Echange **************\n                              (transfer.principalCurrency===\"MAD\" && transfer.beneficiaryCurrency!==\"MAD\") ?(\n                             <>\n                               {\n                                 (transfer.transactionAmount>transfer.largeAmount)?(\n                                     <FormGroup>\n                                       <Label for=\"tradingTicket\">Ticket de négociation</Label>\n                                       <h4 className=\"card-title\">{transfer.tradingTicket}</h4>\n                                     </FormGroup>\n                                 ):null\n                               }\n                               <FormGroup>\n                                <Label for=\"transferNature\">Nature de transfert</Label>\n                                 <h4 className=\"card-title\">{transfer.transferNature}</h4>\n                              </FormGroup>\n\n                              <div className=\"form-row\">\n                                <FormGroup className=\"col-md-3\">\n                                  <Label for=\"authorizationNumber\">N° d'autorisation</Label>\n                                  <h4 className=\"card-title\">{transfer.authorizationNumber}</h4>\n                                </FormGroup>\n                                <FormGroup className=\"col-md-6\">\n                                  <Label for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                                  <h4 className=\"card-title\">{transfer.authorizationValidity}</h4>\n                                </FormGroup>\n                                <FormGroup className=\"col-md-3\">\n                                  <Label for=\"exchangeRate\">Cours de change</Label>\n                                  <h4 className=\"card-title\">{transfer.exchangeRate}</h4>\n                                </FormGroup>\n                               </div>\n                             </>):null\n                              /********************* Commission **************}\n                            <FormGroup>\n                              <Label for=\"chargeType\">Type de charge</Label>\n                              <h4 className=\"card-title\">{transfer.chargeType}</h4>\n                            </FormGroup>\n\n                            <div className=\"form-row\">\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"commissionCode\">Taux applique</Label>\n                                <h4 className=\"card-title\">{transfer.applyedRate+\" \"}<span></span></h4>\n                              </FormGroup>\n\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"commissionAmount\">Montant commission</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.commissionAmount+\" \"}<span></span>\n                                </h4>\n                              </FormGroup>\n\n                              <FormGroup className=\"col-md-4\">\n                                <Label for=\"commissionTVA\">TVA sur commission</Label>\n                                <h4 className=\"card-title\">\n                                  {transfer.commissionTVA+\" \"}<span></span>\n                                </h4>\n                              </FormGroup>\n                            </div>\n\n                            <FormGroup check>\n                              <Label for=\"totalAmount\">Montant total</Label>\n                              <h4 className=\"card-title\">\n                                {transfer.totalAmount+\" \"}<span>{transfer.transactionCurrency}</span>\n                              </h4>\n                            </FormGroup>\n                            <FormGroup check>\n                              <Label>Appliquer commission</Label>\n                              <h4 className=\"card-title\">\n                                {transfer.applyCommission?(\"Oui\"):\"Non\"}\n                              </h4>\n                            </FormGroup>\n                          </form>\n                                </Col>\n                                <Col md=\"2\"/>\n                            </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    );\n  }\n};*/\n\nclass TransferPage extends React.Component {\n    // Constructeur\n    constructor(props) {\n        super(props);\n        this.state = {\n            transfer: null,\n            isLoading: true,\n        };\n        this.loadTransferDetails = this.loadTransferDetails.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getCurrentUser();\n        const id = this.props.match.params.id;\n        this.loadTransferDetails(id);\n    }\n\n    loadTransferDetails(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        getTransfer(id)\n            .then(response => {\n                this.setState({\n                    transfer: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n\n    handleCancelTransfer(id) {\n        MySwal.fire({\n            buttonsStyling:false,\n            customClass: {\n                confirmButton: 'btn btn-success',\n                cancelButton: 'btn btn-danger',\n            },\n            title: 'Entrer votre motif',\n            input: 'textarea',\n            inputPlaceholder: 'Votre motif ...',\n            showCancelButton: true,\n            confirmButtonText: 'Confirmer',\n            cancelButtonText: 'Annuler'\n        }).then((result) => {\n            if (result.value) {\n                let reason = result.value;\n                cancelTransfer(id, reason)\n                    .then(response => {\n\n                        /*return */MySwal.fire({\n                            type: 'success',\n                            title: 'Votre operation a été enregistrée',\n                            showConfirmButton: false,\n                            timer: 1500\n                        });\n                        this.loadTransfersList();\n                    }).catch(error => {\n                    if(error.status === 401) {\n                        MySwal.fire({\n                          type: 'error',\n                          title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                          showConfirmButton: false,\n                          timer: 1500\n                        })\n                    } else {\n                         MySwal.fire({\n                          type: 'warning',\n                          title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                          showConfirmButton: false,\n                          timer: 1500\n                        })\n                    }\n                });\n            }\n        })\n    }\n\n    handleAcceptTransfer(id) {\n        acceptTransfer(id)\n            .then(response => {\n\n                /*return */MySwal.fire({\n                    type: 'success',\n                    title: 'Votre operation a été enregistrée',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                this.loadTransfersList();\n            }).catch(error => {\n            if(error.status === 401) {\n                MySwal.fire({\n                    type: 'error',\n                    title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                //this.props.history.push('/login');\n            } else {\n                MySwal.fire({\n                    type: 'warning',\n                    title: error.message || 'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                this.props.history.push('/login');\n            }\n        });\n    }\n\n    handleSendTransfer(id) {\n        sendTransfer(id)\n            .then(response => {\n\n                /*return */MySwal.fire({\n                    type: 'success',\n                    title: 'Votre operation a été enregistrée',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                this.loadTransfersList();\n            }).catch(error => {\n            if(error.status === 401) {\n                MySwal.fire({\n                    type: 'error',\n                    title: 'Vous avez été déconnecté. Veuillez vous connecter pour effectuer cette opération.',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n                this.props.history.push('/login');\n            } else {\n                MySwal.fire({\n                    type: 'warning',\n                    title: error.message ||'Pardon! Quelque chose s\\'est mal passé. Veuillez réessayer!',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n            }\n        });\n    }\n\n    renderSwitch(state) {\n        switch(state) {\n            case 'accepted':\n                return <><Button className=\"btn-link\" color=\"success\" style={{pointerEvents: 'none'}}>Validée</Button>\n                    {` `}<Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n                        <i className=\"fa fa-times\" />\n                    </Button>\n                </>;\n            case 'in_progress':\n                return <><Button className=\"btn-link\" color=\"warning\" style={{pointerEvents: 'none'}}>Encours</Button>\n                    {` `}<Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n                        <i className=\"fa fa-times\" />\n                    </Button>\n                </>;\n            case 'cancelled':\n                return <><Button className=\"btn-link\" color=\"danger\" style={{pointerEvents: 'none'}}>Rejetée</Button>\n                    {` `}<Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n                        <i className=\"fa fa-times\" />\n                    </Button>\n                </>;\n            default:\n                return null;\n        }\n    }\n\n    renderBtnCTN(link) {\n        return(\n            <>\n                <Button className=\"btn-icon btn-simple\" onClick={this.handleAcceptTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n                    <i className=\"fa fa-check\"></i>\n                </Button>{` `}\n                <Button className=\"btn-icon btn-simple\" onClick={this.handleCancelTransfer} style={{border:0}} color=\"primary\" size=\"sm\">\n                    <i className=\"fa fa-times\" />\n                </Button>{` `}\n                <Button className=\"btn-icon btn-simple\" href={link} style={{border:0}} color=\"primary\" size=\"sm\">\n                    <i className=\"fa fa-eye\"></i>\n                </Button>\n            </>\n        );\n    }\n\n    renderBtnCTRL(link) {\n        return(\n            <>\n                {this.renderBtnCTN(link)}\n                {` `}\n                <Button className=\"btn-icon btn-simple\" onClick={this.handleSendTransfer} style={{border:0}} color=\"warning\" size=\"sm\">\n                    <i className=\"fa fa-paper-plane\"></i>\n                </Button>\n            </>\n        );\n    }\n\n  render() {\n      const { isLoading, transfer } = this.state;\n      if(isLoading) {\n          return <LoadingIndicator />;\n      }\n\n      if(this.state.notFound || !this.props.currentUser) {\n          return <NotFound />;\n      }\n\n      /*if(this.state.serverError) {\n        return <ServerError />;\n      }*/\n    return (\n        <>\n          <div className=\"content\">\n              <Breadcrumb>\n                  <BreadcrumbItem><Link to=\"/user/lsttransfers\">Mes virements</Link></BreadcrumbItem>\n                  <BreadcrumbItem active>Virement</BreadcrumbItem>\n              </Breadcrumb>\n            <Row>\n              <Col md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <h4 className=\"title\">Virement</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col md=\"2\"/>\n                      <Col md=\"8\">\n                        {/* Virement INTRA en agence */}\n                              <form onSubmit={this.handleSubmit} className=\"form-horizontal\">\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"principalAccount\">N° compte débiteur</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">\n                                              {transfer.principalAccount+\" \"}<span>{/*transfer.principalCurrency*/}</span>\n                                          </p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"beneficiaryAccount\">N° compte bénéficiaire</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">\n                                              {transfer.beneficiaryAccount+\" \"}<span>{/*transfer.beneficiaryCurrency*/}</span>\n                                          </p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"}  for=\"transactionAmount\">Montant</Label>\n                                      <FormGroup  className=\"col-md-8\">\n                                          <p className=\"form-control-static\">\n                                              {transfer.transactionAmount+\" \"}<span>{/*transfer.transactionCurrency*/}</span>\n                                          </p>\n                                      </FormGroup>\n                                  </div>\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"transferReason\">Motif</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">{transfer.transferReason}</p>\n                                      </FormGroup>\n                                  </div>\n\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"executionDate\">Date d'execution</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                          <p className=\"form-control-static\">{formatDateTime(transfer.executionDate)}</p>\n                                      </FormGroup>\n                                  </div>\n\n                          {/********************* Echange **************/\n                          (transfer.principalCurrency===\"MAD\" && transfer.beneficiaryCurrency!==\"MAD\") ?(\n                          <>\n                            {\n                              (transfer.transactionAmount>transfer.largeAmount)?(\n                                  <div className=\"form-row\">\n                                      <Label className={\"col-md-4 col-form-label\"} for=\"tradingTicket\">Ticket de négociation</Label>\n                                      <FormGroup className=\"col-md-8\">\n                                        <p className=\"form-control-static\">{transfer.tradingTicket}</p>\n                                      </FormGroup>\n                                  </div>\n                              ):null\n                            }\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"transferNature\">Nature de transfert</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.transferNature}</p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                     <Label className={\"col-md-4 col-form-label\"} for=\"authorizationNumber\">N° d'autorisation</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.authorizationNumber}</p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                  <Label className={\"col-md-4 col-form-label\"} for=\"authorizationValidity\">Validité de l'autorisation</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.authorizationValidity}</p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"exchangeRate\">Cours de change</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.exchangeRate}</p>\n                                    </FormGroup>\n                                </div>\n                              </>):null\n                              /********************* Commission ****************/}\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"chargeType\">Type de charge</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.chargeType}</p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"commissionCode\">Taux applique</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.applyedRate+\" \"}<span></span></p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"commissionAmount\">Montant commission</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.commissionAmount+\" \"}<span></span></p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"commissionTVA\">TVA sur commission</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\"> {transfer.commissionTVA+\" \"}<span></span></p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"totalAmount\">Montant total</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                      <p className=\"form-control-static\">{transfer.totalAmount+\" \"}<span>{transfer.transactionCurrency}</span></p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"applyCommission\">Appliquer commission</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                        <p className=\"form-control-static\">{transfer.applyCommission?\"Oui\":\"Non\"}</p>\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\"form-row\">\n                                    <Label className={\"col-md-4 col-form-label\"} for=\"applyCommission\">Etat/Action</Label>\n                                    <FormGroup className=\"col-md-8\">\n                                        {this.props.currentUser.role===\"ROLE_AGENT\"?this.renderSwitch(transfer.state):null}\n                                        {this.props.currentUser.role===\"ROLE_CTN\"?this.renderBtnCTN(\"/user/transfers/\"+transfer.id):null}\n                                        {this.props.currentUser.role===\"ROLE_CTRL\"?this.renderBtnCTRL(\"/user/transfers/\"+transfer.id):null}\n                                    </FormGroup>\n                                </div>\n                                  {transfer.state==='cancelled' && this.props.currentUser.role===\"ROLE_AGENT\"?(\n                                      <div className=\"form-row\">\n                                          <Label className={\"col-md-4 col-form-label\"} for=\"applyCommissio\">Motif de l'annulation</Label>\n                                          <FormGroup className=\"col-md-8\">\n                                              <p className=\"form-control-static\">{transfer.cancelledMotif}</p>\n                                          </FormGroup>\n                                      </div>\n                                  ):null}\n                              </form>\n                      </Col>\n                      <Col md=\"2\"/>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        currentUser: state.currentUser\n    };\n};\n\nexport default connect(mapStateToProps, { getCurrentUser })(TransferPage);\n\n"]},"metadata":{},"sourceType":"module"}